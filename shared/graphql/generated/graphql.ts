/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A floating point number that requires more precision than IEEE 754 binary 64 */
  BigFloat: { input: string; output: string; }
  /**
   * A signed eight-byte integer. The upper big integer values are greater than the
   * max value for a JavaScript number. Therefore all big integers will be output as
   * strings and not numbers.
   */
  BigInt: { input: string; output: string; }
  /** A location in a connection that can be used for resuming pagination. */
  Cursor: { input: any; output: any; }
  /**
   * A point in time as described by the [ISO
   * 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
   */
  Datetime: { input: string; output: string; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type Account = Node & {
  __typename?: 'Account';
  /** Reads and enables pagination through a set of `AccountEpochBalanceChange`. */
  accountEpochBalanceChangesByAccountId: AccountEpochBalanceChangesConnection;
  /** Reads and enables pagination through a set of `AccountFundingEvent`. */
  accountFundingEventsByAccountId: AccountFundingEventsConnection;
  alias?: Maybe<Scalars['String']['output']>;
  boundRedeemAddress?: Maybe<Scalars['String']['output']>;
  /** Reads a single `Broker` that is related to this `Account`. */
  brokerByAccountId?: Maybe<Broker>;
  /**
   * Reads and enables pagination through a set of `Broker`.
   * @deprecated Please use brokerByAccountId instead
   */
  brokersByAccountId: BrokersConnection;
  /** Reads and enables pagination through a set of `Extrinsic`. */
  extrinsicsBySubmitterId: ExtrinsicsConnection;
  id: Scalars['Int']['output'];
  idHex: Scalars['String']['output'];
  idSs58: Scalars['String']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `Account`. */
  liquidityProviderByAccountId?: Maybe<LiquidityProvider>;
  /**
   * Reads and enables pagination through a set of `LiquidityProvider`.
   * @deprecated Please use liquidityProviderByAccountId instead
   */
  liquidityProvidersByAccountId: LiquidityProvidersConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  role: AccountRole;
  /** Reads a single `Validator` that is related to this `Account`. */
  validatorByAccountId?: Maybe<Validator>;
  /**
   * Reads and enables pagination through a set of `Validator`.
   * @deprecated Please use validatorByAccountId instead
   */
  validatorsByAccountId: ValidatorsConnection;
};


export type AccountAccountEpochBalanceChangesByAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountEpochBalanceChangeCondition>;
  filter?: InputMaybe<AccountEpochBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountEpochBalanceChangesOrderBy>>;
};


export type AccountAccountFundingEventsByAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountFundingEventCondition>;
  filter?: InputMaybe<AccountFundingEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountFundingEventsOrderBy>>;
};


export type AccountBrokersByAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerCondition>;
  filter?: InputMaybe<BrokerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokersOrderBy>>;
};


export type AccountExtrinsicsBySubmitterIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ExtrinsicCondition>;
  filter?: InputMaybe<ExtrinsicFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;
};


export type AccountLiquidityProvidersByAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityProviderCondition>;
  filter?: InputMaybe<LiquidityProviderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityProvidersOrderBy>>;
};


export type AccountValidatorsByAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ValidatorCondition>;
  filter?: InputMaybe<ValidatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;
};

export type AccountAggregates = {
  __typename?: 'AccountAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AccountAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AccountDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AccountMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AccountMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AccountStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AccountStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AccountSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AccountVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AccountVarianceSampleAggregates>;
};

export type AccountAverageAggregates = {
  __typename?: 'AccountAverageAggregates';
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type AccountCondition = {
  /** Checks for equality with the object’s `alias` field. */
  alias?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `boundRedeemAddress` field. */
  boundRedeemAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `idHex` field. */
  idHex?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `idSs58` field. */
  idSs58?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `role` field. */
  role?: InputMaybe<AccountRole>;
};

export type AccountDistinctCountAggregates = {
  __typename?: 'AccountDistinctCountAggregates';
  /** Distinct count of alias across the matching connection */
  alias?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boundRedeemAddress across the matching connection */
  boundRedeemAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idHex across the matching connection */
  idHex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idSs58 across the matching connection */
  idSs58?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of role across the matching connection */
  role?: Maybe<Scalars['BigInt']['output']>;
};

export type AccountEpochBalanceChange = Node & {
  __typename?: 'AccountEpochBalanceChange';
  /** Reads a single `Account` that is related to this `AccountEpochBalanceChange`. */
  accountByAccountId: Account;
  accountId: Scalars['Int']['output'];
  balanceChange: Scalars['BigFloat']['output'];
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `Epoch` that is related to this `AccountEpochBalanceChange`. */
  epochByEpochId: Epoch;
  epochId: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  startOfEpochBalance: Scalars['BigFloat']['output'];
};

export type AccountEpochBalanceChangeAggregates = {
  __typename?: 'AccountEpochBalanceChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AccountEpochBalanceChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AccountEpochBalanceChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AccountEpochBalanceChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AccountEpochBalanceChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AccountEpochBalanceChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AccountEpochBalanceChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AccountEpochBalanceChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AccountEpochBalanceChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AccountEpochBalanceChangeVarianceSampleAggregates>;
};

export type AccountEpochBalanceChangeAverageAggregates = {
  __typename?: 'AccountEpochBalanceChangeAverageAggregates';
  /** Mean average of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `AccountEpochBalanceChange` object types. All
 * fields are tested for equality and combined with a logical ‘and.’
 */
export type AccountEpochBalanceChangeCondition = {
  /** Checks for equality with the object’s `accountId` field. */
  accountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `balanceChange` field. */
  balanceChange?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `endOfEpochBalance` field. */
  endOfEpochBalance?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `epochId` field. */
  epochId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `startOfEpochBalance` field. */
  startOfEpochBalance?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type AccountEpochBalanceChangeDistinctCountAggregates = {
  __typename?: 'AccountEpochBalanceChangeDistinctCountAggregates';
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `AccountEpochBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type AccountEpochBalanceChangeFilter = {
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<IntFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AccountEpochBalanceChangeFilter>>;
  /** Filter by the object’s `balanceChange` field. */
  balanceChange?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `endOfEpochBalance` field. */
  endOfEpochBalance?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `epochId` field. */
  epochId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AccountEpochBalanceChangeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AccountEpochBalanceChangeFilter>>;
  /** Filter by the object’s `startOfEpochBalance` field. */
  startOfEpochBalance?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `AccountEpochBalanceChange` for usage during aggregation. */
export type AccountEpochBalanceChangeGroupBy =
  | 'ACCOUNT_ID'
  | 'BALANCE_CHANGE'
  | 'END_OF_EPOCH_BALANCE'
  | 'EPOCH_ID'
  | 'START_OF_EPOCH_BALANCE';

export type AccountEpochBalanceChangeHavingAverageInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingDistinctCountInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `AccountEpochBalanceChange` aggregates. */
export type AccountEpochBalanceChangeHavingInput = {
  AND?: InputMaybe<Array<AccountEpochBalanceChangeHavingInput>>;
  OR?: InputMaybe<Array<AccountEpochBalanceChangeHavingInput>>;
  average?: InputMaybe<AccountEpochBalanceChangeHavingAverageInput>;
  distinctCount?: InputMaybe<AccountEpochBalanceChangeHavingDistinctCountInput>;
  max?: InputMaybe<AccountEpochBalanceChangeHavingMaxInput>;
  min?: InputMaybe<AccountEpochBalanceChangeHavingMinInput>;
  stddevPopulation?: InputMaybe<AccountEpochBalanceChangeHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AccountEpochBalanceChangeHavingStddevSampleInput>;
  sum?: InputMaybe<AccountEpochBalanceChangeHavingSumInput>;
  variancePopulation?: InputMaybe<AccountEpochBalanceChangeHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AccountEpochBalanceChangeHavingVarianceSampleInput>;
};

export type AccountEpochBalanceChangeHavingMaxInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingMinInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingStddevPopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingStddevSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingSumInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingVariancePopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeHavingVarianceSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  balanceChange?: InputMaybe<HavingBigfloatFilter>;
  endOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startOfEpochBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountEpochBalanceChangeMaxAggregates = {
  __typename?: 'AccountEpochBalanceChangeMaxAggregates';
  /** Maximum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountEpochBalanceChangeMinAggregates = {
  __typename?: 'AccountEpochBalanceChangeMinAggregates';
  /** Minimum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountEpochBalanceChangeStddevPopulationAggregates = {
  __typename?: 'AccountEpochBalanceChangeStddevPopulationAggregates';
  /** Population standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountEpochBalanceChangeStddevSampleAggregates = {
  __typename?: 'AccountEpochBalanceChangeStddevSampleAggregates';
  /** Sample standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountEpochBalanceChangeSumAggregates = {
  __typename?: 'AccountEpochBalanceChangeSumAggregates';
  /** Sum of accountId across the matching connection */
  accountId: Scalars['BigInt']['output'];
  /** Sum of balanceChange across the matching connection */
  balanceChange: Scalars['BigFloat']['output'];
  /** Sum of endOfEpochBalance across the matching connection */
  endOfEpochBalance: Scalars['BigFloat']['output'];
  /** Sum of epochId across the matching connection */
  epochId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of startOfEpochBalance across the matching connection */
  startOfEpochBalance: Scalars['BigFloat']['output'];
};

export type AccountEpochBalanceChangeVariancePopulationAggregates = {
  __typename?: 'AccountEpochBalanceChangeVariancePopulationAggregates';
  /** Population variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountEpochBalanceChangeVarianceSampleAggregates = {
  __typename?: 'AccountEpochBalanceChangeVarianceSampleAggregates';
  /** Sample variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of balanceChange across the matching connection */
  balanceChange?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of endOfEpochBalance across the matching connection */
  endOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of startOfEpochBalance across the matching connection */
  startOfEpochBalance?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `AccountEpochBalanceChange` values. */
export type AccountEpochBalanceChangesConnection = {
  __typename?: 'AccountEpochBalanceChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountEpochBalanceChangeAggregates>;
  /** A list of edges which contains the `AccountEpochBalanceChange` and cursor to aid in pagination. */
  edges: Array<AccountEpochBalanceChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountEpochBalanceChangeAggregates>>;
  /** A list of `AccountEpochBalanceChange` objects. */
  nodes: Array<AccountEpochBalanceChange>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `AccountEpochBalanceChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `AccountEpochBalanceChange` values. */
export type AccountEpochBalanceChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountEpochBalanceChangeGroupBy>;
  having?: InputMaybe<AccountEpochBalanceChangeHavingInput>;
};

/** A `AccountEpochBalanceChange` edge in the connection. */
export type AccountEpochBalanceChangesEdge = {
  __typename?: 'AccountEpochBalanceChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `AccountEpochBalanceChange` at the end of the edge. */
  node: AccountEpochBalanceChange;
};

/** Methods to use when ordering `AccountEpochBalanceChange`. */
export type AccountEpochBalanceChangesOrderBy =
  | 'ACCOUNT_ID_ASC'
  | 'ACCOUNT_ID_DESC'
  | 'BALANCE_CHANGE_ASC'
  | 'BALANCE_CHANGE_DESC'
  | 'END_OF_EPOCH_BALANCE_ASC'
  | 'END_OF_EPOCH_BALANCE_DESC'
  | 'EPOCH_ID_ASC'
  | 'EPOCH_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'START_OF_EPOCH_BALANCE_ASC'
  | 'START_OF_EPOCH_BALANCE_DESC';

/** A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’ */
export type AccountFilter = {
  /** Filter by the object’s `alias` field. */
  alias?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `boundRedeemAddress` field. */
  boundRedeemAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `idHex` field. */
  idHex?: InputMaybe<StringFilter>;
  /** Filter by the object’s `idSs58` field. */
  idSs58?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AccountFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `role` field. */
  role?: InputMaybe<AccountRoleFilter>;
};

export type AccountFundingEvent = Node & {
  __typename?: 'AccountFundingEvent';
  /** Reads a single `Account` that is related to this `AccountFundingEvent`. */
  accountByAccountId: Account;
  accountId: Scalars['Int']['output'];
  amount: Scalars['BigFloat']['output'];
  /** Reads a single `Epoch` that is related to this `AccountFundingEvent`. */
  epochByEpochId: Epoch;
  epochId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `AccountFundingEvent`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  type: FundingEventType;
};

export type AccountFundingEventAggregates = {
  __typename?: 'AccountFundingEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AccountFundingEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AccountFundingEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AccountFundingEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AccountFundingEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AccountFundingEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AccountFundingEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AccountFundingEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AccountFundingEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AccountFundingEventVarianceSampleAggregates>;
};

export type AccountFundingEventAverageAggregates = {
  __typename?: 'AccountFundingEventAverageAggregates';
  /** Mean average of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `AccountFundingEvent` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type AccountFundingEventCondition = {
  /** Checks for equality with the object’s `accountId` field. */
  accountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `epochId` field. */
  epochId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<FundingEventType>;
};

export type AccountFundingEventDistinctCountAggregates = {
  __typename?: 'AccountFundingEventDistinctCountAggregates';
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `AccountFundingEvent` object types. All fields are combined with a logical ‘and.’ */
export type AccountFundingEventFilter = {
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AccountFundingEventFilter>>;
  /** Filter by the object’s `epochId` field. */
  epochId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AccountFundingEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AccountFundingEventFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<FundingEventTypeFilter>;
};

/** Grouping methods for `AccountFundingEvent` for usage during aggregation. */
export type AccountFundingEventGroupBy =
  | 'ACCOUNT_ID'
  | 'AMOUNT'
  | 'EPOCH_ID'
  | 'EVENT_ID'
  | 'TYPE';

export type AccountFundingEventHavingAverageInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingDistinctCountInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `AccountFundingEvent` aggregates. */
export type AccountFundingEventHavingInput = {
  AND?: InputMaybe<Array<AccountFundingEventHavingInput>>;
  OR?: InputMaybe<Array<AccountFundingEventHavingInput>>;
  average?: InputMaybe<AccountFundingEventHavingAverageInput>;
  distinctCount?: InputMaybe<AccountFundingEventHavingDistinctCountInput>;
  max?: InputMaybe<AccountFundingEventHavingMaxInput>;
  min?: InputMaybe<AccountFundingEventHavingMinInput>;
  stddevPopulation?: InputMaybe<AccountFundingEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AccountFundingEventHavingStddevSampleInput>;
  sum?: InputMaybe<AccountFundingEventHavingSumInput>;
  variancePopulation?: InputMaybe<AccountFundingEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AccountFundingEventHavingVarianceSampleInput>;
};

export type AccountFundingEventHavingMaxInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingMinInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingStddevPopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingStddevSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingSumInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingVariancePopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventHavingVarianceSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  amount?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountFundingEventMaxAggregates = {
  __typename?: 'AccountFundingEventMaxAggregates';
  /** Maximum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountFundingEventMinAggregates = {
  __typename?: 'AccountFundingEventMinAggregates';
  /** Minimum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountFundingEventStddevPopulationAggregates = {
  __typename?: 'AccountFundingEventStddevPopulationAggregates';
  /** Population standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountFundingEventStddevSampleAggregates = {
  __typename?: 'AccountFundingEventStddevSampleAggregates';
  /** Sample standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountFundingEventSumAggregates = {
  __typename?: 'AccountFundingEventSumAggregates';
  /** Sum of accountId across the matching connection */
  accountId: Scalars['BigInt']['output'];
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of epochId across the matching connection */
  epochId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type AccountFundingEventVariancePopulationAggregates = {
  __typename?: 'AccountFundingEventVariancePopulationAggregates';
  /** Population variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountFundingEventVarianceSampleAggregates = {
  __typename?: 'AccountFundingEventVarianceSampleAggregates';
  /** Sample variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `AccountFundingEvent` values. */
export type AccountFundingEventsConnection = {
  __typename?: 'AccountFundingEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountFundingEventAggregates>;
  /** A list of edges which contains the `AccountFundingEvent` and cursor to aid in pagination. */
  edges: Array<AccountFundingEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountFundingEventAggregates>>;
  /** A list of `AccountFundingEvent` objects. */
  nodes: Array<AccountFundingEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `AccountFundingEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `AccountFundingEvent` values. */
export type AccountFundingEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountFundingEventGroupBy>;
  having?: InputMaybe<AccountFundingEventHavingInput>;
};

/** A `AccountFundingEvent` edge in the connection. */
export type AccountFundingEventsEdge = {
  __typename?: 'AccountFundingEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `AccountFundingEvent` at the end of the edge. */
  node: AccountFundingEvent;
};

/** Methods to use when ordering `AccountFundingEvent`. */
export type AccountFundingEventsOrderBy =
  | 'ACCOUNT_ID_ASC'
  | 'ACCOUNT_ID_DESC'
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'EPOCH_ID_ASC'
  | 'EPOCH_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

/** Grouping methods for `Account` for usage during aggregation. */
export type AccountGroupBy =
  | 'ALIAS'
  | 'BOUND_REDEEM_ADDRESS'
  | 'ROLE';

export type AccountHavingAverageInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingDistinctCountInput = {
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Account` aggregates. */
export type AccountHavingInput = {
  AND?: InputMaybe<Array<AccountHavingInput>>;
  OR?: InputMaybe<Array<AccountHavingInput>>;
  average?: InputMaybe<AccountHavingAverageInput>;
  distinctCount?: InputMaybe<AccountHavingDistinctCountInput>;
  max?: InputMaybe<AccountHavingMaxInput>;
  min?: InputMaybe<AccountHavingMinInput>;
  stddevPopulation?: InputMaybe<AccountHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AccountHavingStddevSampleInput>;
  sum?: InputMaybe<AccountHavingSumInput>;
  variancePopulation?: InputMaybe<AccountHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AccountHavingVarianceSampleInput>;
};

export type AccountHavingMaxInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingMinInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingStddevPopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingStddevSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingSumInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingVariancePopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingVarianceSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountMaxAggregates = {
  __typename?: 'AccountMaxAggregates';
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountMinAggregates = {
  __typename?: 'AccountMinAggregates';
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountRole =
  | 'BROKER'
  | 'LIQUIDITY_PROVIDER'
  | 'UNREGISTERED'
  | 'VALIDATOR';

/** A filter to be used against AccountRole fields. All fields are combined with a logical ‘and.’ */
export type AccountRoleFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<AccountRole>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<AccountRole>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<AccountRole>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<AccountRole>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<AccountRole>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<AccountRole>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<AccountRole>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<AccountRole>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<AccountRole>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<AccountRole>>;
};

export type AccountStddevPopulationAggregates = {
  __typename?: 'AccountStddevPopulationAggregates';
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountStddevSampleAggregates = {
  __typename?: 'AccountStddevSampleAggregates';
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountSumAggregates = {
  __typename?: 'AccountSumAggregates';
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type AccountVariancePopulationAggregates = {
  __typename?: 'AccountVariancePopulationAggregates';
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountVarianceSampleAggregates = {
  __typename?: 'AccountVarianceSampleAggregates';
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Account` values. */
export type AccountsConnection = {
  __typename?: 'AccountsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account` and cursor to aid in pagination. */
  edges: Array<AccountsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Account>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values. */
export type AccountsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountGroupBy>;
  having?: InputMaybe<AccountHavingInput>;
};

/** A `Account` edge in the connection. */
export type AccountsEdge = {
  __typename?: 'AccountsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node: Account;
};

/** Methods to use when ordering `Account`. */
export type AccountsOrderBy =
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_AVERAGE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_COUNT_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_COUNT_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_DISTINCT_COUNT_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MAX_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_MIN_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_POPULATION_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_STDDEV_SAMPLE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_SUM_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_POPULATION_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_ACCOUNT_ID_VARIANCE_SAMPLE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_AVERAGE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_COUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_COUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MAX_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_MIN_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_SUM_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_ACCOUNT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'ALIAS_ASC'
  | 'ALIAS_DESC'
  | 'BOUND_REDEEM_ADDRESS_ASC'
  | 'BOUND_REDEEM_ADDRESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_AVERAGE_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_COUNT_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_COUNT_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_DISTINCT_COUNT_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MAX_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_MIN_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_STDDEV_SAMPLE_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_SUM_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_SUBMITTER_ID_VARIANCE_SAMPLE_VERSION_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'ID_HEX_ASC'
  | 'ID_HEX_DESC'
  | 'ID_SS58_ASC'
  | 'ID_SS58_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'ROLE_ASC'
  | 'ROLE_DESC';

export type App =
  | 'ALL'
  | 'EXPLORER'
  | 'STAKE'
  | 'SWAP';

/** A filter to be used against App fields. All fields are combined with a logical ‘and.’ */
export type AppFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<App>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<App>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<App>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<App>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<App>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<App>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<App>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<App>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<App>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<App>>;
};

export type Auction = Node & {
  __typename?: 'Auction';
  /** Reads a single `Block` that is related to this `Auction`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  bond: Scalars['BigFloat']['output'];
  currentHeight: Scalars['Int']['output'];
  endBlockNumber: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  redemptionPeriodAsPercentage: Scalars['Int']['output'];
  startBlockNumber: Scalars['Int']['output'];
  targetSetSize: Scalars['Int']['output'];
};

export type AuctionAggregates = {
  __typename?: 'AuctionAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AuctionAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AuctionDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AuctionMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AuctionMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AuctionStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AuctionStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AuctionSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AuctionVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AuctionVarianceSampleAggregates>;
};

export type AuctionAverageAggregates = {
  __typename?: 'AuctionAverageAggregates';
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Auction` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type AuctionCondition = {
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `bond` field. */
  bond?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `currentHeight` field. */
  currentHeight?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `endBlockNumber` field. */
  endBlockNumber?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `minActiveBid` field. */
  minActiveBid?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `projectedLockup` field. */
  projectedLockup?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `redemptionPeriodAsPercentage` field. */
  redemptionPeriodAsPercentage?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `startBlockNumber` field. */
  startBlockNumber?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `targetSetSize` field. */
  targetSetSize?: InputMaybe<Scalars['Int']['input']>;
};

export type AuctionDistinctCountAggregates = {
  __typename?: 'AuctionDistinctCountAggregates';
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of bond across the matching connection */
  bond?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Auction` object types. All fields are combined with a logical ‘and.’ */
export type AuctionFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AuctionFilter>>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `bond` field. */
  bond?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `currentHeight` field. */
  currentHeight?: InputMaybe<IntFilter>;
  /** Filter by the object’s `endBlockNumber` field. */
  endBlockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `minActiveBid` field. */
  minActiveBid?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AuctionFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AuctionFilter>>;
  /** Filter by the object’s `projectedLockup` field. */
  projectedLockup?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `redemptionPeriodAsPercentage` field. */
  redemptionPeriodAsPercentage?: InputMaybe<IntFilter>;
  /** Filter by the object’s `startBlockNumber` field. */
  startBlockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `targetSetSize` field. */
  targetSetSize?: InputMaybe<IntFilter>;
};

/** Grouping methods for `Auction` for usage during aggregation. */
export type AuctionGroupBy =
  | 'BLOCK_ID'
  | 'BOND'
  | 'CURRENT_HEIGHT'
  | 'END_BLOCK_NUMBER'
  | 'MIN_ACTIVE_BID'
  | 'PROJECTED_LOCKUP'
  | 'REDEMPTION_PERIOD_AS_PERCENTAGE'
  | 'START_BLOCK_NUMBER'
  | 'TARGET_SET_SIZE';

export type AuctionHavingAverageInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingDistinctCountInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Auction` aggregates. */
export type AuctionHavingInput = {
  AND?: InputMaybe<Array<AuctionHavingInput>>;
  OR?: InputMaybe<Array<AuctionHavingInput>>;
  average?: InputMaybe<AuctionHavingAverageInput>;
  distinctCount?: InputMaybe<AuctionHavingDistinctCountInput>;
  max?: InputMaybe<AuctionHavingMaxInput>;
  min?: InputMaybe<AuctionHavingMinInput>;
  stddevPopulation?: InputMaybe<AuctionHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AuctionHavingStddevSampleInput>;
  sum?: InputMaybe<AuctionHavingSumInput>;
  variancePopulation?: InputMaybe<AuctionHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AuctionHavingVarianceSampleInput>;
};

export type AuctionHavingMaxInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingMinInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingStddevPopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingStddevSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingSumInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingVariancePopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionHavingVarianceSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  bond?: InputMaybe<HavingBigfloatFilter>;
  currentHeight?: InputMaybe<HavingIntFilter>;
  endBlockNumber?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  minActiveBid?: InputMaybe<HavingBigfloatFilter>;
  projectedLockup?: InputMaybe<HavingBigfloatFilter>;
  redemptionPeriodAsPercentage?: InputMaybe<HavingIntFilter>;
  startBlockNumber?: InputMaybe<HavingIntFilter>;
  targetSetSize?: InputMaybe<HavingIntFilter>;
};

export type AuctionMaxAggregates = {
  __typename?: 'AuctionMaxAggregates';
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['Int']['output']>;
  /** Maximum of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['Int']['output']>;
  /** Maximum of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['Int']['output']>;
  /** Maximum of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['Int']['output']>;
};

export type AuctionMinAggregates = {
  __typename?: 'AuctionMinAggregates';
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['Int']['output']>;
  /** Minimum of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['Int']['output']>;
  /** Minimum of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['Int']['output']>;
  /** Minimum of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['Int']['output']>;
};

export type AuctionStddevPopulationAggregates = {
  __typename?: 'AuctionStddevPopulationAggregates';
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuctionStddevSampleAggregates = {
  __typename?: 'AuctionStddevSampleAggregates';
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuctionSumAggregates = {
  __typename?: 'AuctionSumAggregates';
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of bond across the matching connection */
  bond: Scalars['BigFloat']['output'];
  /** Sum of currentHeight across the matching connection */
  currentHeight: Scalars['BigInt']['output'];
  /** Sum of endBlockNumber across the matching connection */
  endBlockNumber: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of minActiveBid across the matching connection */
  minActiveBid: Scalars['BigFloat']['output'];
  /** Sum of projectedLockup across the matching connection */
  projectedLockup: Scalars['BigFloat']['output'];
  /** Sum of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage: Scalars['BigInt']['output'];
  /** Sum of startBlockNumber across the matching connection */
  startBlockNumber: Scalars['BigInt']['output'];
  /** Sum of targetSetSize across the matching connection */
  targetSetSize: Scalars['BigInt']['output'];
};

export type AuctionVariancePopulationAggregates = {
  __typename?: 'AuctionVariancePopulationAggregates';
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuctionVarianceSampleAggregates = {
  __typename?: 'AuctionVarianceSampleAggregates';
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of currentHeight across the matching connection */
  currentHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of endBlockNumber across the matching connection */
  endBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of minActiveBid across the matching connection */
  minActiveBid?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of projectedLockup across the matching connection */
  projectedLockup?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of redemptionPeriodAsPercentage across the matching connection */
  redemptionPeriodAsPercentage?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of startBlockNumber across the matching connection */
  startBlockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of targetSetSize across the matching connection */
  targetSetSize?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Auction` values. */
export type AuctionsConnection = {
  __typename?: 'AuctionsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AuctionAggregates>;
  /** A list of edges which contains the `Auction` and cursor to aid in pagination. */
  edges: Array<AuctionsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AuctionAggregates>>;
  /** A list of `Auction` objects. */
  nodes: Array<Auction>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Auction` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Auction` values. */
export type AuctionsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AuctionGroupBy>;
  having?: InputMaybe<AuctionHavingInput>;
};

/** A `Auction` edge in the connection. */
export type AuctionsEdge = {
  __typename?: 'AuctionsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Auction` at the end of the edge. */
  node: Auction;
};

/** Methods to use when ordering `Auction`. */
export type AuctionsOrderBy =
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'BOND_ASC'
  | 'BOND_DESC'
  | 'CURRENT_HEIGHT_ASC'
  | 'CURRENT_HEIGHT_DESC'
  | 'END_BLOCK_NUMBER_ASC'
  | 'END_BLOCK_NUMBER_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'MIN_ACTIVE_BID_ASC'
  | 'MIN_ACTIVE_BID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'PROJECTED_LOCKUP_ASC'
  | 'PROJECTED_LOCKUP_DESC'
  | 'REDEMPTION_PERIOD_AS_PERCENTAGE_ASC'
  | 'REDEMPTION_PERIOD_AS_PERCENTAGE_DESC'
  | 'START_BLOCK_NUMBER_ASC'
  | 'START_BLOCK_NUMBER_DESC'
  | 'TARGET_SET_SIZE_ASC'
  | 'TARGET_SET_SIZE_DESC';

export type AuthorityHeartbeat = Node & {
  __typename?: 'AuthorityHeartbeat';
  /** Reads a single `AuthorityMembership` that is related to this `AuthorityHeartbeat`. */
  authorityMembershipByAuthorityMembershipId: AuthorityMembership;
  authorityMembershipId: Scalars['Int']['output'];
  /** Reads a single `Block` that is related to this `AuthorityHeartbeat`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  /** Reads a single `Epoch` that is related to this `AuthorityHeartbeat`. */
  epochByEpochId: Epoch;
  epochId: Scalars['Int']['output'];
  /** Reads a single `Extrinsic` that is related to this `AuthorityHeartbeat`. */
  extrinsicByExtrinsicId: Extrinsic;
  extrinsicId: Scalars['BigInt']['output'];
  id: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  timestamp: Scalars['Datetime']['output'];
  /** Reads a single `Validator` that is related to this `AuthorityHeartbeat`. */
  validatorByValidatorId: Validator;
  validatorId: Scalars['Int']['output'];
};

export type AuthorityHeartbeatAggregates = {
  __typename?: 'AuthorityHeartbeatAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AuthorityHeartbeatAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AuthorityHeartbeatDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AuthorityHeartbeatMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AuthorityHeartbeatMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AuthorityHeartbeatStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AuthorityHeartbeatStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AuthorityHeartbeatSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AuthorityHeartbeatVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AuthorityHeartbeatVarianceSampleAggregates>;
};

export type AuthorityHeartbeatAverageAggregates = {
  __typename?: 'AuthorityHeartbeatAverageAggregates';
  /** Mean average of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `AuthorityHeartbeat` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type AuthorityHeartbeatCondition = {
  /** Checks for equality with the object’s `authorityMembershipId` field. */
  authorityMembershipId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `epochId` field. */
  epochId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `extrinsicId` field. */
  extrinsicId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `validatorId` field. */
  validatorId?: InputMaybe<Scalars['Int']['input']>;
};

export type AuthorityHeartbeatDistinctCountAggregates = {
  __typename?: 'AuthorityHeartbeatDistinctCountAggregates';
  /** Distinct count of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `AuthorityHeartbeat` object types. All fields are combined with a logical ‘and.’ */
export type AuthorityHeartbeatFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AuthorityHeartbeatFilter>>;
  /** Filter by the object’s `authorityMembershipId` field. */
  authorityMembershipId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `epochId` field. */
  epochId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `extrinsicId` field. */
  extrinsicId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AuthorityHeartbeatFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AuthorityHeartbeatFilter>>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `validatorId` field. */
  validatorId?: InputMaybe<IntFilter>;
};

/** Grouping methods for `AuthorityHeartbeat` for usage during aggregation. */
export type AuthorityHeartbeatGroupBy =
  | 'AUTHORITY_MEMBERSHIP_ID'
  | 'BLOCK_ID'
  | 'EPOCH_ID'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'VALIDATOR_ID';

export type AuthorityHeartbeatHavingAverageInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingDistinctCountInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `AuthorityHeartbeat` aggregates. */
export type AuthorityHeartbeatHavingInput = {
  AND?: InputMaybe<Array<AuthorityHeartbeatHavingInput>>;
  OR?: InputMaybe<Array<AuthorityHeartbeatHavingInput>>;
  average?: InputMaybe<AuthorityHeartbeatHavingAverageInput>;
  distinctCount?: InputMaybe<AuthorityHeartbeatHavingDistinctCountInput>;
  max?: InputMaybe<AuthorityHeartbeatHavingMaxInput>;
  min?: InputMaybe<AuthorityHeartbeatHavingMinInput>;
  stddevPopulation?: InputMaybe<AuthorityHeartbeatHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AuthorityHeartbeatHavingStddevSampleInput>;
  sum?: InputMaybe<AuthorityHeartbeatHavingSumInput>;
  variancePopulation?: InputMaybe<AuthorityHeartbeatHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AuthorityHeartbeatHavingVarianceSampleInput>;
};

export type AuthorityHeartbeatHavingMaxInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingMinInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingStddevPopulationInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingStddevSampleInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingSumInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingVariancePopulationInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatHavingVarianceSampleInput = {
  authorityMembershipId?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityHeartbeatMaxAggregates = {
  __typename?: 'AuthorityHeartbeatMaxAggregates';
  /** Maximum of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type AuthorityHeartbeatMinAggregates = {
  __typename?: 'AuthorityHeartbeatMinAggregates';
  /** Minimum of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type AuthorityHeartbeatStddevPopulationAggregates = {
  __typename?: 'AuthorityHeartbeatStddevPopulationAggregates';
  /** Population standard deviation of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityHeartbeatStddevSampleAggregates = {
  __typename?: 'AuthorityHeartbeatStddevSampleAggregates';
  /** Sample standard deviation of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityHeartbeatSumAggregates = {
  __typename?: 'AuthorityHeartbeatSumAggregates';
  /** Sum of authorityMembershipId across the matching connection */
  authorityMembershipId: Scalars['BigInt']['output'];
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of epochId across the matching connection */
  epochId: Scalars['BigInt']['output'];
  /** Sum of extrinsicId across the matching connection */
  extrinsicId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of validatorId across the matching connection */
  validatorId: Scalars['BigInt']['output'];
};

export type AuthorityHeartbeatVariancePopulationAggregates = {
  __typename?: 'AuthorityHeartbeatVariancePopulationAggregates';
  /** Population variance of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityHeartbeatVarianceSampleAggregates = {
  __typename?: 'AuthorityHeartbeatVarianceSampleAggregates';
  /** Sample variance of authorityMembershipId across the matching connection */
  authorityMembershipId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `AuthorityHeartbeat` values. */
export type AuthorityHeartbeatsConnection = {
  __typename?: 'AuthorityHeartbeatsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AuthorityHeartbeatAggregates>;
  /** A list of edges which contains the `AuthorityHeartbeat` and cursor to aid in pagination. */
  edges: Array<AuthorityHeartbeatsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AuthorityHeartbeatAggregates>>;
  /** A list of `AuthorityHeartbeat` objects. */
  nodes: Array<AuthorityHeartbeat>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `AuthorityHeartbeat` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `AuthorityHeartbeat` values. */
export type AuthorityHeartbeatsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AuthorityHeartbeatGroupBy>;
  having?: InputMaybe<AuthorityHeartbeatHavingInput>;
};

/** A `AuthorityHeartbeat` edge in the connection. */
export type AuthorityHeartbeatsEdge = {
  __typename?: 'AuthorityHeartbeatsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `AuthorityHeartbeat` at the end of the edge. */
  node: AuthorityHeartbeat;
};

/** Methods to use when ordering `AuthorityHeartbeat`. */
export type AuthorityHeartbeatsOrderBy =
  | 'AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'EPOCH_ID_ASC'
  | 'EPOCH_ID_DESC'
  | 'EXTRINSIC_ID_ASC'
  | 'EXTRINSIC_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC'
  | 'VALIDATOR_ID_ASC'
  | 'VALIDATOR_ID_DESC';

export type AuthorityMembership = Node & {
  __typename?: 'AuthorityMembership';
  /** Reads and enables pagination through a set of `AuthorityHeartbeat`. */
  authorityHeartbeatsByAuthorityMembershipId: AuthorityHeartbeatsConnection;
  bid: Scalars['BigFloat']['output'];
  /** Reads a single `Epoch` that is related to this `AuthorityMembership`. */
  epochByEpochId: Epoch;
  epochId: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  reward: Scalars['BigFloat']['output'];
  /** Reads a single `Validator` that is related to this `AuthorityMembership`. */
  validatorByValidatorId: Validator;
  validatorId: Scalars['Int']['output'];
};


export type AuthorityMembershipAuthorityHeartbeatsByAuthorityMembershipIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};

export type AuthorityMembershipAggregates = {
  __typename?: 'AuthorityMembershipAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AuthorityMembershipAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AuthorityMembershipDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AuthorityMembershipMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AuthorityMembershipMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AuthorityMembershipStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AuthorityMembershipStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AuthorityMembershipSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AuthorityMembershipVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AuthorityMembershipVarianceSampleAggregates>;
};

export type AuthorityMembershipAverageAggregates = {
  __typename?: 'AuthorityMembershipAverageAggregates';
  /** Mean average of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `AuthorityMembership` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type AuthorityMembershipCondition = {
  /** Checks for equality with the object’s `bid` field. */
  bid?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `epochId` field. */
  epochId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `reward` field. */
  reward?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `validatorId` field. */
  validatorId?: InputMaybe<Scalars['Int']['input']>;
};

export type AuthorityMembershipDistinctCountAggregates = {
  __typename?: 'AuthorityMembershipDistinctCountAggregates';
  /** Distinct count of bid across the matching connection */
  bid?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of reward across the matching connection */
  reward?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `AuthorityMembership` object types. All fields are combined with a logical ‘and.’ */
export type AuthorityMembershipFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AuthorityMembershipFilter>>;
  /** Filter by the object’s `bid` field. */
  bid?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `epochId` field. */
  epochId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<AuthorityMembershipFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AuthorityMembershipFilter>>;
  /** Filter by the object’s `reward` field. */
  reward?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `validatorId` field. */
  validatorId?: InputMaybe<IntFilter>;
};

/** Grouping methods for `AuthorityMembership` for usage during aggregation. */
export type AuthorityMembershipGroupBy =
  | 'BID'
  | 'EPOCH_ID'
  | 'REWARD'
  | 'VALIDATOR_ID';

export type AuthorityMembershipHavingAverageInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingDistinctCountInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `AuthorityMembership` aggregates. */
export type AuthorityMembershipHavingInput = {
  AND?: InputMaybe<Array<AuthorityMembershipHavingInput>>;
  OR?: InputMaybe<Array<AuthorityMembershipHavingInput>>;
  average?: InputMaybe<AuthorityMembershipHavingAverageInput>;
  distinctCount?: InputMaybe<AuthorityMembershipHavingDistinctCountInput>;
  max?: InputMaybe<AuthorityMembershipHavingMaxInput>;
  min?: InputMaybe<AuthorityMembershipHavingMinInput>;
  stddevPopulation?: InputMaybe<AuthorityMembershipHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AuthorityMembershipHavingStddevSampleInput>;
  sum?: InputMaybe<AuthorityMembershipHavingSumInput>;
  variancePopulation?: InputMaybe<AuthorityMembershipHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AuthorityMembershipHavingVarianceSampleInput>;
};

export type AuthorityMembershipHavingMaxInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingMinInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingStddevPopulationInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingStddevSampleInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingSumInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingVariancePopulationInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipHavingVarianceSampleInput = {
  bid?: InputMaybe<HavingBigfloatFilter>;
  epochId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type AuthorityMembershipMaxAggregates = {
  __typename?: 'AuthorityMembershipMaxAggregates';
  /** Maximum of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type AuthorityMembershipMinAggregates = {
  __typename?: 'AuthorityMembershipMinAggregates';
  /** Minimum of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type AuthorityMembershipStddevPopulationAggregates = {
  __typename?: 'AuthorityMembershipStddevPopulationAggregates';
  /** Population standard deviation of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityMembershipStddevSampleAggregates = {
  __typename?: 'AuthorityMembershipStddevSampleAggregates';
  /** Sample standard deviation of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityMembershipSumAggregates = {
  __typename?: 'AuthorityMembershipSumAggregates';
  /** Sum of bid across the matching connection */
  bid: Scalars['BigFloat']['output'];
  /** Sum of epochId across the matching connection */
  epochId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of reward across the matching connection */
  reward: Scalars['BigFloat']['output'];
  /** Sum of validatorId across the matching connection */
  validatorId: Scalars['BigInt']['output'];
};

export type AuthorityMembershipVariancePopulationAggregates = {
  __typename?: 'AuthorityMembershipVariancePopulationAggregates';
  /** Population variance of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type AuthorityMembershipVarianceSampleAggregates = {
  __typename?: 'AuthorityMembershipVarianceSampleAggregates';
  /** Sample variance of bid across the matching connection */
  bid?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `AuthorityMembership` values. */
export type AuthorityMembershipsConnection = {
  __typename?: 'AuthorityMembershipsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AuthorityMembershipAggregates>;
  /** A list of edges which contains the `AuthorityMembership` and cursor to aid in pagination. */
  edges: Array<AuthorityMembershipsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AuthorityMembershipAggregates>>;
  /** A list of `AuthorityMembership` objects. */
  nodes: Array<AuthorityMembership>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `AuthorityMembership` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `AuthorityMembership` values. */
export type AuthorityMembershipsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AuthorityMembershipGroupBy>;
  having?: InputMaybe<AuthorityMembershipHavingInput>;
};

/** A `AuthorityMembership` edge in the connection. */
export type AuthorityMembershipsEdge = {
  __typename?: 'AuthorityMembershipsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `AuthorityMembership` at the end of the edge. */
  node: AuthorityMembership;
};

/** Methods to use when ordering `AuthorityMembership`. */
export type AuthorityMembershipsOrderBy =
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_COUNT_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_COUNT_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_AUTHORITY_MEMBERSHIP_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'BID_ASC'
  | 'BID_DESC'
  | 'EPOCH_ID_ASC'
  | 'EPOCH_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REWARD_ASC'
  | 'REWARD_DESC'
  | 'VALIDATOR_ID_ASC'
  | 'VALIDATOR_ID_DESC';

export type Banner = Node & {
  __typename?: 'Banner';
  app: App;
  message: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  type: BannerType;
};

export type BannerAggregates = {
  __typename?: 'BannerAggregates';
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BannerDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
};

/** A condition to be used against `Banner` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type BannerCondition = {
  /** Checks for equality with the object’s `app` field. */
  app?: InputMaybe<App>;
  /** Checks for equality with the object’s `message` field. */
  message?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<BannerType>;
};

export type BannerDistinctCountAggregates = {
  __typename?: 'BannerDistinctCountAggregates';
  /** Distinct count of app across the matching connection */
  app?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of message across the matching connection */
  message?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Banner` object types. All fields are combined with a logical ‘and.’ */
export type BannerFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BannerFilter>>;
  /** Filter by the object’s `app` field. */
  app?: InputMaybe<AppFilter>;
  /** Filter by the object’s `message` field. */
  message?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BannerFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BannerFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<BannerTypeFilter>;
};

/** Grouping methods for `Banner` for usage during aggregation. */
export type BannerGroupBy =
  | 'MESSAGE'
  | 'TYPE';

/** Conditions for `Banner` aggregates. */
export type BannerHavingInput = {
  AND?: InputMaybe<Array<BannerHavingInput>>;
  OR?: InputMaybe<Array<BannerHavingInput>>;
};

export type BannerType =
  | 'INFO'
  | 'SUCCESS'
  | 'WARNING';

/** A filter to be used against BannerType fields. All fields are combined with a logical ‘and.’ */
export type BannerTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<BannerType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<BannerType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<BannerType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<BannerType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<BannerType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<BannerType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<BannerType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<BannerType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<BannerType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<BannerType>>;
};

/** A connection to a list of `Banner` values. */
export type BannersConnection = {
  __typename?: 'BannersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BannerAggregates>;
  /** A list of edges which contains the `Banner` and cursor to aid in pagination. */
  edges: Array<BannersEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BannerAggregates>>;
  /** A list of `Banner` objects. */
  nodes: Array<Banner>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Banner` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Banner` values. */
export type BannersConnectionGroupedAggregatesArgs = {
  groupBy: Array<BannerGroupBy>;
  having?: InputMaybe<BannerHavingInput>;
};

/** A `Banner` edge in the connection. */
export type BannersEdge = {
  __typename?: 'BannersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Banner` at the end of the edge. */
  node: Banner;
};

/** Methods to use when ordering `Banner`. */
export type BannersOrderBy =
  | 'APP_ASC'
  | 'APP_DESC'
  | 'MESSAGE_ASC'
  | 'MESSAGE_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

/** A filter to be used against BigFloat fields. All fields are combined with a logical ‘and.’ */
export type BigFloatFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
};

/** A filter to be used against BigInt fields. All fields are combined with a logical ‘and.’ */
export type BigIntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type Block = Node & {
  __typename?: 'Block';
  /** Reads and enables pagination through a set of `Auction`. */
  auctionsByBlockId: AuctionsConnection;
  /** Reads and enables pagination through a set of `AuthorityHeartbeat`. */
  authorityHeartbeatsByBlockId: AuthorityHeartbeatsConnection;
  /** Reads and enables pagination through a set of `BrokerWithdrawal`. */
  brokerWithdrawalsByBlockId: BrokerWithdrawalsConnection;
  /** Reads a single `Epoch` that is related to this `Block`. */
  epochByEndBlockId?: Maybe<Epoch>;
  /** Reads a single `Epoch` that is related to this `Block`. */
  epochByStartBlockId?: Maybe<Epoch>;
  /**
   * Reads and enables pagination through a set of `Epoch`.
   * @deprecated Please use epochByEndBlockId instead
   */
  epochesByEndBlockId: EpochesConnection;
  /**
   * Reads and enables pagination through a set of `Epoch`.
   * @deprecated Please use epochByStartBlockId instead
   */
  epochesByStartBlockId: EpochesConnection;
  /** Reads and enables pagination through a set of `Event`. */
  eventsByBlockId: EventsConnection;
  /** Reads and enables pagination through a set of `Extrinsic`. */
  extrinsicsByBlockId: ExtrinsicsConnection;
  hash: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `LiquidityBalanceEvent`. */
  liquidityBalanceEventsByBlockId: LiquidityBalanceEventsConnection;
  /** Reads and enables pagination through a set of `LiquidityDepositChannel`. */
  liquidityDepositChannelsByIssuedBlockId: LiquidityDepositChannelsConnection;
  /** Reads and enables pagination through a set of `LiquidityDeposit`. */
  liquidityDepositsByBlockId: LiquidityDepositsConnection;
  /** Reads and enables pagination through a set of `LiquidityWithdrawal`. */
  liquidityWithdrawalsByBlockId: LiquidityWithdrawalsConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  parentHash: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Penalty`. */
  penaltiesByBlockId: PenaltiesConnection;
  reward: Scalars['BigFloat']['output'];
  stateRoot: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `SwapChannel`. */
  swapChannelsByIssuedBlockId: SwapChannelsConnection;
  timestamp: Scalars['Datetime']['output'];
  /** Reads a single `Validator` that is related to this `Block`. */
  validatorByValidatorId?: Maybe<Validator>;
  validatorId?: Maybe<Scalars['Int']['output']>;
  /** Reads and enables pagination through a set of `Validator`. */
  validatorsByLastHeartbeatBlockId: ValidatorsConnection;
};


export type BlockAuctionsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuctionCondition>;
  filter?: InputMaybe<AuctionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuctionsOrderBy>>;
};


export type BlockAuthorityHeartbeatsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};


export type BlockBrokerWithdrawalsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerWithdrawalCondition>;
  filter?: InputMaybe<BrokerWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerWithdrawalsOrderBy>>;
};


export type BlockEpochesByEndBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EpochCondition>;
  filter?: InputMaybe<EpochFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EpochesOrderBy>>;
};


export type BlockEpochesByStartBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EpochCondition>;
  filter?: InputMaybe<EpochFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EpochesOrderBy>>;
};


export type BlockEventsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EventCondition>;
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventsOrderBy>>;
};


export type BlockExtrinsicsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ExtrinsicCondition>;
  filter?: InputMaybe<ExtrinsicFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;
};


export type BlockLiquidityBalanceEventsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


export type BlockLiquidityDepositChannelsByIssuedBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositChannelCondition>;
  filter?: InputMaybe<LiquidityDepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositChannelsOrderBy>>;
};


export type BlockLiquidityDepositsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositCondition>;
  filter?: InputMaybe<LiquidityDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositsOrderBy>>;
};


export type BlockLiquidityWithdrawalsByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityWithdrawalCondition>;
  filter?: InputMaybe<LiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityWithdrawalsOrderBy>>;
};


export type BlockPenaltiesByBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PenaltyCondition>;
  filter?: InputMaybe<PenaltyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PenaltiesOrderBy>>;
};


export type BlockSwapChannelsByIssuedBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapChannelCondition>;
  filter?: InputMaybe<SwapChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapChannelsOrderBy>>;
};


export type BlockValidatorsByLastHeartbeatBlockIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ValidatorCondition>;
  filter?: InputMaybe<ValidatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;
};

export type BlockAggregates = {
  __typename?: 'BlockAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BlockAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BlockDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BlockMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BlockMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BlockStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BlockStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BlockSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BlockVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BlockVarianceSampleAggregates>;
};

export type BlockAverageAggregates = {
  __typename?: 'BlockAverageAggregates';
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Block` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type BlockCondition = {
  /** Checks for equality with the object’s `hash` field. */
  hash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `parentHash` field. */
  parentHash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `reward` field. */
  reward?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `stateRoot` field. */
  stateRoot?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `validatorId` field. */
  validatorId?: InputMaybe<Scalars['Int']['input']>;
};

export type BlockDistinctCountAggregates = {
  __typename?: 'BlockDistinctCountAggregates';
  /** Distinct count of hash across the matching connection */
  hash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of parentHash across the matching connection */
  parentHash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of reward across the matching connection */
  reward?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of stateRoot across the matching connection */
  stateRoot?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Block` object types. All fields are combined with a logical ‘and.’ */
export type BlockFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BlockFilter>>;
  /** Filter by the object’s `hash` field. */
  hash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BlockFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BlockFilter>>;
  /** Filter by the object’s `parentHash` field. */
  parentHash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `reward` field. */
  reward?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `stateRoot` field. */
  stateRoot?: InputMaybe<StringFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `validatorId` field. */
  validatorId?: InputMaybe<IntFilter>;
};

/** Grouping methods for `Block` for usage during aggregation. */
export type BlockGroupBy =
  | 'PARENT_HASH'
  | 'REWARD'
  | 'STATE_ROOT'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'VALIDATOR_ID';

export type BlockHavingAverageInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingDistinctCountInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Block` aggregates. */
export type BlockHavingInput = {
  AND?: InputMaybe<Array<BlockHavingInput>>;
  OR?: InputMaybe<Array<BlockHavingInput>>;
  average?: InputMaybe<BlockHavingAverageInput>;
  distinctCount?: InputMaybe<BlockHavingDistinctCountInput>;
  max?: InputMaybe<BlockHavingMaxInput>;
  min?: InputMaybe<BlockHavingMinInput>;
  stddevPopulation?: InputMaybe<BlockHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BlockHavingStddevSampleInput>;
  sum?: InputMaybe<BlockHavingSumInput>;
  variancePopulation?: InputMaybe<BlockHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BlockHavingVarianceSampleInput>;
};

export type BlockHavingMaxInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingMinInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingStddevPopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingStddevSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingSumInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingVariancePopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockHavingVarianceSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
  reward?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type BlockMaxAggregates = {
  __typename?: 'BlockMaxAggregates';
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type BlockMinAggregates = {
  __typename?: 'BlockMinAggregates';
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type BlockStddevPopulationAggregates = {
  __typename?: 'BlockStddevPopulationAggregates';
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlockStddevSampleAggregates = {
  __typename?: 'BlockStddevSampleAggregates';
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlockSumAggregates = {
  __typename?: 'BlockSumAggregates';
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of reward across the matching connection */
  reward: Scalars['BigFloat']['output'];
  /** Sum of validatorId across the matching connection */
  validatorId: Scalars['BigInt']['output'];
};

export type BlockVariancePopulationAggregates = {
  __typename?: 'BlockVariancePopulationAggregates';
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlockVarianceSampleAggregates = {
  __typename?: 'BlockVarianceSampleAggregates';
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of reward across the matching connection */
  reward?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Block` values. */
export type BlocksConnection = {
  __typename?: 'BlocksConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlockAggregates>;
  /** A list of edges which contains the `Block` and cursor to aid in pagination. */
  edges: Array<BlocksEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlockAggregates>>;
  /** A list of `Block` objects. */
  nodes: Array<Block>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Block` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Block` values. */
export type BlocksConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlockGroupBy>;
  having?: InputMaybe<BlockHavingInput>;
};

/** A `Block` edge in the connection. */
export type BlocksEdge = {
  __typename?: 'BlocksEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Block` at the end of the edge. */
  node: Block;
};

/** Methods to use when ordering `Block`. */
export type BlocksOrderBy =
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_COUNT_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_COUNT_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_BOND_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_BOND_DESC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUCTIONS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_COUNT_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_COUNT_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_COUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_COUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_AVERAGE_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_COUNT_ASC'
  | 'EVENTS_BY_BLOCK_ID_COUNT_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_MAX_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MAX_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_MIN_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_MIN_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_SUM_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_SUM_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_AVERAGE_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_COUNT_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_COUNT_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_DISTINCT_COUNT_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MAX_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_MIN_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_STDDEV_SAMPLE_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_SUM_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_BLOCK_ID_VARIANCE_SAMPLE_VERSION_DESC'
  | 'HASH_ASC'
  | 'HASH_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_COUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_COUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_AVERAGE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_COUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_COUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MAX_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_MIN_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_SUM_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BLOCK_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'NATURAL'
  | 'PARENT_HASH_ASC'
  | 'PARENT_HASH_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_COUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_COUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MAX_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_MIN_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_SUM_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_BLOCK_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REWARD_ASC'
  | 'REWARD_DESC'
  | 'STATE_ROOT_ASC'
  | 'STATE_ROOT_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_COUNT_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_COUNT_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_BLOCK_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_AVERAGE_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_COUNT_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_COUNT_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_DISTINCT_COUNT_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MAX_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_MIN_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_POPULATION_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_STDDEV_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_SUM_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_POPULATION_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_LAST_HEARTBEAT_BLOCK_ID_VARIANCE_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATOR_ID_ASC'
  | 'VALIDATOR_ID_DESC';

/** A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’ */
export type BooleanFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type Broadcast = Node & {
  __typename?: 'Broadcast';
  broadcastAbortedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads a single `Broadcast` that is related to this `Broadcast`. */
  broadcastByReplacedById?: Maybe<Broadcast>;
  broadcastRequestedEventId: Scalars['BigInt']['output'];
  broadcastSuccessEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads and enables pagination through a set of `Broadcast`. */
  broadcastsByReplacedById: BroadcastsConnection;
  destinationChain: ChainflipChain;
  /** Reads a single `Event` that is related to this `Broadcast`. */
  eventByBroadcastAbortedEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Broadcast`. */
  eventByBroadcastRequestedEventId: Event;
  /** Reads a single `Event` that is related to this `Broadcast`. */
  eventByBroadcastSuccessEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Broadcast`. */
  eventByTransactionBroadcastRequestEventId?: Maybe<Event>;
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `LiquidityBalanceEvent`. */
  liquidityBalanceEventsByBroadcastId: LiquidityBalanceEventsConnection;
  /** Reads and enables pagination through a set of `LiquidityWithdrawal`. */
  liquidityWithdrawalsByBroadcastId: LiquidityWithdrawalsConnection;
  nativeId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  replacedById?: Maybe<Scalars['Int']['output']>;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByBroadcastId: SwapsConnection;
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigInt']['output']>;
  transactionPayload?: Maybe<Scalars['String']['output']>;
  type: BroadcastType;
};


export type BroadcastBroadcastsByReplacedByIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


export type BroadcastLiquidityBalanceEventsByBroadcastIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


export type BroadcastLiquidityWithdrawalsByBroadcastIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityWithdrawalCondition>;
  filter?: InputMaybe<LiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityWithdrawalsOrderBy>>;
};


export type BroadcastSwapsByBroadcastIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};

export type BroadcastAggregates = {
  __typename?: 'BroadcastAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BroadcastAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BroadcastDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BroadcastMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BroadcastMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BroadcastStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BroadcastStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BroadcastSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BroadcastVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BroadcastVarianceSampleAggregates>;
};

export type BroadcastAverageAggregates = {
  __typename?: 'BroadcastAverageAggregates';
  /** Mean average of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `Broadcast` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type BroadcastCondition = {
  /** Checks for equality with the object’s `broadcastAbortedEventId` field. */
  broadcastAbortedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `broadcastRequestedEventId` field. */
  broadcastRequestedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `broadcastSuccessEventId` field. */
  broadcastSuccessEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `nativeId` field. */
  nativeId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `replacedById` field. */
  replacedById?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `transactionBroadcastRequestEventId` field. */
  transactionBroadcastRequestEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `transactionPayload` field. */
  transactionPayload?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<BroadcastType>;
};

export type BroadcastDistinctCountAggregates = {
  __typename?: 'BroadcastDistinctCountAggregates';
  /** Distinct count of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationChain across the matching connection */
  destinationChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of transactionPayload across the matching connection */
  transactionPayload?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Broadcast` object types. All fields are combined with a logical ‘and.’ */
export type BroadcastFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BroadcastFilter>>;
  /** Filter by the object’s `broadcastAbortedEventId` field. */
  broadcastAbortedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `broadcastRequestedEventId` field. */
  broadcastRequestedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `broadcastSuccessEventId` field. */
  broadcastSuccessEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `nativeId` field. */
  nativeId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BroadcastFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BroadcastFilter>>;
  /** Filter by the object’s `replacedById` field. */
  replacedById?: InputMaybe<IntFilter>;
  /** Filter by the object’s `transactionBroadcastRequestEventId` field. */
  transactionBroadcastRequestEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `transactionPayload` field. */
  transactionPayload?: InputMaybe<StringFilter>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<BroadcastTypeFilter>;
};

/** Grouping methods for `Broadcast` for usage during aggregation. */
export type BroadcastGroupBy =
  | 'BROADCAST_ABORTED_EVENT_ID'
  | 'BROADCAST_REQUESTED_EVENT_ID'
  | 'BROADCAST_SUCCESS_EVENT_ID'
  | 'DESTINATION_CHAIN'
  | 'NATIVE_ID'
  | 'TRANSACTION_BROADCAST_REQUEST_EVENT_ID'
  | 'TRANSACTION_PAYLOAD'
  | 'TYPE';

export type BroadcastHavingAverageInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingDistinctCountInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `Broadcast` aggregates. */
export type BroadcastHavingInput = {
  AND?: InputMaybe<Array<BroadcastHavingInput>>;
  OR?: InputMaybe<Array<BroadcastHavingInput>>;
  average?: InputMaybe<BroadcastHavingAverageInput>;
  distinctCount?: InputMaybe<BroadcastHavingDistinctCountInput>;
  max?: InputMaybe<BroadcastHavingMaxInput>;
  min?: InputMaybe<BroadcastHavingMinInput>;
  stddevPopulation?: InputMaybe<BroadcastHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BroadcastHavingStddevSampleInput>;
  sum?: InputMaybe<BroadcastHavingSumInput>;
  variancePopulation?: InputMaybe<BroadcastHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BroadcastHavingVarianceSampleInput>;
};

export type BroadcastHavingMaxInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingMinInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingStddevPopulationInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingStddevSampleInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingSumInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingVariancePopulationInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastHavingVarianceSampleInput = {
  broadcastAbortedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastRequestedEventId?: InputMaybe<HavingBigintFilter>;
  broadcastSuccessEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  nativeId?: InputMaybe<HavingIntFilter>;
  replacedById?: InputMaybe<HavingIntFilter>;
  transactionBroadcastRequestEventId?: InputMaybe<HavingBigintFilter>;
};

export type BroadcastMaxAggregates = {
  __typename?: 'BroadcastMaxAggregates';
  /** Maximum of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['Int']['output']>;
  /** Maximum of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type BroadcastMinAggregates = {
  __typename?: 'BroadcastMinAggregates';
  /** Minimum of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['Int']['output']>;
  /** Minimum of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type BroadcastStddevPopulationAggregates = {
  __typename?: 'BroadcastStddevPopulationAggregates';
  /** Population standard deviation of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BroadcastStddevSampleAggregates = {
  __typename?: 'BroadcastStddevSampleAggregates';
  /** Sample standard deviation of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BroadcastSumAggregates = {
  __typename?: 'BroadcastSumAggregates';
  /** Sum of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId: Scalars['BigFloat']['output'];
  /** Sum of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId: Scalars['BigFloat']['output'];
  /** Sum of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of nativeId across the matching connection */
  nativeId: Scalars['BigInt']['output'];
  /** Sum of replacedById across the matching connection */
  replacedById: Scalars['BigInt']['output'];
  /** Sum of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId: Scalars['BigFloat']['output'];
};

export type BroadcastType =
  | 'BATCH'
  | 'CCM';

/** A filter to be used against BroadcastType fields. All fields are combined with a logical ‘and.’ */
export type BroadcastTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<BroadcastType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<BroadcastType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<BroadcastType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<BroadcastType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<BroadcastType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<BroadcastType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<BroadcastType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<BroadcastType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<BroadcastType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<BroadcastType>>;
};

export type BroadcastVariancePopulationAggregates = {
  __typename?: 'BroadcastVariancePopulationAggregates';
  /** Population variance of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BroadcastVarianceSampleAggregates = {
  __typename?: 'BroadcastVarianceSampleAggregates';
  /** Sample variance of broadcastAbortedEventId across the matching connection */
  broadcastAbortedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of broadcastRequestedEventId across the matching connection */
  broadcastRequestedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of broadcastSuccessEventId across the matching connection */
  broadcastSuccessEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of replacedById across the matching connection */
  replacedById?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of transactionBroadcastRequestEventId across the matching connection */
  transactionBroadcastRequestEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Broadcast` values. */
export type BroadcastsConnection = {
  __typename?: 'BroadcastsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BroadcastAggregates>;
  /** A list of edges which contains the `Broadcast` and cursor to aid in pagination. */
  edges: Array<BroadcastsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BroadcastAggregates>>;
  /** A list of `Broadcast` objects. */
  nodes: Array<Broadcast>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Broadcast` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Broadcast` values. */
export type BroadcastsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BroadcastGroupBy>;
  having?: InputMaybe<BroadcastHavingInput>;
};

/** A `Broadcast` edge in the connection. */
export type BroadcastsEdge = {
  __typename?: 'BroadcastsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Broadcast` at the end of the edge. */
  node: Broadcast;
};

/** Methods to use when ordering `Broadcast`. */
export type BroadcastsOrderBy =
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_AVERAGE_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_COUNT_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_COUNT_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MAX_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_MIN_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_SUM_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_REPLACED_BY_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'DESTINATION_CHAIN_ASC'
  | 'DESTINATION_CHAIN_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_COUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_COUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_BROADCAST_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_AVERAGE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_COUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_COUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MAX_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_MIN_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_SUM_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_BROADCAST_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'NATIVE_ID_ASC'
  | 'NATIVE_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REPLACED_BY_ID_ASC'
  | 'REPLACED_BY_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_COUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_COUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_BROADCAST_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'TRANSACTION_PAYLOAD_ASC'
  | 'TRANSACTION_PAYLOAD_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type Broker = Node & {
  __typename?: 'Broker';
  /** Reads a single `Account` that is related to this `Broker`. */
  accountByAccountId: Account;
  accountId: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `BrokerFeeAndWithdrawal`. */
  brokerFeeAndWithdrawalsByBrokerId: BrokerFeeAndWithdrawalsConnection;
  /** Reads and enables pagination through a set of `BrokerWithdrawal`. */
  brokerWithdrawalsByBrokerId: BrokerWithdrawalsConnection;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `SwapChannel`. */
  swapChannelsByBrokerId: SwapChannelsConnection;
};


export type BrokerBrokerFeeAndWithdrawalsByBrokerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerFeeAndWithdrawalCondition>;
  filter?: InputMaybe<BrokerFeeAndWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerFeeAndWithdrawalsOrderBy>>;
};


export type BrokerBrokerWithdrawalsByBrokerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerWithdrawalCondition>;
  filter?: InputMaybe<BrokerWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerWithdrawalsOrderBy>>;
};


export type BrokerSwapChannelsByBrokerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapChannelCondition>;
  filter?: InputMaybe<SwapChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapChannelsOrderBy>>;
};

export type BrokerAccount = Node & {
  __typename?: 'BrokerAccount';
  /** Reads and enables pagination through a set of `BrokerAccountEarnedFee`. */
  brokerAccountEarnedFeesByBrokerAccountIdSs58: BrokerAccountEarnedFeesConnection;
  flipBalance: Scalars['BigFloat']['output'];
  idSs58: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};


export type BrokerAccountBrokerAccountEarnedFeesByBrokerAccountIdSs58Args = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerAccountEarnedFeeCondition>;
  filter?: InputMaybe<BrokerAccountEarnedFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerAccountEarnedFeesOrderBy>>;
};

export type BrokerAccountAggregates = {
  __typename?: 'BrokerAccountAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BrokerAccountAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BrokerAccountDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BrokerAccountMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BrokerAccountMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BrokerAccountStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BrokerAccountStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BrokerAccountSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BrokerAccountVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BrokerAccountVarianceSampleAggregates>;
};

export type BrokerAccountAverageAggregates = {
  __typename?: 'BrokerAccountAverageAggregates';
  /** Mean average of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BrokerAccount` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type BrokerAccountCondition = {
  /** Checks for equality with the object’s `flipBalance` field. */
  flipBalance?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `idSs58` field. */
  idSs58?: InputMaybe<Scalars['String']['input']>;
};

export type BrokerAccountDistinctCountAggregates = {
  __typename?: 'BrokerAccountDistinctCountAggregates';
  /** Distinct count of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idSs58 across the matching connection */
  idSs58?: Maybe<Scalars['BigInt']['output']>;
};

export type BrokerAccountEarnedFee = Node & {
  __typename?: 'BrokerAccountEarnedFee';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  /** Reads a single `BrokerAccount` that is related to this `BrokerAccountEarnedFee`. */
  brokerAccountByBrokerAccountIdSs58: BrokerAccount;
  brokerAccountIdSs58: Scalars['String']['output'];
  chain: ChainflipChain;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type BrokerAccountEarnedFeeAggregates = {
  __typename?: 'BrokerAccountEarnedFeeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BrokerAccountEarnedFeeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BrokerAccountEarnedFeeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BrokerAccountEarnedFeeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BrokerAccountEarnedFeeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BrokerAccountEarnedFeeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BrokerAccountEarnedFeeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BrokerAccountEarnedFeeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BrokerAccountEarnedFeeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BrokerAccountEarnedFeeVarianceSampleAggregates>;
};

export type BrokerAccountEarnedFeeAverageAggregates = {
  __typename?: 'BrokerAccountEarnedFeeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BrokerAccountEarnedFee` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type BrokerAccountEarnedFeeCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `brokerAccountIdSs58` field. */
  brokerAccountIdSs58?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type BrokerAccountEarnedFeeDistinctCountAggregates = {
  __typename?: 'BrokerAccountEarnedFeeDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of brokerAccountIdSs58 across the matching connection */
  brokerAccountIdSs58?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BrokerAccountEarnedFee` object types. All fields are combined with a logical ‘and.’ */
export type BrokerAccountEarnedFeeFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BrokerAccountEarnedFeeFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `brokerAccountIdSs58` field. */
  brokerAccountIdSs58?: InputMaybe<StringFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BrokerAccountEarnedFeeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BrokerAccountEarnedFeeFilter>>;
};

export type BrokerAccountEarnedFeeMaxAggregates = {
  __typename?: 'BrokerAccountEarnedFeeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerAccountEarnedFeeMinAggregates = {
  __typename?: 'BrokerAccountEarnedFeeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerAccountEarnedFeeStddevPopulationAggregates = {
  __typename?: 'BrokerAccountEarnedFeeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountEarnedFeeStddevSampleAggregates = {
  __typename?: 'BrokerAccountEarnedFeeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountEarnedFeeSumAggregates = {
  __typename?: 'BrokerAccountEarnedFeeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type BrokerAccountEarnedFeeVariancePopulationAggregates = {
  __typename?: 'BrokerAccountEarnedFeeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountEarnedFeeVarianceSampleAggregates = {
  __typename?: 'BrokerAccountEarnedFeeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BrokerAccountEarnedFee` values. */
export type BrokerAccountEarnedFeesConnection = {
  __typename?: 'BrokerAccountEarnedFeesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BrokerAccountEarnedFeeAggregates>;
  /** A list of edges which contains the `BrokerAccountEarnedFee` and cursor to aid in pagination. */
  edges: Array<BrokerAccountEarnedFeesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BrokerAccountEarnedFeeAggregates>>;
  /** A list of `BrokerAccountEarnedFee` objects. */
  nodes: Array<BrokerAccountEarnedFee>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BrokerAccountEarnedFee` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BrokerAccountEarnedFee` values. */
export type BrokerAccountEarnedFeesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BrokerAccountEarnedFeesGroupBy>;
  having?: InputMaybe<BrokerAccountEarnedFeesHavingInput>;
};

/** A `BrokerAccountEarnedFee` edge in the connection. */
export type BrokerAccountEarnedFeesEdge = {
  __typename?: 'BrokerAccountEarnedFeesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BrokerAccountEarnedFee` at the end of the edge. */
  node: BrokerAccountEarnedFee;
};

/** Grouping methods for `BrokerAccountEarnedFee` for usage during aggregation. */
export type BrokerAccountEarnedFeesGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'BROKER_ACCOUNT_ID_SS58'
  | 'CHAIN';

export type BrokerAccountEarnedFeesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BrokerAccountEarnedFee` aggregates. */
export type BrokerAccountEarnedFeesHavingInput = {
  AND?: InputMaybe<Array<BrokerAccountEarnedFeesHavingInput>>;
  OR?: InputMaybe<Array<BrokerAccountEarnedFeesHavingInput>>;
  average?: InputMaybe<BrokerAccountEarnedFeesHavingAverageInput>;
  distinctCount?: InputMaybe<BrokerAccountEarnedFeesHavingDistinctCountInput>;
  max?: InputMaybe<BrokerAccountEarnedFeesHavingMaxInput>;
  min?: InputMaybe<BrokerAccountEarnedFeesHavingMinInput>;
  stddevPopulation?: InputMaybe<BrokerAccountEarnedFeesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BrokerAccountEarnedFeesHavingStddevSampleInput>;
  sum?: InputMaybe<BrokerAccountEarnedFeesHavingSumInput>;
  variancePopulation?: InputMaybe<BrokerAccountEarnedFeesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BrokerAccountEarnedFeesHavingVarianceSampleInput>;
};

export type BrokerAccountEarnedFeesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerAccountEarnedFeesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `BrokerAccountEarnedFee`. */
export type BrokerAccountEarnedFeesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_ID_SS58_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

/** A filter to be used against `BrokerAccount` object types. All fields are combined with a logical ‘and.’ */
export type BrokerAccountFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BrokerAccountFilter>>;
  /** Filter by the object’s `flipBalance` field. */
  flipBalance?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `idSs58` field. */
  idSs58?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BrokerAccountFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BrokerAccountFilter>>;
};

/** Grouping methods for `BrokerAccount` for usage during aggregation. */
export type BrokerAccountGroupBy =
  | 'FLIP_BALANCE';

export type BrokerAccountHavingAverageInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingDistinctCountInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `BrokerAccount` aggregates. */
export type BrokerAccountHavingInput = {
  AND?: InputMaybe<Array<BrokerAccountHavingInput>>;
  OR?: InputMaybe<Array<BrokerAccountHavingInput>>;
  average?: InputMaybe<BrokerAccountHavingAverageInput>;
  distinctCount?: InputMaybe<BrokerAccountHavingDistinctCountInput>;
  max?: InputMaybe<BrokerAccountHavingMaxInput>;
  min?: InputMaybe<BrokerAccountHavingMinInput>;
  stddevPopulation?: InputMaybe<BrokerAccountHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BrokerAccountHavingStddevSampleInput>;
  sum?: InputMaybe<BrokerAccountHavingSumInput>;
  variancePopulation?: InputMaybe<BrokerAccountHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BrokerAccountHavingVarianceSampleInput>;
};

export type BrokerAccountHavingMaxInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingMinInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingStddevPopulationInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingStddevSampleInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingSumInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingVariancePopulationInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountHavingVarianceSampleInput = {
  flipBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerAccountMaxAggregates = {
  __typename?: 'BrokerAccountMaxAggregates';
  /** Maximum of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountMinAggregates = {
  __typename?: 'BrokerAccountMinAggregates';
  /** Minimum of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountStddevPopulationAggregates = {
  __typename?: 'BrokerAccountStddevPopulationAggregates';
  /** Population standard deviation of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountStddevSampleAggregates = {
  __typename?: 'BrokerAccountStddevSampleAggregates';
  /** Sample standard deviation of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountSumAggregates = {
  __typename?: 'BrokerAccountSumAggregates';
  /** Sum of flipBalance across the matching connection */
  flipBalance: Scalars['BigFloat']['output'];
};

export type BrokerAccountVariancePopulationAggregates = {
  __typename?: 'BrokerAccountVariancePopulationAggregates';
  /** Population variance of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerAccountVarianceSampleAggregates = {
  __typename?: 'BrokerAccountVarianceSampleAggregates';
  /** Sample variance of flipBalance across the matching connection */
  flipBalance?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BrokerAccount` values. */
export type BrokerAccountsConnection = {
  __typename?: 'BrokerAccountsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BrokerAccountAggregates>;
  /** A list of edges which contains the `BrokerAccount` and cursor to aid in pagination. */
  edges: Array<BrokerAccountsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BrokerAccountAggregates>>;
  /** A list of `BrokerAccount` objects. */
  nodes: Array<BrokerAccount>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BrokerAccount` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BrokerAccount` values. */
export type BrokerAccountsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BrokerAccountGroupBy>;
  having?: InputMaybe<BrokerAccountHavingInput>;
};

/** A `BrokerAccount` edge in the connection. */
export type BrokerAccountsEdge = {
  __typename?: 'BrokerAccountsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BrokerAccount` at the end of the edge. */
  node: BrokerAccount;
};

/** Methods to use when ordering `BrokerAccount`. */
export type BrokerAccountsOrderBy =
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_AVERAGE_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_COUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_COUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_DISTINCT_COUNT_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MAX_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_MIN_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_POPULATION_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_STDDEV_SAMPLE_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_SUM_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_POPULATION_ID_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_BROKER_ACCOUNT_ID_SS58_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_BROKER_ACCOUNT_ID_SS58_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_ID_ASC'
  | 'BROKER_ACCOUNT_EARNED_FEES_BY_BROKER_ACCOUNT_ID_SS58_VARIANCE_SAMPLE_ID_DESC'
  | 'FLIP_BALANCE_ASC'
  | 'FLIP_BALANCE_DESC'
  | 'ID_SS58_ASC'
  | 'ID_SS58_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type BrokerAggregates = {
  __typename?: 'BrokerAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BrokerAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BrokerDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BrokerMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BrokerMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BrokerStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BrokerStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BrokerSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BrokerVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BrokerVarianceSampleAggregates>;
};

export type BrokerAverageAggregates = {
  __typename?: 'BrokerAverageAggregates';
  /** Mean average of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Broker` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type BrokerCondition = {
  /** Checks for equality with the object’s `accountId` field. */
  accountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type BrokerDistinctCountAggregates = {
  __typename?: 'BrokerDistinctCountAggregates';
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

export type BrokerFeeAndWithdrawal = {
  __typename?: 'BrokerFeeAndWithdrawal';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  /** Reads a single `Broker` that is related to this `BrokerFeeAndWithdrawal`. */
  brokerByBrokerId?: Maybe<Broker>;
  brokerId: Scalars['Int']['output'];
  chain: ChainflipChain;
  /** Reads a single `Event` that is related to this `BrokerFeeAndWithdrawal`. */
  eventByEventId?: Maybe<Event>;
  eventId: Scalars['BigInt']['output'];
  type: Scalars['String']['output'];
  valueUsd: Scalars['BigFloat']['output'];
};

export type BrokerFeeAndWithdrawalAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BrokerFeeAndWithdrawalAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BrokerFeeAndWithdrawalDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BrokerFeeAndWithdrawalMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BrokerFeeAndWithdrawalMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BrokerFeeAndWithdrawalStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BrokerFeeAndWithdrawalStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BrokerFeeAndWithdrawalSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BrokerFeeAndWithdrawalVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BrokerFeeAndWithdrawalVarianceSampleAggregates>;
};

export type BrokerFeeAndWithdrawalAverageAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BrokerFeeAndWithdrawal` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type BrokerFeeAndWithdrawalCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `brokerId` field. */
  brokerId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type BrokerFeeAndWithdrawalDistinctCountAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BrokerFeeAndWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type BrokerFeeAndWithdrawalFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BrokerFeeAndWithdrawalFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `brokerId` field. */
  brokerId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BrokerFeeAndWithdrawalFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BrokerFeeAndWithdrawalFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<StringFilter>;
  /** Filter by the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `BrokerFeeAndWithdrawal` for usage during aggregation. */
export type BrokerFeeAndWithdrawalGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'BROKER_ID'
  | 'CHAIN'
  | 'EVENT_ID'
  | 'TYPE'
  | 'VALUE_USD';

export type BrokerFeeAndWithdrawalHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `BrokerFeeAndWithdrawal` aggregates. */
export type BrokerFeeAndWithdrawalHavingInput = {
  AND?: InputMaybe<Array<BrokerFeeAndWithdrawalHavingInput>>;
  OR?: InputMaybe<Array<BrokerFeeAndWithdrawalHavingInput>>;
  average?: InputMaybe<BrokerFeeAndWithdrawalHavingAverageInput>;
  distinctCount?: InputMaybe<BrokerFeeAndWithdrawalHavingDistinctCountInput>;
  max?: InputMaybe<BrokerFeeAndWithdrawalHavingMaxInput>;
  min?: InputMaybe<BrokerFeeAndWithdrawalHavingMinInput>;
  stddevPopulation?: InputMaybe<BrokerFeeAndWithdrawalHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BrokerFeeAndWithdrawalHavingStddevSampleInput>;
  sum?: InputMaybe<BrokerFeeAndWithdrawalHavingSumInput>;
  variancePopulation?: InputMaybe<BrokerFeeAndWithdrawalHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BrokerFeeAndWithdrawalHavingVarianceSampleInput>;
};

export type BrokerFeeAndWithdrawalHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BrokerFeeAndWithdrawalMaxAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerFeeAndWithdrawalMinAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerFeeAndWithdrawalStddevPopulationAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerFeeAndWithdrawalStddevSampleAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerFeeAndWithdrawalSumAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of brokerId across the matching connection */
  brokerId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of valueUsd across the matching connection */
  valueUsd: Scalars['BigFloat']['output'];
};

export type BrokerFeeAndWithdrawalVariancePopulationAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerFeeAndWithdrawalVarianceSampleAggregates = {
  __typename?: 'BrokerFeeAndWithdrawalVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BrokerFeeAndWithdrawal` values. */
export type BrokerFeeAndWithdrawalsConnection = {
  __typename?: 'BrokerFeeAndWithdrawalsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BrokerFeeAndWithdrawalAggregates>;
  /** A list of edges which contains the `BrokerFeeAndWithdrawal` and cursor to aid in pagination. */
  edges: Array<BrokerFeeAndWithdrawalsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BrokerFeeAndWithdrawalAggregates>>;
  /** A list of `BrokerFeeAndWithdrawal` objects. */
  nodes: Array<BrokerFeeAndWithdrawal>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BrokerFeeAndWithdrawal` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BrokerFeeAndWithdrawal` values. */
export type BrokerFeeAndWithdrawalsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BrokerFeeAndWithdrawalGroupBy>;
  having?: InputMaybe<BrokerFeeAndWithdrawalHavingInput>;
};

/** A `BrokerFeeAndWithdrawal` edge in the connection. */
export type BrokerFeeAndWithdrawalsEdge = {
  __typename?: 'BrokerFeeAndWithdrawalsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BrokerFeeAndWithdrawal` at the end of the edge. */
  node: BrokerFeeAndWithdrawal;
};

/** Methods to use when ordering `BrokerFeeAndWithdrawal`. */
export type BrokerFeeAndWithdrawalsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BROKER_ID_ASC'
  | 'BROKER_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'NATURAL'
  | 'TYPE_ASC'
  | 'TYPE_DESC'
  | 'VALUE_USD_ASC'
  | 'VALUE_USD_DESC';

/** A filter to be used against `Broker` object types. All fields are combined with a logical ‘and.’ */
export type BrokerFilter = {
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<IntFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BrokerFilter>>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BrokerFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BrokerFilter>>;
};

export type BrokerMaxAggregates = {
  __typename?: 'BrokerMaxAggregates';
  /** Maximum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerMinAggregates = {
  __typename?: 'BrokerMinAggregates';
  /** Minimum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerStddevPopulationAggregates = {
  __typename?: 'BrokerStddevPopulationAggregates';
  /** Population standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerStddevSampleAggregates = {
  __typename?: 'BrokerStddevSampleAggregates';
  /** Sample standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerSumAggregates = {
  __typename?: 'BrokerSumAggregates';
  /** Sum of accountId across the matching connection */
  accountId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type BrokerVariancePopulationAggregates = {
  __typename?: 'BrokerVariancePopulationAggregates';
  /** Population variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerVarianceSampleAggregates = {
  __typename?: 'BrokerVarianceSampleAggregates';
  /** Sample variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerWithdrawal = Node & {
  __typename?: 'BrokerWithdrawal';
  asset: ChainflipAsset;
  /** Reads a single `Block` that is related to this `BrokerWithdrawal`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  /** Reads a single `Broker` that is related to this `BrokerWithdrawal`. */
  brokerByBrokerId: Broker;
  brokerId: Scalars['Int']['output'];
  chain: ChainflipChain;
  destinationAddress: Scalars['String']['output'];
  egressAmount: Scalars['BigFloat']['output'];
  egressFee: Scalars['BigFloat']['output'];
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  egressId: Scalars['BigInt']['output'];
  egressValueUsd: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `BrokerWithdrawal`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type BrokerWithdrawalAggregates = {
  __typename?: 'BrokerWithdrawalAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BrokerWithdrawalAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BrokerWithdrawalDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BrokerWithdrawalMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BrokerWithdrawalMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BrokerWithdrawalStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BrokerWithdrawalStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BrokerWithdrawalSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BrokerWithdrawalVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BrokerWithdrawalVarianceSampleAggregates>;
};

export type BrokerWithdrawalAverageAggregates = {
  __typename?: 'BrokerWithdrawalAverageAggregates';
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BrokerWithdrawal` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type BrokerWithdrawalCondition = {
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `brokerId` field. */
  brokerId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `egressAmount` field. */
  egressAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `egressFee` field. */
  egressFee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `egressFeeUsd` field. */
  egressFeeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `egressId` field. */
  egressId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `egressValueUsd` field. */
  egressValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type BrokerWithdrawalDistinctCountAggregates = {
  __typename?: 'BrokerWithdrawalDistinctCountAggregates';
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAddress across the matching connection */
  destinationAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BrokerWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type BrokerWithdrawalFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BrokerWithdrawalFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `brokerId` field. */
  brokerId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `egressAmount` field. */
  egressAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `egressFee` field. */
  egressFee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `egressFeeUsd` field. */
  egressFeeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `egressId` field. */
  egressId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `egressValueUsd` field. */
  egressValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BrokerWithdrawalFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BrokerWithdrawalFilter>>;
};

/** Grouping methods for `BrokerWithdrawal` for usage during aggregation. */
export type BrokerWithdrawalGroupBy =
  | 'ASSET'
  | 'BLOCK_ID'
  | 'BROKER_ID'
  | 'CHAIN'
  | 'DESTINATION_ADDRESS'
  | 'EGRESS_AMOUNT'
  | 'EGRESS_FEE'
  | 'EGRESS_FEE_USD'
  | 'EGRESS_ID'
  | 'EGRESS_VALUE_USD'
  | 'EVENT_ID';

export type BrokerWithdrawalHavingAverageInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingDistinctCountInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BrokerWithdrawal` aggregates. */
export type BrokerWithdrawalHavingInput = {
  AND?: InputMaybe<Array<BrokerWithdrawalHavingInput>>;
  OR?: InputMaybe<Array<BrokerWithdrawalHavingInput>>;
  average?: InputMaybe<BrokerWithdrawalHavingAverageInput>;
  distinctCount?: InputMaybe<BrokerWithdrawalHavingDistinctCountInput>;
  max?: InputMaybe<BrokerWithdrawalHavingMaxInput>;
  min?: InputMaybe<BrokerWithdrawalHavingMinInput>;
  stddevPopulation?: InputMaybe<BrokerWithdrawalHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BrokerWithdrawalHavingStddevSampleInput>;
  sum?: InputMaybe<BrokerWithdrawalHavingSumInput>;
  variancePopulation?: InputMaybe<BrokerWithdrawalHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BrokerWithdrawalHavingVarianceSampleInput>;
};

export type BrokerWithdrawalHavingMaxInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingMinInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingStddevPopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingStddevSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingSumInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingVariancePopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalHavingVarianceSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressFee?: InputMaybe<HavingBigfloatFilter>;
  egressFeeUsd?: InputMaybe<HavingBigfloatFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BrokerWithdrawalMaxAggregates = {
  __typename?: 'BrokerWithdrawalMaxAggregates';
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerWithdrawalMinAggregates = {
  __typename?: 'BrokerWithdrawalMinAggregates';
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BrokerWithdrawalStddevPopulationAggregates = {
  __typename?: 'BrokerWithdrawalStddevPopulationAggregates';
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerWithdrawalStddevSampleAggregates = {
  __typename?: 'BrokerWithdrawalStddevSampleAggregates';
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerWithdrawalSumAggregates = {
  __typename?: 'BrokerWithdrawalSumAggregates';
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of brokerId across the matching connection */
  brokerId: Scalars['BigInt']['output'];
  /** Sum of egressAmount across the matching connection */
  egressAmount: Scalars['BigFloat']['output'];
  /** Sum of egressFee across the matching connection */
  egressFee: Scalars['BigFloat']['output'];
  /** Sum of egressFeeUsd across the matching connection */
  egressFeeUsd: Scalars['BigFloat']['output'];
  /** Sum of egressId across the matching connection */
  egressId: Scalars['BigFloat']['output'];
  /** Sum of egressValueUsd across the matching connection */
  egressValueUsd: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type BrokerWithdrawalVariancePopulationAggregates = {
  __typename?: 'BrokerWithdrawalVariancePopulationAggregates';
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BrokerWithdrawalVarianceSampleAggregates = {
  __typename?: 'BrokerWithdrawalVarianceSampleAggregates';
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressFee across the matching connection */
  egressFee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressFeeUsd across the matching connection */
  egressFeeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BrokerWithdrawal` values. */
export type BrokerWithdrawalsConnection = {
  __typename?: 'BrokerWithdrawalsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BrokerWithdrawalAggregates>;
  /** A list of edges which contains the `BrokerWithdrawal` and cursor to aid in pagination. */
  edges: Array<BrokerWithdrawalsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BrokerWithdrawalAggregates>>;
  /** A list of `BrokerWithdrawal` objects. */
  nodes: Array<BrokerWithdrawal>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BrokerWithdrawal` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BrokerWithdrawal` values. */
export type BrokerWithdrawalsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BrokerWithdrawalGroupBy>;
  having?: InputMaybe<BrokerWithdrawalHavingInput>;
};

/** A `BrokerWithdrawal` edge in the connection. */
export type BrokerWithdrawalsEdge = {
  __typename?: 'BrokerWithdrawalsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BrokerWithdrawal` at the end of the edge. */
  node: BrokerWithdrawal;
};

/** Methods to use when ordering `BrokerWithdrawal`. */
export type BrokerWithdrawalsOrderBy =
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'BROKER_ID_ASC'
  | 'BROKER_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'DESTINATION_ADDRESS_ASC'
  | 'DESTINATION_ADDRESS_DESC'
  | 'EGRESS_AMOUNT_ASC'
  | 'EGRESS_AMOUNT_DESC'
  | 'EGRESS_FEE_ASC'
  | 'EGRESS_FEE_DESC'
  | 'EGRESS_FEE_USD_ASC'
  | 'EGRESS_FEE_USD_DESC'
  | 'EGRESS_ID_ASC'
  | 'EGRESS_ID_DESC'
  | 'EGRESS_VALUE_USD_ASC'
  | 'EGRESS_VALUE_USD_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

/** A connection to a list of `Broker` values. */
export type BrokersConnection = {
  __typename?: 'BrokersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BrokerAggregates>;
  /** A list of edges which contains the `Broker` and cursor to aid in pagination. */
  edges: Array<BrokersEdge>;
  /** A list of `Broker` objects. */
  nodes: Array<Broker>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Broker` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};

/** A `Broker` edge in the connection. */
export type BrokersEdge = {
  __typename?: 'BrokersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Broker` at the end of the edge. */
  node: Broker;
};

/** Methods to use when ordering `Broker`. */
export type BrokersOrderBy =
  | 'ACCOUNT_ID_ASC'
  | 'ACCOUNT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_AVERAGE_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_COUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_COUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MAX_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_MIN_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_SUM_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'BROKER_FEE_AND_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_AVERAGE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_COUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_COUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MAX_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_MIN_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_SUM_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_COUNT_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_COUNT_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC';

export type CandlestickData = {
  __typename?: 'CandlestickData';
  close: Scalars['Float']['output'];
  high: Scalars['Float']['output'];
  low: Scalars['Float']['output'];
  open: Scalars['Float']['output'];
  time: Scalars['Int']['output'];
};

export type CandlestickResult = CandlestickData | WhitespaceData;

export type CfeVersion = Node & {
  __typename?: 'CfeVersion';
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Validator`. */
  validatorsByCfeVersionId: ValidatorsConnection;
};


export type CfeVersionValidatorsByCfeVersionIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ValidatorCondition>;
  filter?: InputMaybe<ValidatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;
};

export type CfeVersionAggregates = {
  __typename?: 'CfeVersionAggregates';
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<CfeVersionDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
};

/**
 * A condition to be used against `CfeVersion` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type CfeVersionCondition = {
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CfeVersionDistinctCountAggregates = {
  __typename?: 'CfeVersionDistinctCountAggregates';
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `CfeVersion` object types. All fields are combined with a logical ‘and.’ */
export type CfeVersionFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<CfeVersionFilter>>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<CfeVersionFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<CfeVersionFilter>>;
};

/** A connection to a list of `CfeVersion` values. */
export type CfeVersionsConnection = {
  __typename?: 'CfeVersionsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<CfeVersionAggregates>;
  /** A list of edges which contains the `CfeVersion` and cursor to aid in pagination. */
  edges: Array<CfeVersionsEdge>;
  /** A list of `CfeVersion` objects. */
  nodes: Array<CfeVersion>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `CfeVersion` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};

/** A `CfeVersion` edge in the connection. */
export type CfeVersionsEdge = {
  __typename?: 'CfeVersionsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `CfeVersion` at the end of the edge. */
  node: CfeVersion;
};

/** Methods to use when ordering `CfeVersion`. */
export type CfeVersionsOrderBy =
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_AVERAGE_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_COUNT_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_COUNT_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_DISTINCT_COUNT_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MAX_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_MIN_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_POPULATION_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_STDDEV_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_SUM_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_POPULATION_LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_CFE_VERSION_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_CFE_VERSION_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'VALIDATORS_BY_CFE_VERSION_ID_VARIANCE_SAMPLE_LAST_HEARTBEAT_BLOCK_ID_DESC';

export type ChainTracking = Node & {
  __typename?: 'ChainTracking';
  chain: ChainflipChain;
  height: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  updatedAt: Scalars['Datetime']['output'];
};

export type ChainTrackingAggregates = {
  __typename?: 'ChainTrackingAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ChainTrackingAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ChainTrackingDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ChainTrackingMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ChainTrackingMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ChainTrackingStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ChainTrackingStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ChainTrackingSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ChainTrackingVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ChainTrackingVarianceSampleAggregates>;
};

export type ChainTrackingAverageAggregates = {
  __typename?: 'ChainTrackingAverageAggregates';
  /** Mean average of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `ChainTracking` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type ChainTrackingCondition = {
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `height` field. */
  height?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<Scalars['Datetime']['input']>;
};

export type ChainTrackingDistinctCountAggregates = {
  __typename?: 'ChainTrackingDistinctCountAggregates';
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of height across the matching connection */
  height?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `ChainTracking` object types. All fields are combined with a logical ‘and.’ */
export type ChainTrackingFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ChainTrackingFilter>>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `height` field. */
  height?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ChainTrackingFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ChainTrackingFilter>>;
  /** Filter by the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<DatetimeFilter>;
};

/** Grouping methods for `ChainTracking` for usage during aggregation. */
export type ChainTrackingGroupBy =
  | 'HEIGHT'
  | 'UPDATED_AT'
  | 'UPDATED_AT_TRUNCATED_TO_DAY'
  | 'UPDATED_AT_TRUNCATED_TO_HOUR';

export type ChainTrackingHavingAverageInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingDistinctCountInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `ChainTracking` aggregates. */
export type ChainTrackingHavingInput = {
  AND?: InputMaybe<Array<ChainTrackingHavingInput>>;
  OR?: InputMaybe<Array<ChainTrackingHavingInput>>;
  average?: InputMaybe<ChainTrackingHavingAverageInput>;
  distinctCount?: InputMaybe<ChainTrackingHavingDistinctCountInput>;
  max?: InputMaybe<ChainTrackingHavingMaxInput>;
  min?: InputMaybe<ChainTrackingHavingMinInput>;
  stddevPopulation?: InputMaybe<ChainTrackingHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ChainTrackingHavingStddevSampleInput>;
  sum?: InputMaybe<ChainTrackingHavingSumInput>;
  variancePopulation?: InputMaybe<ChainTrackingHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ChainTrackingHavingVarianceSampleInput>;
};

export type ChainTrackingHavingMaxInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingMinInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingStddevPopulationInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingStddevSampleInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingSumInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingVariancePopulationInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingHavingVarianceSampleInput = {
  height?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type ChainTrackingMaxAggregates = {
  __typename?: 'ChainTrackingMaxAggregates';
  /** Maximum of height across the matching connection */
  height?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type ChainTrackingMinAggregates = {
  __typename?: 'ChainTrackingMinAggregates';
  /** Minimum of height across the matching connection */
  height?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type ChainTrackingStddevPopulationAggregates = {
  __typename?: 'ChainTrackingStddevPopulationAggregates';
  /** Population standard deviation of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type ChainTrackingStddevSampleAggregates = {
  __typename?: 'ChainTrackingStddevSampleAggregates';
  /** Sample standard deviation of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type ChainTrackingSumAggregates = {
  __typename?: 'ChainTrackingSumAggregates';
  /** Sum of height across the matching connection */
  height: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type ChainTrackingVariancePopulationAggregates = {
  __typename?: 'ChainTrackingVariancePopulationAggregates';
  /** Population variance of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type ChainTrackingVarianceSampleAggregates = {
  __typename?: 'ChainTrackingVarianceSampleAggregates';
  /** Sample variance of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `ChainTracking` values. */
export type ChainTrackingsConnection = {
  __typename?: 'ChainTrackingsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ChainTrackingAggregates>;
  /** A list of edges which contains the `ChainTracking` and cursor to aid in pagination. */
  edges: Array<ChainTrackingsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ChainTrackingAggregates>>;
  /** A list of `ChainTracking` objects. */
  nodes: Array<ChainTracking>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ChainTracking` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ChainTracking` values. */
export type ChainTrackingsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ChainTrackingGroupBy>;
  having?: InputMaybe<ChainTrackingHavingInput>;
};

/** A `ChainTracking` edge in the connection. */
export type ChainTrackingsEdge = {
  __typename?: 'ChainTrackingsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ChainTracking` at the end of the edge. */
  node: ChainTracking;
};

/** Methods to use when ordering `ChainTracking`. */
export type ChainTrackingsOrderBy =
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'HEIGHT_ASC'
  | 'HEIGHT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'UPDATED_AT_ASC'
  | 'UPDATED_AT_DESC';

export type ChainflipAsset =
  | 'Btc'
  | 'Dot'
  | 'Eth'
  | 'Flip'
  | 'Usdc';

/** A filter to be used against ChainflipAsset fields. All fields are combined with a logical ‘and.’ */
export type ChainflipAssetFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<ChainflipAsset>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<ChainflipAsset>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<ChainflipAsset>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<ChainflipAsset>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<ChainflipAsset>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<ChainflipAsset>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<ChainflipAsset>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<ChainflipAsset>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<ChainflipAsset>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<ChainflipAsset>>;
};

export type ChainflipChain =
  | 'Bitcoin'
  | 'Ethereum'
  | 'Polkadot';

/** A filter to be used against ChainflipChain fields. All fields are combined with a logical ‘and.’ */
export type ChainflipChainFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<ChainflipChain>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<ChainflipChain>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<ChainflipChain>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<ChainflipChain>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<ChainflipChain>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<ChainflipChain>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<ChainflipChain>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<ChainflipChain>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<ChainflipChain>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<ChainflipChain>>;
};

export type Circulation = Node & {
  __typename?: 'Circulation';
  circulatingSupply: Scalars['BigFloat']['output'];
  circulatingSupplyNotStaked: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  totalLocked: Scalars['BigFloat']['output'];
  totalStaked: Scalars['BigFloat']['output'];
  totalSupply: Scalars['BigFloat']['output'];
};

export type CirculationAggregates = {
  __typename?: 'CirculationAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<CirculationAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<CirculationDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<CirculationMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<CirculationMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<CirculationStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<CirculationStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<CirculationSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<CirculationVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<CirculationVarianceSampleAggregates>;
};

export type CirculationAverageAggregates = {
  __typename?: 'CirculationAverageAggregates';
  /** Mean average of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `Circulation` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type CirculationCondition = {
  /** Checks for equality with the object’s `circulatingSupply` field. */
  circulatingSupply?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `circulatingSupplyNotStaked` field. */
  circulatingSupplyNotStaked?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `totalLocked` field. */
  totalLocked?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `totalStaked` field. */
  totalStaked?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `totalSupply` field. */
  totalSupply?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type CirculationDistinctCountAggregates = {
  __typename?: 'CirculationDistinctCountAggregates';
  /** Distinct count of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Circulation` object types. All fields are combined with a logical ‘and.’ */
export type CirculationFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<CirculationFilter>>;
  /** Filter by the object’s `circulatingSupply` field. */
  circulatingSupply?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `circulatingSupplyNotStaked` field. */
  circulatingSupplyNotStaked?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<CirculationFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<CirculationFilter>>;
  /** Filter by the object’s `totalLocked` field. */
  totalLocked?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `totalStaked` field. */
  totalStaked?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `totalSupply` field. */
  totalSupply?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `Circulation` for usage during aggregation. */
export type CirculationGroupBy =
  | 'CIRCULATING_SUPPLY'
  | 'CIRCULATING_SUPPLY_NOT_STAKED'
  | 'TOTAL_LOCKED'
  | 'TOTAL_STAKED'
  | 'TOTAL_SUPPLY';

export type CirculationHavingAverageInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingDistinctCountInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Circulation` aggregates. */
export type CirculationHavingInput = {
  AND?: InputMaybe<Array<CirculationHavingInput>>;
  OR?: InputMaybe<Array<CirculationHavingInput>>;
  average?: InputMaybe<CirculationHavingAverageInput>;
  distinctCount?: InputMaybe<CirculationHavingDistinctCountInput>;
  max?: InputMaybe<CirculationHavingMaxInput>;
  min?: InputMaybe<CirculationHavingMinInput>;
  stddevPopulation?: InputMaybe<CirculationHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<CirculationHavingStddevSampleInput>;
  sum?: InputMaybe<CirculationHavingSumInput>;
  variancePopulation?: InputMaybe<CirculationHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<CirculationHavingVarianceSampleInput>;
};

export type CirculationHavingMaxInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingMinInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingStddevPopulationInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingStddevSampleInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingSumInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingVariancePopulationInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationHavingVarianceSampleInput = {
  circulatingSupply?: InputMaybe<HavingBigfloatFilter>;
  circulatingSupplyNotStaked?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  totalLocked?: InputMaybe<HavingBigfloatFilter>;
  totalStaked?: InputMaybe<HavingBigfloatFilter>;
  totalSupply?: InputMaybe<HavingBigfloatFilter>;
};

export type CirculationMaxAggregates = {
  __typename?: 'CirculationMaxAggregates';
  /** Maximum of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

export type CirculationMinAggregates = {
  __typename?: 'CirculationMinAggregates';
  /** Minimum of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

export type CirculationStddevPopulationAggregates = {
  __typename?: 'CirculationStddevPopulationAggregates';
  /** Population standard deviation of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

export type CirculationStddevSampleAggregates = {
  __typename?: 'CirculationStddevSampleAggregates';
  /** Sample standard deviation of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

export type CirculationSumAggregates = {
  __typename?: 'CirculationSumAggregates';
  /** Sum of circulatingSupply across the matching connection */
  circulatingSupply: Scalars['BigFloat']['output'];
  /** Sum of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of totalLocked across the matching connection */
  totalLocked: Scalars['BigFloat']['output'];
  /** Sum of totalStaked across the matching connection */
  totalStaked: Scalars['BigFloat']['output'];
  /** Sum of totalSupply across the matching connection */
  totalSupply: Scalars['BigFloat']['output'];
};

export type CirculationVariancePopulationAggregates = {
  __typename?: 'CirculationVariancePopulationAggregates';
  /** Population variance of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

export type CirculationVarianceSampleAggregates = {
  __typename?: 'CirculationVarianceSampleAggregates';
  /** Sample variance of circulatingSupply across the matching connection */
  circulatingSupply?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of circulatingSupplyNotStaked across the matching connection */
  circulatingSupplyNotStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalLocked across the matching connection */
  totalLocked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalStaked across the matching connection */
  totalStaked?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalSupply across the matching connection */
  totalSupply?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Circulation` values. */
export type CirculationsConnection = {
  __typename?: 'CirculationsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<CirculationAggregates>;
  /** A list of edges which contains the `Circulation` and cursor to aid in pagination. */
  edges: Array<CirculationsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<CirculationAggregates>>;
  /** A list of `Circulation` objects. */
  nodes: Array<Circulation>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Circulation` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Circulation` values. */
export type CirculationsConnectionGroupedAggregatesArgs = {
  groupBy: Array<CirculationGroupBy>;
  having?: InputMaybe<CirculationHavingInput>;
};

/** A `Circulation` edge in the connection. */
export type CirculationsEdge = {
  __typename?: 'CirculationsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Circulation` at the end of the edge. */
  node: Circulation;
};

/** Methods to use when ordering `Circulation`. */
export type CirculationsOrderBy =
  | 'CIRCULATING_SUPPLY_ASC'
  | 'CIRCULATING_SUPPLY_DESC'
  | 'CIRCULATING_SUPPLY_NOT_STAKED_ASC'
  | 'CIRCULATING_SUPPLY_NOT_STAKED_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TOTAL_LOCKED_ASC'
  | 'TOTAL_LOCKED_DESC'
  | 'TOTAL_STAKED_ASC'
  | 'TOTAL_STAKED_DESC'
  | 'TOTAL_SUPPLY_ASC'
  | 'TOTAL_SUPPLY_DESC';

export type CollectedFee = Node & {
  __typename?: 'CollectedFee';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  /** Reads a single `Event` that is related to this `CollectedFee`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['BigInt']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `CollectedFee`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeAggregates = {
  __typename?: 'CollectedFeeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<CollectedFeeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<CollectedFeeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<CollectedFeeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<CollectedFeeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<CollectedFeeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<CollectedFeeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<CollectedFeeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<CollectedFeeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<CollectedFeeVarianceSampleAggregates>;
};

export type CollectedFeeAverageAggregates = {
  __typename?: 'CollectedFeeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `CollectedFee` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type CollectedFeeCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type CollectedFeeDistinctCountAggregates = {
  __typename?: 'CollectedFeeDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `CollectedFee` object types. All fields are combined with a logical ‘and.’ */
export type CollectedFeeFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<CollectedFeeFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<CollectedFeeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<CollectedFeeFilter>>;
  /** Filter by the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `CollectedFee` for usage during aggregation. */
export type CollectedFeeGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'EVENT_ID'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'VALUE_USD';

export type CollectedFeeHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `CollectedFee` aggregates. */
export type CollectedFeeHavingInput = {
  AND?: InputMaybe<Array<CollectedFeeHavingInput>>;
  OR?: InputMaybe<Array<CollectedFeeHavingInput>>;
  average?: InputMaybe<CollectedFeeHavingAverageInput>;
  distinctCount?: InputMaybe<CollectedFeeHavingDistinctCountInput>;
  max?: InputMaybe<CollectedFeeHavingMaxInput>;
  min?: InputMaybe<CollectedFeeHavingMinInput>;
  stddevPopulation?: InputMaybe<CollectedFeeHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<CollectedFeeHavingStddevSampleInput>;
  sum?: InputMaybe<CollectedFeeHavingSumInput>;
  variancePopulation?: InputMaybe<CollectedFeeHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<CollectedFeeHavingVarianceSampleInput>;
};

export type CollectedFeeHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type CollectedFeeMaxAggregates = {
  __typename?: 'CollectedFeeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeMinAggregates = {
  __typename?: 'CollectedFeeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeStddevPopulationAggregates = {
  __typename?: 'CollectedFeeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeStddevSampleAggregates = {
  __typename?: 'CollectedFeeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeSumAggregates = {
  __typename?: 'CollectedFeeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of valueUsd across the matching connection */
  valueUsd: Scalars['BigFloat']['output'];
};

export type CollectedFeeVariancePopulationAggregates = {
  __typename?: 'CollectedFeeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type CollectedFeeVarianceSampleAggregates = {
  __typename?: 'CollectedFeeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `CollectedFee` values. */
export type CollectedFeesConnection = {
  __typename?: 'CollectedFeesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<CollectedFeeAggregates>;
  /** A list of edges which contains the `CollectedFee` and cursor to aid in pagination. */
  edges: Array<CollectedFeesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<CollectedFeeAggregates>>;
  /** A list of `CollectedFee` objects. */
  nodes: Array<CollectedFee>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `CollectedFee` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `CollectedFee` values. */
export type CollectedFeesConnectionGroupedAggregatesArgs = {
  groupBy: Array<CollectedFeeGroupBy>;
  having?: InputMaybe<CollectedFeeHavingInput>;
};

/** A `CollectedFee` edge in the connection. */
export type CollectedFeesEdge = {
  __typename?: 'CollectedFeesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `CollectedFee` at the end of the edge. */
  node: CollectedFee;
};

/** Methods to use when ordering `CollectedFee`. */
export type CollectedFeesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'VALUE_USD_ASC'
  | 'VALUE_USD_DESC';

/** A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’ */
export type DatetimeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Datetime']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Datetime']['input']>>;
};

export type DepositBalance = {
  __typename?: 'DepositBalance';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  chain: ChainflipChain;
  /** Reads a single `LpAccount` that is related to this `DepositBalance`. */
  lpAccountByLpIdSs58: LpAccount;
  lpIdSs58: Scalars['String']['output'];
};

export type DepositBalanceAggregates = {
  __typename?: 'DepositBalanceAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DepositBalanceAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DepositBalanceDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DepositBalanceMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DepositBalanceMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DepositBalanceStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DepositBalanceStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DepositBalanceSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DepositBalanceVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DepositBalanceVarianceSampleAggregates>;
};

export type DepositBalanceAverageAggregates = {
  __typename?: 'DepositBalanceAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `DepositBalance` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type DepositBalanceCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `lpIdSs58` field. */
  lpIdSs58?: InputMaybe<Scalars['String']['input']>;
};

export type DepositBalanceDistinctCountAggregates = {
  __typename?: 'DepositBalanceDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lpIdSs58 across the matching connection */
  lpIdSs58?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `DepositBalance` object types. All fields are combined with a logical ‘and.’ */
export type DepositBalanceFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DepositBalanceFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `lpIdSs58` field. */
  lpIdSs58?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DepositBalanceFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DepositBalanceFilter>>;
};

/** Grouping methods for `DepositBalance` for usage during aggregation. */
export type DepositBalanceGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'CHAIN'
  | 'LP_ID_SS58';

export type DepositBalanceHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `DepositBalance` aggregates. */
export type DepositBalanceHavingInput = {
  AND?: InputMaybe<Array<DepositBalanceHavingInput>>;
  OR?: InputMaybe<Array<DepositBalanceHavingInput>>;
  average?: InputMaybe<DepositBalanceHavingAverageInput>;
  distinctCount?: InputMaybe<DepositBalanceHavingDistinctCountInput>;
  max?: InputMaybe<DepositBalanceHavingMaxInput>;
  min?: InputMaybe<DepositBalanceHavingMinInput>;
  stddevPopulation?: InputMaybe<DepositBalanceHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DepositBalanceHavingStddevSampleInput>;
  sum?: InputMaybe<DepositBalanceHavingSumInput>;
  variancePopulation?: InputMaybe<DepositBalanceHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DepositBalanceHavingVarianceSampleInput>;
};

export type DepositBalanceHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositBalanceMaxAggregates = {
  __typename?: 'DepositBalanceMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositBalanceMinAggregates = {
  __typename?: 'DepositBalanceMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositBalanceStddevPopulationAggregates = {
  __typename?: 'DepositBalanceStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositBalanceStddevSampleAggregates = {
  __typename?: 'DepositBalanceStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositBalanceSumAggregates = {
  __typename?: 'DepositBalanceSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
};

export type DepositBalanceVariancePopulationAggregates = {
  __typename?: 'DepositBalanceVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositBalanceVarianceSampleAggregates = {
  __typename?: 'DepositBalanceVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `DepositBalance` values. */
export type DepositBalancesConnection = {
  __typename?: 'DepositBalancesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DepositBalanceAggregates>;
  /** A list of edges which contains the `DepositBalance` and cursor to aid in pagination. */
  edges: Array<DepositBalancesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DepositBalanceAggregates>>;
  /** A list of `DepositBalance` objects. */
  nodes: Array<DepositBalance>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `DepositBalance` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `DepositBalance` values. */
export type DepositBalancesConnectionGroupedAggregatesArgs = {
  groupBy: Array<DepositBalanceGroupBy>;
  having?: InputMaybe<DepositBalanceHavingInput>;
};

/** A `DepositBalance` edge in the connection. */
export type DepositBalancesEdge = {
  __typename?: 'DepositBalancesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `DepositBalance` at the end of the edge. */
  node: DepositBalance;
};

/** Methods to use when ordering `DepositBalance`. */
export type DepositBalancesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'LP_ID_SS58_ASC'
  | 'LP_ID_SS58_DESC'
  | 'NATURAL';

export type DepositIgnoredReason =
  | 'BELOW_MINIMUM_DEPOSIT'
  | 'NOT_ENOUGH_TO_PAY_FEES';

/** A filter to be used against DepositIgnoredReason fields. All fields are combined with a logical ‘and.’ */
export type DepositIgnoredReasonFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<DepositIgnoredReason>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<DepositIgnoredReason>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<DepositIgnoredReason>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<DepositIgnoredReason>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<DepositIgnoredReason>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<DepositIgnoredReason>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<DepositIgnoredReason>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<DepositIgnoredReason>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<DepositIgnoredReason>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<DepositIgnoredReason>>;
};

export type EnvironmentAddress = Node & {
  __typename?: 'EnvironmentAddress';
  id: Scalars['Int']['output'];
  keyManagerAddress: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  redemptionTax: Scalars['BigFloat']['output'];
  runtimeVersion: Scalars['Int']['output'];
  stateChainGatewayAddress: Scalars['String']['output'];
};

export type EnvironmentAddressAggregates = {
  __typename?: 'EnvironmentAddressAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<EnvironmentAddressAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<EnvironmentAddressDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<EnvironmentAddressMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<EnvironmentAddressMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<EnvironmentAddressStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<EnvironmentAddressStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<EnvironmentAddressSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<EnvironmentAddressVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<EnvironmentAddressVarianceSampleAggregates>;
};

export type EnvironmentAddressAverageAggregates = {
  __typename?: 'EnvironmentAddressAverageAggregates';
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `EnvironmentAddress` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type EnvironmentAddressCondition = {
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `keyManagerAddress` field. */
  keyManagerAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `redemptionTax` field. */
  redemptionTax?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `runtimeVersion` field. */
  runtimeVersion?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `stateChainGatewayAddress` field. */
  stateChainGatewayAddress?: InputMaybe<Scalars['String']['input']>;
};

export type EnvironmentAddressDistinctCountAggregates = {
  __typename?: 'EnvironmentAddressDistinctCountAggregates';
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of keyManagerAddress across the matching connection */
  keyManagerAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of stateChainGatewayAddress across the matching connection */
  stateChainGatewayAddress?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `EnvironmentAddress` object types. All fields are combined with a logical ‘and.’ */
export type EnvironmentAddressFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<EnvironmentAddressFilter>>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `keyManagerAddress` field. */
  keyManagerAddress?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<EnvironmentAddressFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<EnvironmentAddressFilter>>;
  /** Filter by the object’s `redemptionTax` field. */
  redemptionTax?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `runtimeVersion` field. */
  runtimeVersion?: InputMaybe<IntFilter>;
  /** Filter by the object’s `stateChainGatewayAddress` field. */
  stateChainGatewayAddress?: InputMaybe<StringFilter>;
};

/** Grouping methods for `EnvironmentAddress` for usage during aggregation. */
export type EnvironmentAddressGroupBy =
  | 'KEY_MANAGER_ADDRESS'
  | 'REDEMPTION_TAX'
  | 'RUNTIME_VERSION'
  | 'STATE_CHAIN_GATEWAY_ADDRESS';

export type EnvironmentAddressHavingAverageInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingDistinctCountInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `EnvironmentAddress` aggregates. */
export type EnvironmentAddressHavingInput = {
  AND?: InputMaybe<Array<EnvironmentAddressHavingInput>>;
  OR?: InputMaybe<Array<EnvironmentAddressHavingInput>>;
  average?: InputMaybe<EnvironmentAddressHavingAverageInput>;
  distinctCount?: InputMaybe<EnvironmentAddressHavingDistinctCountInput>;
  max?: InputMaybe<EnvironmentAddressHavingMaxInput>;
  min?: InputMaybe<EnvironmentAddressHavingMinInput>;
  stddevPopulation?: InputMaybe<EnvironmentAddressHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<EnvironmentAddressHavingStddevSampleInput>;
  sum?: InputMaybe<EnvironmentAddressHavingSumInput>;
  variancePopulation?: InputMaybe<EnvironmentAddressHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<EnvironmentAddressHavingVarianceSampleInput>;
};

export type EnvironmentAddressHavingMaxInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingMinInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingStddevPopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingStddevSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingSumInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingVariancePopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressHavingVarianceSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
  redemptionTax?: InputMaybe<HavingBigfloatFilter>;
  runtimeVersion?: InputMaybe<HavingIntFilter>;
};

export type EnvironmentAddressMaxAggregates = {
  __typename?: 'EnvironmentAddressMaxAggregates';
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['Int']['output']>;
};

export type EnvironmentAddressMinAggregates = {
  __typename?: 'EnvironmentAddressMinAggregates';
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['Int']['output']>;
};

export type EnvironmentAddressStddevPopulationAggregates = {
  __typename?: 'EnvironmentAddressStddevPopulationAggregates';
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigFloat']['output']>;
};

export type EnvironmentAddressStddevSampleAggregates = {
  __typename?: 'EnvironmentAddressStddevSampleAggregates';
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigFloat']['output']>;
};

export type EnvironmentAddressSumAggregates = {
  __typename?: 'EnvironmentAddressSumAggregates';
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of redemptionTax across the matching connection */
  redemptionTax: Scalars['BigFloat']['output'];
  /** Sum of runtimeVersion across the matching connection */
  runtimeVersion: Scalars['BigInt']['output'];
};

export type EnvironmentAddressVariancePopulationAggregates = {
  __typename?: 'EnvironmentAddressVariancePopulationAggregates';
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigFloat']['output']>;
};

export type EnvironmentAddressVarianceSampleAggregates = {
  __typename?: 'EnvironmentAddressVarianceSampleAggregates';
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of redemptionTax across the matching connection */
  redemptionTax?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of runtimeVersion across the matching connection */
  runtimeVersion?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `EnvironmentAddress` values. */
export type EnvironmentAddressesConnection = {
  __typename?: 'EnvironmentAddressesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<EnvironmentAddressAggregates>;
  /** A list of edges which contains the `EnvironmentAddress` and cursor to aid in pagination. */
  edges: Array<EnvironmentAddressesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<EnvironmentAddressAggregates>>;
  /** A list of `EnvironmentAddress` objects. */
  nodes: Array<EnvironmentAddress>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `EnvironmentAddress` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `EnvironmentAddress` values. */
export type EnvironmentAddressesConnectionGroupedAggregatesArgs = {
  groupBy: Array<EnvironmentAddressGroupBy>;
  having?: InputMaybe<EnvironmentAddressHavingInput>;
};

/** A `EnvironmentAddress` edge in the connection. */
export type EnvironmentAddressesEdge = {
  __typename?: 'EnvironmentAddressesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `EnvironmentAddress` at the end of the edge. */
  node: EnvironmentAddress;
};

/** Methods to use when ordering `EnvironmentAddress`. */
export type EnvironmentAddressesOrderBy =
  | 'ID_ASC'
  | 'ID_DESC'
  | 'KEY_MANAGER_ADDRESS_ASC'
  | 'KEY_MANAGER_ADDRESS_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REDEMPTION_TAX_ASC'
  | 'REDEMPTION_TAX_DESC'
  | 'RUNTIME_VERSION_ASC'
  | 'RUNTIME_VERSION_DESC'
  | 'STATE_CHAIN_GATEWAY_ADDRESS_ASC'
  | 'STATE_CHAIN_GATEWAY_ADDRESS_DESC';

export type Epoch = Node & {
  __typename?: 'Epoch';
  /** Reads and enables pagination through a set of `AccountEpochBalanceChange`. */
  accountEpochBalanceChangesByEpochId: AccountEpochBalanceChangesConnection;
  /** Reads and enables pagination through a set of `AccountFundingEvent`. */
  accountFundingEventsByEpochId: AccountFundingEventsConnection;
  /** Reads and enables pagination through a set of `AuthorityHeartbeat`. */
  authorityHeartbeatsByEpochId: AuthorityHeartbeatsConnection;
  /** Reads and enables pagination through a set of `AuthorityMembership`. */
  authorityMembershipsByEpochId: AuthorityMembershipsConnection;
  /** Reads a single `Block` that is related to this `Epoch`. */
  blockByEndBlockId?: Maybe<Block>;
  /** Reads a single `Block` that is related to this `Epoch`. */
  blockByStartBlockId: Block;
  bond: Scalars['BigFloat']['output'];
  endBlockId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `RotationEvent`. */
  rotationEventsByEpochId: RotationEventsConnection;
  startBlockId: Scalars['Int']['output'];
  totalBonded: Scalars['BigFloat']['output'];
};


export type EpochAccountEpochBalanceChangesByEpochIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountEpochBalanceChangeCondition>;
  filter?: InputMaybe<AccountEpochBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountEpochBalanceChangesOrderBy>>;
};


export type EpochAccountFundingEventsByEpochIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountFundingEventCondition>;
  filter?: InputMaybe<AccountFundingEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountFundingEventsOrderBy>>;
};


export type EpochAuthorityHeartbeatsByEpochIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};


export type EpochAuthorityMembershipsByEpochIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityMembershipCondition>;
  filter?: InputMaybe<AuthorityMembershipFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityMembershipsOrderBy>>;
};


export type EpochRotationEventsByEpochIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RotationEventCondition>;
  filter?: InputMaybe<RotationEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RotationEventsOrderBy>>;
};

export type EpochAggregates = {
  __typename?: 'EpochAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<EpochAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<EpochDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<EpochMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<EpochMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<EpochStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<EpochStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<EpochSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<EpochVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<EpochVarianceSampleAggregates>;
};

export type EpochAverageAggregates = {
  __typename?: 'EpochAverageAggregates';
  /** Mean average of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Epoch` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type EpochCondition = {
  /** Checks for equality with the object’s `bond` field. */
  bond?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `endBlockId` field. */
  endBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `startBlockId` field. */
  startBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `totalBonded` field. */
  totalBonded?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type EpochDistinctCountAggregates = {
  __typename?: 'EpochDistinctCountAggregates';
  /** Distinct count of bond across the matching connection */
  bond?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Epoch` object types. All fields are combined with a logical ‘and.’ */
export type EpochFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<EpochFilter>>;
  /** Filter by the object’s `bond` field. */
  bond?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `endBlockId` field. */
  endBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<EpochFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<EpochFilter>>;
  /** Filter by the object’s `startBlockId` field. */
  startBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `totalBonded` field. */
  totalBonded?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `Epoch` for usage during aggregation. */
export type EpochGroupBy =
  | 'BOND'
  | 'TOTAL_BONDED';

export type EpochHavingAverageInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingDistinctCountInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Epoch` aggregates. */
export type EpochHavingInput = {
  AND?: InputMaybe<Array<EpochHavingInput>>;
  OR?: InputMaybe<Array<EpochHavingInput>>;
  average?: InputMaybe<EpochHavingAverageInput>;
  distinctCount?: InputMaybe<EpochHavingDistinctCountInput>;
  max?: InputMaybe<EpochHavingMaxInput>;
  min?: InputMaybe<EpochHavingMinInput>;
  stddevPopulation?: InputMaybe<EpochHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<EpochHavingStddevSampleInput>;
  sum?: InputMaybe<EpochHavingSumInput>;
  variancePopulation?: InputMaybe<EpochHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<EpochHavingVarianceSampleInput>;
};

export type EpochHavingMaxInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingMinInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingStddevPopulationInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingStddevSampleInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingSumInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingVariancePopulationInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochHavingVarianceSampleInput = {
  bond?: InputMaybe<HavingBigfloatFilter>;
  endBlockId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockId?: InputMaybe<HavingIntFilter>;
  totalBonded?: InputMaybe<HavingBigfloatFilter>;
};

export type EpochMaxAggregates = {
  __typename?: 'EpochMaxAggregates';
  /** Maximum of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

export type EpochMinAggregates = {
  __typename?: 'EpochMinAggregates';
  /** Minimum of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

export type EpochStddevPopulationAggregates = {
  __typename?: 'EpochStddevPopulationAggregates';
  /** Population standard deviation of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

export type EpochStddevSampleAggregates = {
  __typename?: 'EpochStddevSampleAggregates';
  /** Sample standard deviation of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

export type EpochSumAggregates = {
  __typename?: 'EpochSumAggregates';
  /** Sum of bond across the matching connection */
  bond: Scalars['BigFloat']['output'];
  /** Sum of endBlockId across the matching connection */
  endBlockId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of startBlockId across the matching connection */
  startBlockId: Scalars['BigInt']['output'];
  /** Sum of totalBonded across the matching connection */
  totalBonded: Scalars['BigFloat']['output'];
};

export type EpochVariancePopulationAggregates = {
  __typename?: 'EpochVariancePopulationAggregates';
  /** Population variance of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

export type EpochVarianceSampleAggregates = {
  __typename?: 'EpochVarianceSampleAggregates';
  /** Sample variance of bond across the matching connection */
  bond?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of endBlockId across the matching connection */
  endBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of startBlockId across the matching connection */
  startBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalBonded across the matching connection */
  totalBonded?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Epoch` values. */
export type EpochesConnection = {
  __typename?: 'EpochesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<EpochAggregates>;
  /** A list of edges which contains the `Epoch` and cursor to aid in pagination. */
  edges: Array<EpochesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<EpochAggregates>>;
  /** A list of `Epoch` objects. */
  nodes: Array<Epoch>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Epoch` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Epoch` values. */
export type EpochesConnectionGroupedAggregatesArgs = {
  groupBy: Array<EpochGroupBy>;
  having?: InputMaybe<EpochHavingInput>;
};

/** A `Epoch` edge in the connection. */
export type EpochesEdge = {
  __typename?: 'EpochesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Epoch` at the end of the edge. */
  node: Epoch;
};

/** Methods to use when ordering `Epoch`. */
export type EpochesOrderBy =
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_AVERAGE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_COUNT_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_COUNT_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_DISTINCT_COUNT_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MAX_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_MIN_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_POPULATION_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_STDDEV_SAMPLE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_SUM_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_POPULATION_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_BALANCE_CHANGE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_BALANCE_CHANGE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_END_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_END_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_START_OF_EPOCH_BALANCE_ASC'
  | 'ACCOUNT_EPOCH_BALANCE_CHANGES_BY_EPOCH_ID_VARIANCE_SAMPLE_START_OF_EPOCH_BALANCE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_AVERAGE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_COUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_COUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MAX_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_MIN_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_SUM_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_COUNT_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_COUNT_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_EPOCH_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_COUNT_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_COUNT_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_EPOCH_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'BOND_ASC'
  | 'BOND_DESC'
  | 'END_BLOCK_ID_ASC'
  | 'END_BLOCK_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_AVERAGE_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_COUNT_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_COUNT_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MAX_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_MIN_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_SUM_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EPOCH_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'START_BLOCK_ID_ASC'
  | 'START_BLOCK_ID_DESC'
  | 'TOTAL_BONDED_ASC'
  | 'TOTAL_BONDED_DESC';

export type Event = Node & {
  __typename?: 'Event';
  /** Reads and enables pagination through a set of `AccountFundingEvent`. */
  accountFundingEventsByEventId: AccountFundingEventsConnection;
  args?: Maybe<Scalars['JSON']['output']>;
  /** Reads a single `Block` that is related to this `Event`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `Broadcast`. */
  broadcastsByBroadcastAbortedEventId: BroadcastsConnection;
  /** Reads and enables pagination through a set of `Broadcast`. */
  broadcastsByBroadcastRequestedEventId: BroadcastsConnection;
  /** Reads and enables pagination through a set of `Broadcast`. */
  broadcastsByBroadcastSuccessEventId: BroadcastsConnection;
  /** Reads and enables pagination through a set of `Broadcast`. */
  broadcastsByTransactionBroadcastRequestEventId: BroadcastsConnection;
  /** Reads a single `BrokerFeeAndWithdrawal` that is related to this `Event`. */
  brokerFeeAndWithdrawalByEventId?: Maybe<BrokerFeeAndWithdrawal>;
  /**
   * Reads and enables pagination through a set of `BrokerFeeAndWithdrawal`.
   * @deprecated Please use brokerFeeAndWithdrawalByEventId instead
   */
  brokerFeeAndWithdrawalsByEventId: BrokerFeeAndWithdrawalsConnection;
  /** Reads and enables pagination through a set of `BrokerWithdrawal`. */
  brokerWithdrawalsByEventId: BrokerWithdrawalsConnection;
  /** Reads and enables pagination through a set of `CollectedFee`. */
  collectedFeesByEventId: CollectedFeesConnection;
  /** Reads a single `Extrinsic` that is related to this `Event`. */
  extrinsicByExtrinsicId?: Maybe<Extrinsic>;
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads and enables pagination through a set of `FailedSwap`. */
  failedSwapsBySwapFailedEventId: FailedSwapsConnection;
  id: Scalars['BigInt']['output'];
  /** Reads and enables pagination through a set of `IgnoredDeposit`. */
  ignoredDepositsByEventId: IgnoredDepositsConnection;
  indexInBlock: Scalars['Int']['output'];
  /** Reads a single `LiquidityBalanceEvent` that is related to this `Event`. */
  liquidityBalanceEventByEventId?: Maybe<LiquidityBalanceEvent>;
  /**
   * Reads and enables pagination through a set of `LiquidityBalanceEvent`.
   * @deprecated Please use liquidityBalanceEventByEventId instead
   */
  liquidityBalanceEventsByEventId: LiquidityBalanceEventsConnection;
  /** Reads and enables pagination through a set of `LiquidityDepositChannel`. */
  liquidityDepositChannelsByIssuedEventId: LiquidityDepositChannelsConnection;
  /** Reads and enables pagination through a set of `LiquidityDeposit`. */
  liquidityDepositsByEventId: LiquidityDepositsConnection;
  /** Reads and enables pagination through a set of `LiquidityWithdrawal`. */
  liquidityWithdrawalsByEventId: LiquidityWithdrawalsConnection;
  metadataId: Scalars['Int']['output'];
  /** Reads a single `Metadatum` that is related to this `Event`. */
  metadatumByMetadataId: Metadatum;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Penalty`. */
  penaltiesByEventId: PenaltiesConnection;
  /** Reads a single `PoolOrderEvent` that is related to this `Event`. */
  poolOrderEventByEventId?: Maybe<PoolOrderEvent>;
  /**
   * Reads and enables pagination through a set of `PoolOrderEvent`.
   * @deprecated Please use poolOrderEventByEventId instead
   */
  poolOrderEventsByEventId: PoolOrderEventsConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByOrderCreatedEventId: PoolOrdersConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByOrderLastUpdatedEventId: PoolOrdersConnection;
  /** Reads and enables pagination through a set of `PoolSwap`. */
  poolSwapsByAssetSwappedEventId: PoolSwapsConnection;
  /** Reads and enables pagination through a set of `RotationEvent`. */
  rotationEventsByEventId: RotationEventsConnection;
  /** Reads and enables pagination through a set of `SwapChannel`. */
  swapChannelsByExpiryEventId: SwapChannelsConnection;
  /** Reads and enables pagination through a set of `SwapChannel`. */
  swapChannelsByIssuedEventId: SwapChannelsConnection;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByCcmDepositReceivedEventId: SwapsConnection;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByEgressIgnoredEventId: SwapsConnection;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByEgressScheduledEventId: SwapsConnection;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsBySwapExecutedEventId: SwapsConnection;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsBySwapScheduledEventId: SwapsConnection;
};


export type EventAccountFundingEventsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountFundingEventCondition>;
  filter?: InputMaybe<AccountFundingEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountFundingEventsOrderBy>>;
};


export type EventBroadcastsByBroadcastAbortedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


export type EventBroadcastsByBroadcastRequestedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


export type EventBroadcastsByBroadcastSuccessEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


export type EventBroadcastsByTransactionBroadcastRequestEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


export type EventBrokerFeeAndWithdrawalsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerFeeAndWithdrawalCondition>;
  filter?: InputMaybe<BrokerFeeAndWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerFeeAndWithdrawalsOrderBy>>;
};


export type EventBrokerWithdrawalsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerWithdrawalCondition>;
  filter?: InputMaybe<BrokerWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerWithdrawalsOrderBy>>;
};


export type EventCollectedFeesByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<CollectedFeeCondition>;
  filter?: InputMaybe<CollectedFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CollectedFeesOrderBy>>;
};


export type EventFailedSwapsBySwapFailedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<FailedSwapCondition>;
  filter?: InputMaybe<FailedSwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FailedSwapsOrderBy>>;
};


export type EventIgnoredDepositsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<IgnoredDepositCondition>;
  filter?: InputMaybe<IgnoredDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IgnoredDepositsOrderBy>>;
};


export type EventLiquidityBalanceEventsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


export type EventLiquidityDepositChannelsByIssuedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositChannelCondition>;
  filter?: InputMaybe<LiquidityDepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositChannelsOrderBy>>;
};


export type EventLiquidityDepositsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositCondition>;
  filter?: InputMaybe<LiquidityDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositsOrderBy>>;
};


export type EventLiquidityWithdrawalsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityWithdrawalCondition>;
  filter?: InputMaybe<LiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityWithdrawalsOrderBy>>;
};


export type EventPenaltiesByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PenaltyCondition>;
  filter?: InputMaybe<PenaltyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PenaltiesOrderBy>>;
};


export type EventPoolOrderEventsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderEventCondition>;
  filter?: InputMaybe<PoolOrderEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrderEventsOrderBy>>;
};


export type EventPoolOrdersByOrderCreatedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


export type EventPoolOrdersByOrderLastUpdatedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


export type EventPoolSwapsByAssetSwappedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolSwapCondition>;
  filter?: InputMaybe<PoolSwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolSwapsOrderBy>>;
};


export type EventRotationEventsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RotationEventCondition>;
  filter?: InputMaybe<RotationEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RotationEventsOrderBy>>;
};


export type EventSwapChannelsByExpiryEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapChannelCondition>;
  filter?: InputMaybe<SwapChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapChannelsOrderBy>>;
};


export type EventSwapChannelsByIssuedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapChannelCondition>;
  filter?: InputMaybe<SwapChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapChannelsOrderBy>>;
};


export type EventSwapsByCcmDepositReceivedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};


export type EventSwapsByEgressIgnoredEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};


export type EventSwapsByEgressScheduledEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};


export type EventSwapsBySwapExecutedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};


export type EventSwapsBySwapScheduledEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};

export type EventAggregates = {
  __typename?: 'EventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<EventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<EventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<EventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<EventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<EventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<EventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<EventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<EventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<EventVarianceSampleAggregates>;
};

export type EventAverageAggregates = {
  __typename?: 'EventAverageAggregates';
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Event` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type EventCondition = {
  /** Checks for equality with the object’s `args` field. */
  args?: InputMaybe<Scalars['JSON']['input']>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `extrinsicId` field. */
  extrinsicId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `metadataId` field. */
  metadataId?: InputMaybe<Scalars['Int']['input']>;
};

export type EventDistinctCountAggregates = {
  __typename?: 'EventDistinctCountAggregates';
  /** Distinct count of args across the matching connection */
  args?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Event` object types. All fields are combined with a logical ‘and.’ */
export type EventFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<EventFilter>>;
  /** Filter by the object’s `args` field. */
  args?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `extrinsicId` field. */
  extrinsicId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<IntFilter>;
  /** Filter by the object’s `metadataId` field. */
  metadataId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<EventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<EventFilter>>;
};

/** Grouping methods for `Event` for usage during aggregation. */
export type EventGroupBy =
  | 'ARGS'
  | 'BLOCK_ID'
  | 'EXTRINSIC_ID'
  | 'INDEX_IN_BLOCK'
  | 'METADATA_ID';

export type EventHavingAverageInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingDistinctCountInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Event` aggregates. */
export type EventHavingInput = {
  AND?: InputMaybe<Array<EventHavingInput>>;
  OR?: InputMaybe<Array<EventHavingInput>>;
  average?: InputMaybe<EventHavingAverageInput>;
  distinctCount?: InputMaybe<EventHavingDistinctCountInput>;
  max?: InputMaybe<EventHavingMaxInput>;
  min?: InputMaybe<EventHavingMinInput>;
  stddevPopulation?: InputMaybe<EventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<EventHavingStddevSampleInput>;
  sum?: InputMaybe<EventHavingSumInput>;
  variancePopulation?: InputMaybe<EventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<EventHavingVarianceSampleInput>;
};

export type EventHavingMaxInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingMinInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingStddevPopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingStddevSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingSumInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingVariancePopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventHavingVarianceSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  extrinsicId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
};

export type EventMaxAggregates = {
  __typename?: 'EventMaxAggregates';
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
  /** Maximum of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['Int']['output']>;
};

export type EventMinAggregates = {
  __typename?: 'EventMinAggregates';
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
  /** Minimum of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['Int']['output']>;
};

export type EventStddevPopulationAggregates = {
  __typename?: 'EventStddevPopulationAggregates';
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventStddevSampleAggregates = {
  __typename?: 'EventStddevSampleAggregates';
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventSumAggregates = {
  __typename?: 'EventSumAggregates';
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of extrinsicId across the matching connection */
  extrinsicId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of indexInBlock across the matching connection */
  indexInBlock: Scalars['BigInt']['output'];
  /** Sum of metadataId across the matching connection */
  metadataId: Scalars['BigInt']['output'];
};

export type EventVariancePopulationAggregates = {
  __typename?: 'EventVariancePopulationAggregates';
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventVarianceSampleAggregates = {
  __typename?: 'EventVarianceSampleAggregates';
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of extrinsicId across the matching connection */
  extrinsicId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Event` values. */
export type EventsConnection = {
  __typename?: 'EventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<EventAggregates>;
  /** A list of edges which contains the `Event` and cursor to aid in pagination. */
  edges: Array<EventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<EventAggregates>>;
  /** A list of `Event` objects. */
  nodes: Array<Event>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Event` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Event` values. */
export type EventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<EventGroupBy>;
  having?: InputMaybe<EventHavingInput>;
};

/** A `Event` edge in the connection. */
export type EventsEdge = {
  __typename?: 'EventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Event` at the end of the edge. */
  node: Event;
};

/** Methods to use when ordering `Event`. */
export type EventsOrderBy =
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_COUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_COUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MAX_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_MIN_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_SUM_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ACCOUNT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'ACCOUNT_FUNDING_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'ARGS_ASC'
  | 'ARGS_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_COUNT_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_COUNT_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MAX_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_MIN_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_SUM_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_ABORTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_COUNT_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_COUNT_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MAX_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_MIN_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_SUM_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_REQUESTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_COUNT_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_COUNT_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MAX_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_MIN_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_SUM_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_BROADCAST_SUCCESS_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_COUNT_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_COUNT_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MAX_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_MIN_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_SUM_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ABORTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_REQUESTED_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_SUCCESS_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_REPLACED_BY_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TRANSACTION_PAYLOAD_DESC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BROADCASTS_BY_TRANSACTION_BROADCAST_REQUEST_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_COUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_COUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MAX_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_MIN_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_SUM_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_FEE_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_FEE_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_FEE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BROKER_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_AVERAGE_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_COUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_COUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MAX_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_MIN_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_SUM_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_EVENT_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'EXTRINSIC_ID_ASC'
  | 'EXTRINSIC_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_AVERAGE_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_COUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_COUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_DISTINCT_COUNT_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MAX_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_MIN_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_POPULATION_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_STDDEV_SAMPLE_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_SUM_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_POPULATION_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_SWAP_FAILED_EVENT_ID_VARIANCE_SAMPLE_SWAP_FAILED_EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_COUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_COUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'INDEX_IN_BLOCK_ASC'
  | 'INDEX_IN_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_AVERAGE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_COUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_COUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MAX_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_MIN_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_SUM_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_EVENT_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'METADATA_ID_ASC'
  | 'METADATA_ID_DESC'
  | 'NATURAL'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_COUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_COUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_MAX_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MAX_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_MIN_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_MIN_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_SUM_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_SUM_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_EVENT_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_AVERAGE_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_COUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_COUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_DISTINCT_COUNT_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MAX_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_MIN_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_POPULATION_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_STDDEV_SAMPLE_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_SUM_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_POPULATION_TO_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ASSET_SWAPPED_EVENT_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ASSET_SWAPPED_EVENT_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_FROM_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_FEE_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_FEE_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_AMOUNT_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_AMOUNT_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_ASSET_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_ASSET_DESC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_VALUE_USD_ASC'
  | 'POOL_SWAPS_BY_ASSET_SWAPPED_EVENT_ID_VARIANCE_SAMPLE_TO_VALUE_USD_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_COUNT_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_COUNT_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MAX_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_MIN_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_SUM_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'ROTATION_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_COUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_COUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_CCM_DEPOSIT_RECEIVED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_COUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_COUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_IGNORED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_COUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_COUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_EGRESS_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_COUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_COUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_EXECUTED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_COUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_COUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_SWAP_SCHEDULED_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_COUNT_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_COUNT_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_EXPIRY_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_COUNT_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_COUNT_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_BROKER_COMMISSION_RATE_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_EXPIRY_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SWAP_CHANNELS_BY_ISSUED_EVENT_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC';

export type ExecutedRedemption = Node & {
  __typename?: 'ExecutedRedemption';
  amount: Scalars['BigFloat']['output'];
  block: Scalars['String']['output'];
  blockTimestamp: Scalars['String']['output'];
  logIndex: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  txHash: Scalars['String']['output'];
  txId: Scalars['String']['output'];
  validatorIdHex: Scalars['String']['output'];
};

export type ExecutedRedemptionAggregates = {
  __typename?: 'ExecutedRedemptionAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ExecutedRedemptionAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ExecutedRedemptionDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ExecutedRedemptionMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ExecutedRedemptionMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ExecutedRedemptionStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ExecutedRedemptionStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ExecutedRedemptionSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ExecutedRedemptionVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ExecutedRedemptionVarianceSampleAggregates>;
};

export type ExecutedRedemptionAverageAggregates = {
  __typename?: 'ExecutedRedemptionAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `ExecutedRedemption` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type ExecutedRedemptionCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `logIndex` field. */
  logIndex?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `txHash` field. */
  txHash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `txId` field. */
  txId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<Scalars['String']['input']>;
};

export type ExecutedRedemptionDistinctCountAggregates = {
  __typename?: 'ExecutedRedemptionDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockTimestamp across the matching connection */
  blockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txHash across the matching connection */
  txHash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txId across the matching connection */
  txId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorIdHex across the matching connection */
  validatorIdHex?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `ExecutedRedemption` object types. All fields are combined with a logical ‘and.’ */
export type ExecutedRedemptionFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ExecutedRedemptionFilter>>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<StringFilter>;
  /** Filter by the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<StringFilter>;
  /** Filter by the object’s `logIndex` field. */
  logIndex?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ExecutedRedemptionFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ExecutedRedemptionFilter>>;
  /** Filter by the object’s `txHash` field. */
  txHash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `txId` field. */
  txId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<StringFilter>;
};

/** Grouping methods for `ExecutedRedemption` for usage during aggregation. */
export type ExecutedRedemptionGroupBy =
  | 'AMOUNT'
  | 'BLOCK'
  | 'BLOCK_TIMESTAMP'
  | 'LOG_INDEX'
  | 'TX_HASH'
  | 'TX_ID'
  | 'VALIDATOR_ID_HEX';

export type ExecutedRedemptionHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `ExecutedRedemption` aggregates. */
export type ExecutedRedemptionHavingInput = {
  AND?: InputMaybe<Array<ExecutedRedemptionHavingInput>>;
  OR?: InputMaybe<Array<ExecutedRedemptionHavingInput>>;
  average?: InputMaybe<ExecutedRedemptionHavingAverageInput>;
  distinctCount?: InputMaybe<ExecutedRedemptionHavingDistinctCountInput>;
  max?: InputMaybe<ExecutedRedemptionHavingMaxInput>;
  min?: InputMaybe<ExecutedRedemptionHavingMinInput>;
  stddevPopulation?: InputMaybe<ExecutedRedemptionHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ExecutedRedemptionHavingStddevSampleInput>;
  sum?: InputMaybe<ExecutedRedemptionHavingSumInput>;
  variancePopulation?: InputMaybe<ExecutedRedemptionHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ExecutedRedemptionHavingVarianceSampleInput>;
};

export type ExecutedRedemptionHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type ExecutedRedemptionMaxAggregates = {
  __typename?: 'ExecutedRedemptionMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type ExecutedRedemptionMinAggregates = {
  __typename?: 'ExecutedRedemptionMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type ExecutedRedemptionStddevPopulationAggregates = {
  __typename?: 'ExecutedRedemptionStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExecutedRedemptionStddevSampleAggregates = {
  __typename?: 'ExecutedRedemptionStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExecutedRedemptionSumAggregates = {
  __typename?: 'ExecutedRedemptionSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of logIndex across the matching connection */
  logIndex: Scalars['BigFloat']['output'];
};

export type ExecutedRedemptionVariancePopulationAggregates = {
  __typename?: 'ExecutedRedemptionVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExecutedRedemptionVarianceSampleAggregates = {
  __typename?: 'ExecutedRedemptionVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `ExecutedRedemption` values. */
export type ExecutedRedemptionsConnection = {
  __typename?: 'ExecutedRedemptionsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ExecutedRedemptionAggregates>;
  /** A list of edges which contains the `ExecutedRedemption` and cursor to aid in pagination. */
  edges: Array<ExecutedRedemptionsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ExecutedRedemptionAggregates>>;
  /** A list of `ExecutedRedemption` objects. */
  nodes: Array<ExecutedRedemption>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ExecutedRedemption` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ExecutedRedemption` values. */
export type ExecutedRedemptionsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ExecutedRedemptionGroupBy>;
  having?: InputMaybe<ExecutedRedemptionHavingInput>;
};

/** A `ExecutedRedemption` edge in the connection. */
export type ExecutedRedemptionsEdge = {
  __typename?: 'ExecutedRedemptionsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ExecutedRedemption` at the end of the edge. */
  node: ExecutedRedemption;
};

/** Methods to use when ordering `ExecutedRedemption`. */
export type ExecutedRedemptionsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BLOCK_TIMESTAMP_ASC'
  | 'BLOCK_TIMESTAMP_DESC'
  | 'LOG_INDEX_ASC'
  | 'LOG_INDEX_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TX_HASH_ASC'
  | 'TX_HASH_DESC'
  | 'TX_ID_ASC'
  | 'TX_ID_DESC'
  | 'VALIDATOR_ID_HEX_ASC'
  | 'VALIDATOR_ID_HEX_DESC';

export type Extrinsic = Node & {
  __typename?: 'Extrinsic';
  /** Reads a single `Account` that is related to this `Extrinsic`. */
  accountBySubmitterId?: Maybe<Account>;
  args?: Maybe<Scalars['JSON']['output']>;
  /** Reads a single `AuthorityHeartbeat` that is related to this `Extrinsic`. */
  authorityHeartbeatByExtrinsicId?: Maybe<AuthorityHeartbeat>;
  /**
   * Reads and enables pagination through a set of `AuthorityHeartbeat`.
   * @deprecated Please use authorityHeartbeatByExtrinsicId instead
   */
  authorityHeartbeatsByExtrinsicId: AuthorityHeartbeatsConnection;
  /** Reads a single `Block` that is related to this `Extrinsic`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  error?: Maybe<Scalars['JSON']['output']>;
  /** Reads and enables pagination through a set of `Event`. */
  eventsByExtrinsicId: EventsConnection;
  fee?: Maybe<Scalars['BigFloat']['output']>;
  hash: Scalars['String']['output'];
  id: Scalars['BigInt']['output'];
  indexInBlock: Scalars['Int']['output'];
  metadataId: Scalars['Int']['output'];
  /** Reads a single `Metadatum` that is related to this `Extrinsic`. */
  metadatumByMetadataId: Metadatum;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  signature?: Maybe<Scalars['String']['output']>;
  submitterId?: Maybe<Scalars['Int']['output']>;
  success: Scalars['Boolean']['output'];
  tip?: Maybe<Scalars['BigFloat']['output']>;
  version?: Maybe<Scalars['Int']['output']>;
};


export type ExtrinsicAuthorityHeartbeatsByExtrinsicIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};


export type ExtrinsicEventsByExtrinsicIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EventCondition>;
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventsOrderBy>>;
};

export type ExtrinsicAggregates = {
  __typename?: 'ExtrinsicAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ExtrinsicAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ExtrinsicDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ExtrinsicMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ExtrinsicMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ExtrinsicStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ExtrinsicStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ExtrinsicSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ExtrinsicVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ExtrinsicVarianceSampleAggregates>;
};

export type ExtrinsicAverageAggregates = {
  __typename?: 'ExtrinsicAverageAggregates';
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of version across the matching connection */
  version?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `Extrinsic` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type ExtrinsicCondition = {
  /** Checks for equality with the object’s `args` field. */
  args?: InputMaybe<Scalars['JSON']['input']>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `error` field. */
  error?: InputMaybe<Scalars['JSON']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `hash` field. */
  hash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `metadataId` field. */
  metadataId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `signature` field. */
  signature?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `submitterId` field. */
  submitterId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `success` field. */
  success?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `tip` field. */
  tip?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `version` field. */
  version?: InputMaybe<Scalars['Int']['input']>;
};

export type ExtrinsicDistinctCountAggregates = {
  __typename?: 'ExtrinsicDistinctCountAggregates';
  /** Distinct count of args across the matching connection */
  args?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of error across the matching connection */
  error?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of hash across the matching connection */
  hash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of signature across the matching connection */
  signature?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of success across the matching connection */
  success?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of tip across the matching connection */
  tip?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of version across the matching connection */
  version?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Extrinsic` object types. All fields are combined with a logical ‘and.’ */
export type ExtrinsicFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ExtrinsicFilter>>;
  /** Filter by the object’s `args` field. */
  args?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `error` field. */
  error?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `hash` field. */
  hash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<IntFilter>;
  /** Filter by the object’s `metadataId` field. */
  metadataId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ExtrinsicFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ExtrinsicFilter>>;
  /** Filter by the object’s `signature` field. */
  signature?: InputMaybe<StringFilter>;
  /** Filter by the object’s `submitterId` field. */
  submitterId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `success` field. */
  success?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `tip` field. */
  tip?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `version` field. */
  version?: InputMaybe<IntFilter>;
};

/** Grouping methods for `Extrinsic` for usage during aggregation. */
export type ExtrinsicGroupBy =
  | 'ARGS'
  | 'BLOCK_ID'
  | 'ERROR'
  | 'FEE'
  | 'HASH'
  | 'INDEX_IN_BLOCK'
  | 'METADATA_ID'
  | 'SIGNATURE'
  | 'SUBMITTER_ID'
  | 'SUCCESS'
  | 'TIP'
  | 'VERSION';

export type ExtrinsicHavingAverageInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingDistinctCountInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Extrinsic` aggregates. */
export type ExtrinsicHavingInput = {
  AND?: InputMaybe<Array<ExtrinsicHavingInput>>;
  OR?: InputMaybe<Array<ExtrinsicHavingInput>>;
  average?: InputMaybe<ExtrinsicHavingAverageInput>;
  distinctCount?: InputMaybe<ExtrinsicHavingDistinctCountInput>;
  max?: InputMaybe<ExtrinsicHavingMaxInput>;
  min?: InputMaybe<ExtrinsicHavingMinInput>;
  stddevPopulation?: InputMaybe<ExtrinsicHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ExtrinsicHavingStddevSampleInput>;
  sum?: InputMaybe<ExtrinsicHavingSumInput>;
  variancePopulation?: InputMaybe<ExtrinsicHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ExtrinsicHavingVarianceSampleInput>;
};

export type ExtrinsicHavingMaxInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingMinInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingStddevPopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingStddevSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingSumInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingVariancePopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicHavingVarianceSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  metadataId?: InputMaybe<HavingIntFilter>;
  submitterId?: InputMaybe<HavingIntFilter>;
  tip?: InputMaybe<HavingBigfloatFilter>;
  version?: InputMaybe<HavingIntFilter>;
};

export type ExtrinsicMaxAggregates = {
  __typename?: 'ExtrinsicMaxAggregates';
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
  /** Maximum of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of version across the matching connection */
  version?: Maybe<Scalars['Int']['output']>;
};

export type ExtrinsicMinAggregates = {
  __typename?: 'ExtrinsicMinAggregates';
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
  /** Minimum of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of version across the matching connection */
  version?: Maybe<Scalars['Int']['output']>;
};

export type ExtrinsicStddevPopulationAggregates = {
  __typename?: 'ExtrinsicStddevPopulationAggregates';
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of version across the matching connection */
  version?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExtrinsicStddevSampleAggregates = {
  __typename?: 'ExtrinsicStddevSampleAggregates';
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of version across the matching connection */
  version?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExtrinsicSumAggregates = {
  __typename?: 'ExtrinsicSumAggregates';
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of indexInBlock across the matching connection */
  indexInBlock: Scalars['BigInt']['output'];
  /** Sum of metadataId across the matching connection */
  metadataId: Scalars['BigInt']['output'];
  /** Sum of submitterId across the matching connection */
  submitterId: Scalars['BigInt']['output'];
  /** Sum of tip across the matching connection */
  tip: Scalars['BigFloat']['output'];
  /** Sum of version across the matching connection */
  version: Scalars['BigInt']['output'];
};

export type ExtrinsicVariancePopulationAggregates = {
  __typename?: 'ExtrinsicVariancePopulationAggregates';
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of version across the matching connection */
  version?: Maybe<Scalars['BigFloat']['output']>;
};

export type ExtrinsicVarianceSampleAggregates = {
  __typename?: 'ExtrinsicVarianceSampleAggregates';
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of metadataId across the matching connection */
  metadataId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of submitterId across the matching connection */
  submitterId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of tip across the matching connection */
  tip?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of version across the matching connection */
  version?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Extrinsic` values. */
export type ExtrinsicsConnection = {
  __typename?: 'ExtrinsicsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ExtrinsicAggregates>;
  /** A list of edges which contains the `Extrinsic` and cursor to aid in pagination. */
  edges: Array<ExtrinsicsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ExtrinsicAggregates>>;
  /** A list of `Extrinsic` objects. */
  nodes: Array<Extrinsic>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Extrinsic` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Extrinsic` values. */
export type ExtrinsicsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ExtrinsicGroupBy>;
  having?: InputMaybe<ExtrinsicHavingInput>;
};

/** A `Extrinsic` edge in the connection. */
export type ExtrinsicsEdge = {
  __typename?: 'ExtrinsicsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Extrinsic` at the end of the edge. */
  node: Extrinsic;
};

/** Methods to use when ordering `Extrinsic`. */
export type ExtrinsicsOrderBy =
  | 'ARGS_ASC'
  | 'ARGS_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'ERROR_ASC'
  | 'ERROR_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_AVERAGE_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_COUNT_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_COUNT_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MAX_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_MIN_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_SUM_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_EXTRINSIC_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'HASH_ASC'
  | 'HASH_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'INDEX_IN_BLOCK_ASC'
  | 'INDEX_IN_BLOCK_DESC'
  | 'METADATA_ID_ASC'
  | 'METADATA_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SIGNATURE_ASC'
  | 'SIGNATURE_DESC'
  | 'SUBMITTER_ID_ASC'
  | 'SUBMITTER_ID_DESC'
  | 'SUCCESS_ASC'
  | 'SUCCESS_DESC'
  | 'TIP_ASC'
  | 'TIP_DESC'
  | 'VERSION_ASC'
  | 'VERSION_DESC';

export type FailedSwap = Node & {
  __typename?: 'FailedSwap';
  depositAmount: Scalars['BigFloat']['output'];
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  destinationAddress: Scalars['String']['output'];
  destinationChain: ChainflipChain;
  /** Reads a single `Event` that is related to this `FailedSwap`. */
  eventBySwapFailedEventId: Event;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  sourceAsset: ChainflipAsset;
  sourceChain: ChainflipChain;
  /** Reads a single `SwapChannel` that is related to this `FailedSwap`. */
  swapChannelByDepositChannelId?: Maybe<SwapChannel>;
  swapFailedEventId: Scalars['BigInt']['output'];
};

export type FailedSwapAggregates = {
  __typename?: 'FailedSwapAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<FailedSwapAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<FailedSwapDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<FailedSwapMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<FailedSwapMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<FailedSwapStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<FailedSwapStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<FailedSwapSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<FailedSwapVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<FailedSwapVarianceSampleAggregates>;
};

export type FailedSwapAverageAggregates = {
  __typename?: 'FailedSwapAverageAggregates';
  /** Mean average of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `FailedSwap` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type FailedSwapCondition = {
  /** Checks for equality with the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `swapFailedEventId` field. */
  swapFailedEventId?: InputMaybe<Scalars['BigInt']['input']>;
};

export type FailedSwapDistinctCountAggregates = {
  __typename?: 'FailedSwapDistinctCountAggregates';
  /** Distinct count of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAddress across the matching connection */
  destinationAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationChain across the matching connection */
  destinationChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceAsset across the matching connection */
  sourceAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceChain across the matching connection */
  sourceChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `FailedSwap` object types. All fields are combined with a logical ‘and.’ */
export type FailedSwapFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<FailedSwapFilter>>;
  /** Filter by the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<FailedSwapFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<FailedSwapFilter>>;
  /** Filter by the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `swapFailedEventId` field. */
  swapFailedEventId?: InputMaybe<BigIntFilter>;
};

/** Grouping methods for `FailedSwap` for usage during aggregation. */
export type FailedSwapGroupBy =
  | 'DEPOSIT_AMOUNT'
  | 'DEPOSIT_CHANNEL_ID'
  | 'DESTINATION_ADDRESS'
  | 'DESTINATION_CHAIN'
  | 'SOURCE_ASSET'
  | 'SOURCE_CHAIN'
  | 'SWAP_FAILED_EVENT_ID';

export type FailedSwapHavingAverageInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingDistinctCountInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `FailedSwap` aggregates. */
export type FailedSwapHavingInput = {
  AND?: InputMaybe<Array<FailedSwapHavingInput>>;
  OR?: InputMaybe<Array<FailedSwapHavingInput>>;
  average?: InputMaybe<FailedSwapHavingAverageInput>;
  distinctCount?: InputMaybe<FailedSwapHavingDistinctCountInput>;
  max?: InputMaybe<FailedSwapHavingMaxInput>;
  min?: InputMaybe<FailedSwapHavingMinInput>;
  stddevPopulation?: InputMaybe<FailedSwapHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<FailedSwapHavingStddevSampleInput>;
  sum?: InputMaybe<FailedSwapHavingSumInput>;
  variancePopulation?: InputMaybe<FailedSwapHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<FailedSwapHavingVarianceSampleInput>;
};

export type FailedSwapHavingMaxInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingMinInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingStddevPopulationInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingStddevSampleInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingSumInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingVariancePopulationInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapHavingVarianceSampleInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapFailedEventId?: InputMaybe<HavingBigintFilter>;
};

export type FailedSwapMaxAggregates = {
  __typename?: 'FailedSwapMaxAggregates';
  /** Maximum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type FailedSwapMinAggregates = {
  __typename?: 'FailedSwapMinAggregates';
  /** Minimum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type FailedSwapStddevPopulationAggregates = {
  __typename?: 'FailedSwapStddevPopulationAggregates';
  /** Population standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type FailedSwapStddevSampleAggregates = {
  __typename?: 'FailedSwapStddevSampleAggregates';
  /** Sample standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type FailedSwapSumAggregates = {
  __typename?: 'FailedSwapSumAggregates';
  /** Sum of depositAmount across the matching connection */
  depositAmount: Scalars['BigFloat']['output'];
  /** Sum of depositChannelId across the matching connection */
  depositChannelId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of swapFailedEventId across the matching connection */
  swapFailedEventId: Scalars['BigFloat']['output'];
};

export type FailedSwapVariancePopulationAggregates = {
  __typename?: 'FailedSwapVariancePopulationAggregates';
  /** Population variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type FailedSwapVarianceSampleAggregates = {
  __typename?: 'FailedSwapVarianceSampleAggregates';
  /** Sample variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapFailedEventId across the matching connection */
  swapFailedEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `FailedSwap` values. */
export type FailedSwapsConnection = {
  __typename?: 'FailedSwapsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<FailedSwapAggregates>;
  /** A list of edges which contains the `FailedSwap` and cursor to aid in pagination. */
  edges: Array<FailedSwapsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<FailedSwapAggregates>>;
  /** A list of `FailedSwap` objects. */
  nodes: Array<FailedSwap>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `FailedSwap` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `FailedSwap` values. */
export type FailedSwapsConnectionGroupedAggregatesArgs = {
  groupBy: Array<FailedSwapGroupBy>;
  having?: InputMaybe<FailedSwapHavingInput>;
};

/** A `FailedSwap` edge in the connection. */
export type FailedSwapsEdge = {
  __typename?: 'FailedSwapsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `FailedSwap` at the end of the edge. */
  node: FailedSwap;
};

/** Methods to use when ordering `FailedSwap`. */
export type FailedSwapsOrderBy =
  | 'DEPOSIT_AMOUNT_ASC'
  | 'DEPOSIT_AMOUNT_DESC'
  | 'DEPOSIT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNEL_ID_DESC'
  | 'DESTINATION_ADDRESS_ASC'
  | 'DESTINATION_ADDRESS_DESC'
  | 'DESTINATION_CHAIN_ASC'
  | 'DESTINATION_CHAIN_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SOURCE_ASSET_ASC'
  | 'SOURCE_ASSET_DESC'
  | 'SOURCE_CHAIN_ASC'
  | 'SOURCE_CHAIN_DESC'
  | 'SWAP_FAILED_EVENT_ID_ASC'
  | 'SWAP_FAILED_EVENT_ID_DESC';

/** A connection to a list of `FlipSupply` values. */
export type FlipSuppliesConnection = {
  __typename?: 'FlipSuppliesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<FlipSupplyAggregates>;
  /** A list of edges which contains the `FlipSupply` and cursor to aid in pagination. */
  edges: Array<FlipSuppliesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<FlipSupplyAggregates>>;
  /** A list of `FlipSupply` objects. */
  nodes: Array<FlipSupply>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `FlipSupply` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `FlipSupply` values. */
export type FlipSuppliesConnectionGroupedAggregatesArgs = {
  groupBy: Array<FlipSupplyGroupBy>;
  having?: InputMaybe<FlipSupplyHavingInput>;
};

/** A `FlipSupply` edge in the connection. */
export type FlipSuppliesEdge = {
  __typename?: 'FlipSuppliesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `FlipSupply` at the end of the edge. */
  node: FlipSupply;
};

/** Methods to use when ordering `FlipSupply`. */
export type FlipSuppliesOrderBy =
  | 'ANNUAL_SYSTEM_COMPOUNDED_REWARDS_ASC'
  | 'ANNUAL_SYSTEM_COMPOUNDED_REWARDS_DESC'
  | 'AUTHORITY_EMISSION_PER_BLOCK_ASC'
  | 'AUTHORITY_EMISSION_PER_BLOCK_DESC'
  | 'BACKUP_NODE_EMISSION_PER_BLOCK_ASC'
  | 'BACKUP_NODE_EMISSION_PER_BLOCK_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'OFFCHAIN_FUNDS_ASC'
  | 'OFFCHAIN_FUNDS_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'START_BLOCK_HEIGHT_ASC'
  | 'START_BLOCK_HEIGHT_DESC'
  | 'START_BLOCK_TIMESTAMP_ASC'
  | 'START_BLOCK_TIMESTAMP_DESC'
  | 'TOTAL_ANNUAL_EMISSION_ASC'
  | 'TOTAL_ANNUAL_EMISSION_DESC'
  | 'TOTAL_ISSUANCE_ASC'
  | 'TOTAL_ISSUANCE_DESC';

export type FlipSupply = Node & {
  __typename?: 'FlipSupply';
  annualSystemCompoundedRewards: Scalars['String']['output'];
  authorityEmissionPerBlock: Scalars['BigFloat']['output'];
  backupNodeEmissionPerBlock: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  offchainFunds: Scalars['String']['output'];
  startBlockHeight: Scalars['Int']['output'];
  startBlockTimestamp: Scalars['BigInt']['output'];
  totalAnnualEmission: Scalars['BigFloat']['output'];
  totalIssuance: Scalars['String']['output'];
};

export type FlipSupplyAggregates = {
  __typename?: 'FlipSupplyAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<FlipSupplyAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<FlipSupplyDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<FlipSupplyMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<FlipSupplyMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<FlipSupplyStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<FlipSupplyStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<FlipSupplySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<FlipSupplyVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<FlipSupplyVarianceSampleAggregates>;
};

export type FlipSupplyAverageAggregates = {
  __typename?: 'FlipSupplyAverageAggregates';
  /** Mean average of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `FlipSupply` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type FlipSupplyCondition = {
  /** Checks for equality with the object’s `annualSystemCompoundedRewards` field. */
  annualSystemCompoundedRewards?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `authorityEmissionPerBlock` field. */
  authorityEmissionPerBlock?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `backupNodeEmissionPerBlock` field. */
  backupNodeEmissionPerBlock?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `offchainFunds` field. */
  offchainFunds?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `startBlockHeight` field. */
  startBlockHeight?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `startBlockTimestamp` field. */
  startBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `totalAnnualEmission` field. */
  totalAnnualEmission?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `totalIssuance` field. */
  totalIssuance?: InputMaybe<Scalars['String']['input']>;
};

export type FlipSupplyDistinctCountAggregates = {
  __typename?: 'FlipSupplyDistinctCountAggregates';
  /** Distinct count of annualSystemCompoundedRewards across the matching connection */
  annualSystemCompoundedRewards?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of offchainFunds across the matching connection */
  offchainFunds?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalIssuance across the matching connection */
  totalIssuance?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `FlipSupply` object types. All fields are combined with a logical ‘and.’ */
export type FlipSupplyFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<FlipSupplyFilter>>;
  /** Filter by the object’s `annualSystemCompoundedRewards` field. */
  annualSystemCompoundedRewards?: InputMaybe<StringFilter>;
  /** Filter by the object’s `authorityEmissionPerBlock` field. */
  authorityEmissionPerBlock?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `backupNodeEmissionPerBlock` field. */
  backupNodeEmissionPerBlock?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<FlipSupplyFilter>;
  /** Filter by the object’s `offchainFunds` field. */
  offchainFunds?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<FlipSupplyFilter>>;
  /** Filter by the object’s `startBlockHeight` field. */
  startBlockHeight?: InputMaybe<IntFilter>;
  /** Filter by the object’s `startBlockTimestamp` field. */
  startBlockTimestamp?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `totalAnnualEmission` field. */
  totalAnnualEmission?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `totalIssuance` field. */
  totalIssuance?: InputMaybe<StringFilter>;
};

/** Grouping methods for `FlipSupply` for usage during aggregation. */
export type FlipSupplyGroupBy =
  | 'ANNUAL_SYSTEM_COMPOUNDED_REWARDS'
  | 'AUTHORITY_EMISSION_PER_BLOCK'
  | 'BACKUP_NODE_EMISSION_PER_BLOCK'
  | 'OFFCHAIN_FUNDS'
  | 'START_BLOCK_HEIGHT'
  | 'START_BLOCK_TIMESTAMP'
  | 'TOTAL_ANNUAL_EMISSION'
  | 'TOTAL_ISSUANCE';

export type FlipSupplyHavingAverageInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingDistinctCountInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `FlipSupply` aggregates. */
export type FlipSupplyHavingInput = {
  AND?: InputMaybe<Array<FlipSupplyHavingInput>>;
  OR?: InputMaybe<Array<FlipSupplyHavingInput>>;
  average?: InputMaybe<FlipSupplyHavingAverageInput>;
  distinctCount?: InputMaybe<FlipSupplyHavingDistinctCountInput>;
  max?: InputMaybe<FlipSupplyHavingMaxInput>;
  min?: InputMaybe<FlipSupplyHavingMinInput>;
  stddevPopulation?: InputMaybe<FlipSupplyHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<FlipSupplyHavingStddevSampleInput>;
  sum?: InputMaybe<FlipSupplyHavingSumInput>;
  variancePopulation?: InputMaybe<FlipSupplyHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<FlipSupplyHavingVarianceSampleInput>;
};

export type FlipSupplyHavingMaxInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingMinInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingStddevPopulationInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingStddevSampleInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingSumInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingVariancePopulationInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyHavingVarianceSampleInput = {
  authorityEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  backupNodeEmissionPerBlock?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  startBlockHeight?: InputMaybe<HavingIntFilter>;
  startBlockTimestamp?: InputMaybe<HavingBigintFilter>;
  totalAnnualEmission?: InputMaybe<HavingBigfloatFilter>;
};

export type FlipSupplyMaxAggregates = {
  __typename?: 'FlipSupplyMaxAggregates';
  /** Maximum of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['Int']['output']>;
  /** Maximum of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

export type FlipSupplyMinAggregates = {
  __typename?: 'FlipSupplyMinAggregates';
  /** Minimum of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['Int']['output']>;
  /** Minimum of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

export type FlipSupplyStddevPopulationAggregates = {
  __typename?: 'FlipSupplyStddevPopulationAggregates';
  /** Population standard deviation of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

export type FlipSupplyStddevSampleAggregates = {
  __typename?: 'FlipSupplyStddevSampleAggregates';
  /** Sample standard deviation of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

export type FlipSupplySumAggregates = {
  __typename?: 'FlipSupplySumAggregates';
  /** Sum of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock: Scalars['BigFloat']['output'];
  /** Sum of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of startBlockHeight across the matching connection */
  startBlockHeight: Scalars['BigInt']['output'];
  /** Sum of startBlockTimestamp across the matching connection */
  startBlockTimestamp: Scalars['BigFloat']['output'];
  /** Sum of totalAnnualEmission across the matching connection */
  totalAnnualEmission: Scalars['BigFloat']['output'];
};

export type FlipSupplyVariancePopulationAggregates = {
  __typename?: 'FlipSupplyVariancePopulationAggregates';
  /** Population variance of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

export type FlipSupplyVarianceSampleAggregates = {
  __typename?: 'FlipSupplyVarianceSampleAggregates';
  /** Sample variance of authorityEmissionPerBlock across the matching connection */
  authorityEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of backupNodeEmissionPerBlock across the matching connection */
  backupNodeEmissionPerBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of startBlockHeight across the matching connection */
  startBlockHeight?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of startBlockTimestamp across the matching connection */
  startBlockTimestamp?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalAnnualEmission across the matching connection */
  totalAnnualEmission?: Maybe<Scalars['BigFloat']['output']>;
};

/** A filter to be used against Float fields. All fields are combined with a logical ‘and.’ */
export type FloatFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Float']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Float']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Float']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Float']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Float']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type FundingEvent = Node & {
  __typename?: 'FundingEvent';
  amount: Scalars['BigFloat']['output'];
  block: Scalars['String']['output'];
  blockTimestamp: Scalars['String']['output'];
  funder: Scalars['String']['output'];
  logIndex: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  txHash: Scalars['String']['output'];
  txId: Scalars['String']['output'];
  validatorIdHex: Scalars['String']['output'];
};

export type FundingEventAggregates = {
  __typename?: 'FundingEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<FundingEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<FundingEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<FundingEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<FundingEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<FundingEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<FundingEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<FundingEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<FundingEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<FundingEventVarianceSampleAggregates>;
};

export type FundingEventAverageAggregates = {
  __typename?: 'FundingEventAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `FundingEvent` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type FundingEventCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `funder` field. */
  funder?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `logIndex` field. */
  logIndex?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `txHash` field. */
  txHash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `txId` field. */
  txId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<Scalars['String']['input']>;
};

export type FundingEventDistinctCountAggregates = {
  __typename?: 'FundingEventDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockTimestamp across the matching connection */
  blockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of funder across the matching connection */
  funder?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txHash across the matching connection */
  txHash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txId across the matching connection */
  txId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorIdHex across the matching connection */
  validatorIdHex?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `FundingEvent` object types. All fields are combined with a logical ‘and.’ */
export type FundingEventFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<FundingEventFilter>>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<StringFilter>;
  /** Filter by the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<StringFilter>;
  /** Filter by the object’s `funder` field. */
  funder?: InputMaybe<StringFilter>;
  /** Filter by the object’s `logIndex` field. */
  logIndex?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<FundingEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<FundingEventFilter>>;
  /** Filter by the object’s `txHash` field. */
  txHash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `txId` field. */
  txId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<StringFilter>;
};

/** Grouping methods for `FundingEvent` for usage during aggregation. */
export type FundingEventGroupBy =
  | 'AMOUNT'
  | 'BLOCK'
  | 'BLOCK_TIMESTAMP'
  | 'FUNDER'
  | 'LOG_INDEX'
  | 'TX_HASH'
  | 'TX_ID'
  | 'VALIDATOR_ID_HEX';

export type FundingEventHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `FundingEvent` aggregates. */
export type FundingEventHavingInput = {
  AND?: InputMaybe<Array<FundingEventHavingInput>>;
  OR?: InputMaybe<Array<FundingEventHavingInput>>;
  average?: InputMaybe<FundingEventHavingAverageInput>;
  distinctCount?: InputMaybe<FundingEventHavingDistinctCountInput>;
  max?: InputMaybe<FundingEventHavingMaxInput>;
  min?: InputMaybe<FundingEventHavingMinInput>;
  stddevPopulation?: InputMaybe<FundingEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<FundingEventHavingStddevSampleInput>;
  sum?: InputMaybe<FundingEventHavingSumInput>;
  variancePopulation?: InputMaybe<FundingEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<FundingEventHavingVarianceSampleInput>;
};

export type FundingEventHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type FundingEventMaxAggregates = {
  __typename?: 'FundingEventMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type FundingEventMinAggregates = {
  __typename?: 'FundingEventMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type FundingEventStddevPopulationAggregates = {
  __typename?: 'FundingEventStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type FundingEventStddevSampleAggregates = {
  __typename?: 'FundingEventStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type FundingEventSumAggregates = {
  __typename?: 'FundingEventSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of logIndex across the matching connection */
  logIndex: Scalars['BigFloat']['output'];
};

export type FundingEventType =
  | 'FUNDED'
  | 'REDEEMED'
  | 'SLASHED';

/** A filter to be used against FundingEventType fields. All fields are combined with a logical ‘and.’ */
export type FundingEventTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<FundingEventType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<FundingEventType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<FundingEventType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<FundingEventType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<FundingEventType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<FundingEventType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<FundingEventType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<FundingEventType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<FundingEventType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<FundingEventType>>;
};

export type FundingEventVariancePopulationAggregates = {
  __typename?: 'FundingEventVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type FundingEventVarianceSampleAggregates = {
  __typename?: 'FundingEventVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `FundingEvent` values. */
export type FundingEventsConnection = {
  __typename?: 'FundingEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<FundingEventAggregates>;
  /** A list of edges which contains the `FundingEvent` and cursor to aid in pagination. */
  edges: Array<FundingEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<FundingEventAggregates>>;
  /** A list of `FundingEvent` objects. */
  nodes: Array<FundingEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `FundingEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `FundingEvent` values. */
export type FundingEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<FundingEventGroupBy>;
  having?: InputMaybe<FundingEventHavingInput>;
};

/** A `FundingEvent` edge in the connection. */
export type FundingEventsEdge = {
  __typename?: 'FundingEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `FundingEvent` at the end of the edge. */
  node: FundingEvent;
};

/** Methods to use when ordering `FundingEvent`. */
export type FundingEventsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BLOCK_TIMESTAMP_ASC'
  | 'BLOCK_TIMESTAMP_DESC'
  | 'FUNDER_ASC'
  | 'FUNDER_DESC'
  | 'LOG_INDEX_ASC'
  | 'LOG_INDEX_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TX_HASH_ASC'
  | 'TX_HASH_DESC'
  | 'TX_ID_ASC'
  | 'TX_ID_DESC'
  | 'VALIDATOR_ID_HEX_ASC'
  | 'VALIDATOR_ID_HEX_DESC';

export type HavingBigfloatFilter = {
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type HavingBigintFilter = {
  equalTo?: InputMaybe<Scalars['BigInt']['input']>;
  greaterThan?: InputMaybe<Scalars['BigInt']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  lessThan?: InputMaybe<Scalars['BigInt']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  notEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
};

export type HavingDatetimeFilter = {
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
};

export type HavingFloatFilter = {
  equalTo?: InputMaybe<Scalars['Float']['input']>;
  greaterThan?: InputMaybe<Scalars['Float']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  lessThan?: InputMaybe<Scalars['Float']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  notEqualTo?: InputMaybe<Scalars['Float']['input']>;
};

export type HavingIntFilter = {
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
};

export type HistogramData = {
  __typename?: 'HistogramData';
  time: Scalars['Int']['output'];
  value: Scalars['Float']['output'];
};

export type IgnoredDeposit = Node & {
  __typename?: 'IgnoredDeposit';
  amount: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `IgnoredDeposit`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['BigInt']['output'];
  /** Reads a single `LiquidityDepositChannel` that is related to this `IgnoredDeposit`. */
  liquidityDepositChannelByLiquidityDepositChannelId?: Maybe<LiquidityDepositChannel>;
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  reason: DepositIgnoredReason;
  /** Reads a single `SwapChannel` that is related to this `IgnoredDeposit`. */
  swapChannelBySwapDepositChannelId?: Maybe<SwapChannel>;
  swapDepositChannelId?: Maybe<Scalars['Int']['output']>;
};

export type IgnoredDepositAggregates = {
  __typename?: 'IgnoredDepositAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<IgnoredDepositAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<IgnoredDepositDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<IgnoredDepositMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<IgnoredDepositMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<IgnoredDepositStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<IgnoredDepositStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<IgnoredDepositSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<IgnoredDepositVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<IgnoredDepositVarianceSampleAggregates>;
};

export type IgnoredDepositAverageAggregates = {
  __typename?: 'IgnoredDepositAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `IgnoredDeposit` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type IgnoredDepositCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `reason` field. */
  reason?: InputMaybe<DepositIgnoredReason>;
  /** Checks for equality with the object’s `swapDepositChannelId` field. */
  swapDepositChannelId?: InputMaybe<Scalars['Int']['input']>;
};

export type IgnoredDepositDistinctCountAggregates = {
  __typename?: 'IgnoredDepositDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of reason across the matching connection */
  reason?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `IgnoredDeposit` object types. All fields are combined with a logical ‘and.’ */
export type IgnoredDepositFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<IgnoredDepositFilter>>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<IgnoredDepositFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<IgnoredDepositFilter>>;
  /** Filter by the object’s `reason` field. */
  reason?: InputMaybe<DepositIgnoredReasonFilter>;
  /** Filter by the object’s `swapDepositChannelId` field. */
  swapDepositChannelId?: InputMaybe<IntFilter>;
};

/** Grouping methods for `IgnoredDeposit` for usage during aggregation. */
export type IgnoredDepositGroupBy =
  | 'AMOUNT'
  | 'EVENT_ID'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID'
  | 'REASON'
  | 'SWAP_DEPOSIT_CHANNEL_ID';

export type IgnoredDepositHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `IgnoredDeposit` aggregates. */
export type IgnoredDepositHavingInput = {
  AND?: InputMaybe<Array<IgnoredDepositHavingInput>>;
  OR?: InputMaybe<Array<IgnoredDepositHavingInput>>;
  average?: InputMaybe<IgnoredDepositHavingAverageInput>;
  distinctCount?: InputMaybe<IgnoredDepositHavingDistinctCountInput>;
  max?: InputMaybe<IgnoredDepositHavingMaxInput>;
  min?: InputMaybe<IgnoredDepositHavingMinInput>;
  stddevPopulation?: InputMaybe<IgnoredDepositHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<IgnoredDepositHavingStddevSampleInput>;
  sum?: InputMaybe<IgnoredDepositHavingSumInput>;
  variancePopulation?: InputMaybe<IgnoredDepositHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<IgnoredDepositHavingVarianceSampleInput>;
};

export type IgnoredDepositHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  swapDepositChannelId?: InputMaybe<HavingIntFilter>;
};

export type IgnoredDepositMaxAggregates = {
  __typename?: 'IgnoredDepositMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['Int']['output']>;
};

export type IgnoredDepositMinAggregates = {
  __typename?: 'IgnoredDepositMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['Int']['output']>;
};

export type IgnoredDepositStddevPopulationAggregates = {
  __typename?: 'IgnoredDepositStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
};

export type IgnoredDepositStddevSampleAggregates = {
  __typename?: 'IgnoredDepositStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
};

export type IgnoredDepositSumAggregates = {
  __typename?: 'IgnoredDepositSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId: Scalars['BigInt']['output'];
  /** Sum of swapDepositChannelId across the matching connection */
  swapDepositChannelId: Scalars['BigInt']['output'];
};

export type IgnoredDepositVariancePopulationAggregates = {
  __typename?: 'IgnoredDepositVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
};

export type IgnoredDepositVarianceSampleAggregates = {
  __typename?: 'IgnoredDepositVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapDepositChannelId across the matching connection */
  swapDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `IgnoredDeposit` values. */
export type IgnoredDepositsConnection = {
  __typename?: 'IgnoredDepositsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<IgnoredDepositAggregates>;
  /** A list of edges which contains the `IgnoredDeposit` and cursor to aid in pagination. */
  edges: Array<IgnoredDepositsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<IgnoredDepositAggregates>>;
  /** A list of `IgnoredDeposit` objects. */
  nodes: Array<IgnoredDeposit>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `IgnoredDeposit` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `IgnoredDeposit` values. */
export type IgnoredDepositsConnectionGroupedAggregatesArgs = {
  groupBy: Array<IgnoredDepositGroupBy>;
  having?: InputMaybe<IgnoredDepositHavingInput>;
};

/** A `IgnoredDeposit` edge in the connection. */
export type IgnoredDepositsEdge = {
  __typename?: 'IgnoredDepositsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `IgnoredDeposit` at the end of the edge. */
  node: IgnoredDeposit;
};

/** Methods to use when ordering `IgnoredDeposit`. */
export type IgnoredDepositsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REASON_ASC'
  | 'REASON_DESC'
  | 'SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAP_DEPOSIT_CHANNEL_ID_DESC';

/** A filter to be used against Int fields. All fields are combined with a logical ‘and.’ */
export type IntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** A filter to be used against JSON fields. All fields are combined with a logical ‘and.’ */
export type JsonFilter = {
  /** Contained by the specified JSON. */
  containedBy?: InputMaybe<Scalars['JSON']['input']>;
  /** Contains the specified JSON. */
  contains?: InputMaybe<Scalars['JSON']['input']>;
  /** Contains all of the specified keys. */
  containsAllKeys?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains any of the specified keys. */
  containsAnyKeys?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains the specified key. */
  containsKey?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['JSON']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['JSON']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['JSON']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['JSON']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['JSON']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['JSON']['input']>>;
};

export type LineData = {
  __typename?: 'LineData';
  time: Scalars['Int']['output'];
  value?: Maybe<Scalars['Float']['output']>;
};

export type LiquidityBalanceEvent = {
  __typename?: 'LiquidityBalanceEvent';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  /** Reads a single `Block` that is related to this `LiquidityBalanceEvent`. */
  blockByBlockId?: Maybe<Block>;
  blockId: Scalars['Int']['output'];
  /** Reads a single `Broadcast` that is related to this `LiquidityBalanceEvent`. */
  broadcastByBroadcastId?: Maybe<Broadcast>;
  broadcastId?: Maybe<Scalars['Int']['output']>;
  chain: ChainflipChain;
  /** Reads a single `Event` that is related to this `LiquidityBalanceEvent`. */
  eventByEventId?: Maybe<Event>;
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads a single `LiquidityDepositChannel` that is related to this `LiquidityBalanceEvent`. */
  liquidityDepositChannelByLiquidityDepositChannelId?: Maybe<LiquidityDepositChannel>;
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Reads a single `LiquidityProvider` that is related to this `LiquidityBalanceEvent`. */
  liquidityProviderByLiquidityProviderId?: Maybe<LiquidityProvider>;
  liquidityProviderId: Scalars['Int']['output'];
  valueUsd: Scalars['BigFloat']['output'];
};

export type LiquidityBalanceEventAggregates = {
  __typename?: 'LiquidityBalanceEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityBalanceEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityBalanceEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityBalanceEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityBalanceEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityBalanceEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityBalanceEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityBalanceEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityBalanceEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityBalanceEventVarianceSampleAggregates>;
};

export type LiquidityBalanceEventAverageAggregates = {
  __typename?: 'LiquidityBalanceEventAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquidityBalanceEvent` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type LiquidityBalanceEventCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type LiquidityBalanceEventDistinctCountAggregates = {
  __typename?: 'LiquidityBalanceEventDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityBalanceEvent` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityBalanceEventFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityBalanceEventFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityBalanceEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityBalanceEventFilter>>;
  /** Filter by the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `LiquidityBalanceEvent` for usage during aggregation. */
export type LiquidityBalanceEventGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'BLOCK_ID'
  | 'BROADCAST_ID'
  | 'CHAIN'
  | 'EVENT_ID'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'VALUE_USD';

export type LiquidityBalanceEventHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `LiquidityBalanceEvent` aggregates. */
export type LiquidityBalanceEventHavingInput = {
  AND?: InputMaybe<Array<LiquidityBalanceEventHavingInput>>;
  OR?: InputMaybe<Array<LiquidityBalanceEventHavingInput>>;
  average?: InputMaybe<LiquidityBalanceEventHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityBalanceEventHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityBalanceEventHavingMaxInput>;
  min?: InputMaybe<LiquidityBalanceEventHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityBalanceEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityBalanceEventHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityBalanceEventHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityBalanceEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityBalanceEventHavingVarianceSampleInput>;
};

export type LiquidityBalanceEventHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityBalanceEventMaxAggregates = {
  __typename?: 'LiquidityBalanceEventMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityBalanceEventMinAggregates = {
  __typename?: 'LiquidityBalanceEventMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityBalanceEventStddevPopulationAggregates = {
  __typename?: 'LiquidityBalanceEventStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityBalanceEventStddevSampleAggregates = {
  __typename?: 'LiquidityBalanceEventStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityBalanceEventSumAggregates = {
  __typename?: 'LiquidityBalanceEventSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of broadcastId across the matching connection */
  broadcastId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of valueUsd across the matching connection */
  valueUsd: Scalars['BigFloat']['output'];
};

export type LiquidityBalanceEventVariancePopulationAggregates = {
  __typename?: 'LiquidityBalanceEventVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityBalanceEventVarianceSampleAggregates = {
  __typename?: 'LiquidityBalanceEventVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquidityBalanceEvent` values. */
export type LiquidityBalanceEventsConnection = {
  __typename?: 'LiquidityBalanceEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityBalanceEventAggregates>;
  /** A list of edges which contains the `LiquidityBalanceEvent` and cursor to aid in pagination. */
  edges: Array<LiquidityBalanceEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityBalanceEventAggregates>>;
  /** A list of `LiquidityBalanceEvent` objects. */
  nodes: Array<LiquidityBalanceEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityBalanceEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityBalanceEvent` values. */
export type LiquidityBalanceEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityBalanceEventGroupBy>;
  having?: InputMaybe<LiquidityBalanceEventHavingInput>;
};

/** A `LiquidityBalanceEvent` edge in the connection. */
export type LiquidityBalanceEventsEdge = {
  __typename?: 'LiquidityBalanceEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityBalanceEvent` at the end of the edge. */
  node: LiquidityBalanceEvent;
};

/** Methods to use when ordering `LiquidityBalanceEvent`. */
export type LiquidityBalanceEventsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'BROADCAST_ID_ASC'
  | 'BROADCAST_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'VALUE_USD_ASC'
  | 'VALUE_USD_DESC';

export type LiquidityDeposit = Node & {
  __typename?: 'LiquidityDeposit';
  asset: ChainflipAsset;
  /** Reads a single `Block` that is related to this `LiquidityDeposit`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  chain: ChainflipChain;
  depositAmount: Scalars['BigFloat']['output'];
  depositValueUsd: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `LiquidityDeposit`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  fee?: Maybe<Scalars['BigFloat']['output']>;
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['Int']['output'];
  /** Reads a single `LiquidityDepositChannel` that is related to this `LiquidityDeposit`. */
  liquidityDepositChannelByLiquidityDepositChannelId: LiquidityDepositChannel;
  liquidityDepositChannelId: Scalars['Int']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `LiquidityDeposit`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type LiquidityDepositAggregates = {
  __typename?: 'LiquidityDepositAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityDepositAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityDepositDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityDepositMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityDepositMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityDepositStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityDepositStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityDepositSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityDepositVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityDepositVarianceSampleAggregates>;
};

export type LiquidityDepositAverageAggregates = {
  __typename?: 'LiquidityDepositAverageAggregates';
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositChannel = Node & {
  __typename?: 'LiquidityDepositChannel';
  asset: ChainflipAsset;
  /** Reads a single `Block` that is related to this `LiquidityDepositChannel`. */
  blockByIssuedBlockId: Block;
  chain: ChainflipChain;
  channelId: Scalars['BigInt']['output'];
  depositAddress: Scalars['String']['output'];
  /** Reads a single `Event` that is related to this `LiquidityDepositChannel`. */
  eventByIssuedEventId: Event;
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `IgnoredDeposit`. */
  ignoredDepositsByLiquidityDepositChannelId: IgnoredDepositsConnection;
  isExpired: Scalars['Boolean']['output'];
  issuedBlockId: Scalars['Int']['output'];
  issuedEventId: Scalars['BigInt']['output'];
  /** Reads and enables pagination through a set of `LiquidityBalanceEvent`. */
  liquidityBalanceEventsByLiquidityDepositChannelId: LiquidityBalanceEventsConnection;
  /** Reads and enables pagination through a set of `LiquidityDeposit`. */
  liquidityDepositsByLiquidityDepositChannelId: LiquidityDepositsConnection;
  /** Reads a single `LiquidityProvider` that is related to this `LiquidityDepositChannel`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  sourceChainExpiryBlock: Scalars['BigInt']['output'];
};


export type LiquidityDepositChannelIgnoredDepositsByLiquidityDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<IgnoredDepositCondition>;
  filter?: InputMaybe<IgnoredDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IgnoredDepositsOrderBy>>;
};


export type LiquidityDepositChannelLiquidityBalanceEventsByLiquidityDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


export type LiquidityDepositChannelLiquidityDepositsByLiquidityDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositCondition>;
  filter?: InputMaybe<LiquidityDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositsOrderBy>>;
};

export type LiquidityDepositChannelAggregates = {
  __typename?: 'LiquidityDepositChannelAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityDepositChannelAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityDepositChannelDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityDepositChannelMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityDepositChannelMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityDepositChannelStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityDepositChannelStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityDepositChannelSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityDepositChannelVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityDepositChannelVarianceSampleAggregates>;
};

export type LiquidityDepositChannelAverageAggregates = {
  __typename?: 'LiquidityDepositChannelAverageAggregates';
  /** Mean average of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquidityDepositChannel` object types. All
 * fields are tested for equality and combined with a logical ‘and.’
 */
export type LiquidityDepositChannelCondition = {
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `channelId` field. */
  channelId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `depositAddress` field. */
  depositAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `isExpired` field. */
  isExpired?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `issuedEventId` field. */
  issuedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `sourceChainExpiryBlock` field. */
  sourceChainExpiryBlock?: InputMaybe<Scalars['BigInt']['input']>;
};

export type LiquidityDepositChannelDistinctCountAggregates = {
  __typename?: 'LiquidityDepositChannelDistinctCountAggregates';
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAddress across the matching connection */
  depositAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isExpired across the matching connection */
  isExpired?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityDepositChannel` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityDepositChannelFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityDepositChannelFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `channelId` field. */
  channelId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `depositAddress` field. */
  depositAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `isExpired` field. */
  isExpired?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `issuedEventId` field. */
  issuedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityDepositChannelFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityDepositChannelFilter>>;
  /** Filter by the object’s `sourceChainExpiryBlock` field. */
  sourceChainExpiryBlock?: InputMaybe<BigIntFilter>;
};

/** Grouping methods for `LiquidityDepositChannel` for usage during aggregation. */
export type LiquidityDepositChannelGroupBy =
  | 'ASSET'
  | 'CHAIN'
  | 'CHANNEL_ID'
  | 'DEPOSIT_ADDRESS'
  | 'ISSUED_BLOCK_ID'
  | 'ISSUED_EVENT_ID'
  | 'IS_EXPIRED'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK';

export type LiquidityDepositChannelHavingAverageInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingDistinctCountInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `LiquidityDepositChannel` aggregates. */
export type LiquidityDepositChannelHavingInput = {
  AND?: InputMaybe<Array<LiquidityDepositChannelHavingInput>>;
  OR?: InputMaybe<Array<LiquidityDepositChannelHavingInput>>;
  average?: InputMaybe<LiquidityDepositChannelHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityDepositChannelHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityDepositChannelHavingMaxInput>;
  min?: InputMaybe<LiquidityDepositChannelHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityDepositChannelHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityDepositChannelHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityDepositChannelHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityDepositChannelHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityDepositChannelHavingVarianceSampleInput>;
};

export type LiquidityDepositChannelHavingMaxInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingMinInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingStddevPopulationInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingStddevSampleInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingSumInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingVariancePopulationInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelHavingVarianceSampleInput = {
  channelId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type LiquidityDepositChannelMaxAggregates = {
  __typename?: 'LiquidityDepositChannelMaxAggregates';
  /** Maximum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

export type LiquidityDepositChannelMinAggregates = {
  __typename?: 'LiquidityDepositChannelMinAggregates';
  /** Minimum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

export type LiquidityDepositChannelStddevPopulationAggregates = {
  __typename?: 'LiquidityDepositChannelStddevPopulationAggregates';
  /** Population standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositChannelStddevSampleAggregates = {
  __typename?: 'LiquidityDepositChannelStddevSampleAggregates';
  /** Sample standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositChannelSumAggregates = {
  __typename?: 'LiquidityDepositChannelSumAggregates';
  /** Sum of channelId across the matching connection */
  channelId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of issuedBlockId across the matching connection */
  issuedBlockId: Scalars['BigInt']['output'];
  /** Sum of issuedEventId across the matching connection */
  issuedEventId: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock: Scalars['BigFloat']['output'];
};

export type LiquidityDepositChannelVariancePopulationAggregates = {
  __typename?: 'LiquidityDepositChannelVariancePopulationAggregates';
  /** Population variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositChannelVarianceSampleAggregates = {
  __typename?: 'LiquidityDepositChannelVarianceSampleAggregates';
  /** Sample variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquidityDepositChannel` values. */
export type LiquidityDepositChannelsConnection = {
  __typename?: 'LiquidityDepositChannelsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityDepositChannelAggregates>;
  /** A list of edges which contains the `LiquidityDepositChannel` and cursor to aid in pagination. */
  edges: Array<LiquidityDepositChannelsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityDepositChannelAggregates>>;
  /** A list of `LiquidityDepositChannel` objects. */
  nodes: Array<LiquidityDepositChannel>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityDepositChannel` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityDepositChannel` values. */
export type LiquidityDepositChannelsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityDepositChannelGroupBy>;
  having?: InputMaybe<LiquidityDepositChannelHavingInput>;
};

/** A `LiquidityDepositChannel` edge in the connection. */
export type LiquidityDepositChannelsEdge = {
  __typename?: 'LiquidityDepositChannelsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityDepositChannel` at the end of the edge. */
  node: LiquidityDepositChannel;
};

/** Methods to use when ordering `LiquidityDepositChannel`. */
export type LiquidityDepositChannelsOrderBy =
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'CHANNEL_ID_ASC'
  | 'CHANNEL_ID_DESC'
  | 'DEPOSIT_ADDRESS_ASC'
  | 'DEPOSIT_ADDRESS_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'ISSUED_BLOCK_ID_ASC'
  | 'ISSUED_BLOCK_ID_DESC'
  | 'ISSUED_EVENT_ID_ASC'
  | 'ISSUED_EVENT_ID_DESC'
  | 'IS_EXPIRED_ASC'
  | 'IS_EXPIRED_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK_DESC';

/**
 * A condition to be used against `LiquidityDeposit` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type LiquidityDepositCondition = {
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `depositValueUsd` field. */
  depositValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
};

export type LiquidityDepositDistinctCountAggregates = {
  __typename?: 'LiquidityDepositDistinctCountAggregates';
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityDeposit` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityDepositFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityDepositFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `depositValueUsd` field. */
  depositValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityDepositChannelId` field. */
  liquidityDepositChannelId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityDepositFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityDepositFilter>>;
};

/** Grouping methods for `LiquidityDeposit` for usage during aggregation. */
export type LiquidityDepositGroupBy =
  | 'ASSET'
  | 'BLOCK_ID'
  | 'CHAIN'
  | 'DEPOSIT_AMOUNT'
  | 'DEPOSIT_VALUE_USD'
  | 'EVENT_ID'
  | 'FEE'
  | 'FEE_USD'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID'
  | 'LIQUIDITY_PROVIDER_ID';

export type LiquidityDepositHavingAverageInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingDistinctCountInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `LiquidityDeposit` aggregates. */
export type LiquidityDepositHavingInput = {
  AND?: InputMaybe<Array<LiquidityDepositHavingInput>>;
  OR?: InputMaybe<Array<LiquidityDepositHavingInput>>;
  average?: InputMaybe<LiquidityDepositHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityDepositHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityDepositHavingMaxInput>;
  min?: InputMaybe<LiquidityDepositHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityDepositHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityDepositHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityDepositHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityDepositHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityDepositHavingVarianceSampleInput>;
};

export type LiquidityDepositHavingMaxInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingMinInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingStddevPopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingStddevSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingSumInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingVariancePopulationInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositHavingVarianceSampleInput = {
  blockId?: InputMaybe<HavingIntFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityDepositChannelId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityDepositMaxAggregates = {
  __typename?: 'LiquidityDepositMaxAggregates';
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityDepositMinAggregates = {
  __typename?: 'LiquidityDepositMinAggregates';
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityDepositStddevPopulationAggregates = {
  __typename?: 'LiquidityDepositStddevPopulationAggregates';
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositStddevSampleAggregates = {
  __typename?: 'LiquidityDepositStddevSampleAggregates';
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositSumAggregates = {
  __typename?: 'LiquidityDepositSumAggregates';
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of depositAmount across the matching connection */
  depositAmount: Scalars['BigFloat']['output'];
  /** Sum of depositValueUsd across the matching connection */
  depositValueUsd: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
};

export type LiquidityDepositVariancePopulationAggregates = {
  __typename?: 'LiquidityDepositVariancePopulationAggregates';
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityDepositVarianceSampleAggregates = {
  __typename?: 'LiquidityDepositVarianceSampleAggregates';
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityDepositChannelId across the matching connection */
  liquidityDepositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquidityDeposit` values. */
export type LiquidityDepositsConnection = {
  __typename?: 'LiquidityDepositsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityDepositAggregates>;
  /** A list of edges which contains the `LiquidityDeposit` and cursor to aid in pagination. */
  edges: Array<LiquidityDepositsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityDepositAggregates>>;
  /** A list of `LiquidityDeposit` objects. */
  nodes: Array<LiquidityDeposit>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityDeposit` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityDeposit` values. */
export type LiquidityDepositsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityDepositGroupBy>;
  having?: InputMaybe<LiquidityDepositHavingInput>;
};

/** A `LiquidityDeposit` edge in the connection. */
export type LiquidityDepositsEdge = {
  __typename?: 'LiquidityDepositsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityDeposit` at the end of the edge. */
  node: LiquidityDeposit;
};

/** Methods to use when ordering `LiquidityDeposit`. */
export type LiquidityDepositsOrderBy =
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'DEPOSIT_AMOUNT_ASC'
  | 'DEPOSIT_AMOUNT_DESC'
  | 'DEPOSIT_VALUE_USD_ASC'
  | 'DEPOSIT_VALUE_USD_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type LiquidityProvider = Node & {
  __typename?: 'LiquidityProvider';
  /** Reads a single `Account` that is related to this `LiquidityProvider`. */
  accountByAccountId: Account;
  accountId: Scalars['Int']['output'];
  bitcoinRefundAddress?: Maybe<Scalars['String']['output']>;
  /** Reads and enables pagination through a set of `CollectedFee`. */
  collectedFeesByLiquidityProviderId: CollectedFeesConnection;
  ethereumRefundAddress?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `LiquidityBalanceEvent`. */
  liquidityBalanceEventsByLiquidityProviderId: LiquidityBalanceEventsConnection;
  /** Reads and enables pagination through a set of `LiquidityDepositChannel`. */
  liquidityDepositChannelsByLiquidityProviderId: LiquidityDepositChannelsConnection;
  /** Reads and enables pagination through a set of `LiquidityDeposit`. */
  liquidityDepositsByLiquidityProviderId: LiquidityDepositsConnection;
  /** Reads and enables pagination through a set of `LiquidityWithdrawal`. */
  liquidityWithdrawalsByLiquidityProviderId: LiquidityWithdrawalsConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  polkadotRefundAddress?: Maybe<Scalars['String']['output']>;
  /** Reads and enables pagination through a set of `PoolOrderEvent`. */
  poolOrderEventsByLiquidityProviderId: PoolOrderEventsConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByLiquidityProviderId: PoolOrdersConnection;
};


export type LiquidityProviderCollectedFeesByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<CollectedFeeCondition>;
  filter?: InputMaybe<CollectedFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CollectedFeesOrderBy>>;
};


export type LiquidityProviderLiquidityBalanceEventsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


export type LiquidityProviderLiquidityDepositChannelsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositChannelCondition>;
  filter?: InputMaybe<LiquidityDepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositChannelsOrderBy>>;
};


export type LiquidityProviderLiquidityDepositsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositCondition>;
  filter?: InputMaybe<LiquidityDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositsOrderBy>>;
};


export type LiquidityProviderLiquidityWithdrawalsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityWithdrawalCondition>;
  filter?: InputMaybe<LiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityWithdrawalsOrderBy>>;
};


export type LiquidityProviderPoolOrderEventsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderEventCondition>;
  filter?: InputMaybe<PoolOrderEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrderEventsOrderBy>>;
};


export type LiquidityProviderPoolOrdersByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};

export type LiquidityProviderAggregates = {
  __typename?: 'LiquidityProviderAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityProviderAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityProviderDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityProviderMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityProviderMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityProviderStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityProviderStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityProviderSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityProviderVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityProviderVarianceSampleAggregates>;
};

export type LiquidityProviderAverageAggregates = {
  __typename?: 'LiquidityProviderAverageAggregates';
  /** Mean average of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquidityProvider` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type LiquidityProviderCondition = {
  /** Checks for equality with the object’s `accountId` field. */
  accountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `bitcoinRefundAddress` field. */
  bitcoinRefundAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `ethereumRefundAddress` field. */
  ethereumRefundAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `polkadotRefundAddress` field. */
  polkadotRefundAddress?: InputMaybe<Scalars['String']['input']>;
};

export type LiquidityProviderDistinctCountAggregates = {
  __typename?: 'LiquidityProviderDistinctCountAggregates';
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of bitcoinRefundAddress across the matching connection */
  bitcoinRefundAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ethereumRefundAddress across the matching connection */
  ethereumRefundAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of polkadotRefundAddress across the matching connection */
  polkadotRefundAddress?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityProvider` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityProviderFilter = {
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<IntFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityProviderFilter>>;
  /** Filter by the object’s `bitcoinRefundAddress` field. */
  bitcoinRefundAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `ethereumRefundAddress` field. */
  ethereumRefundAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityProviderFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityProviderFilter>>;
  /** Filter by the object’s `polkadotRefundAddress` field. */
  polkadotRefundAddress?: InputMaybe<StringFilter>;
};

/** Grouping methods for `LiquidityProvider` for usage during aggregation. */
export type LiquidityProviderGroupBy =
  | 'BITCOIN_REFUND_ADDRESS'
  | 'ETHEREUM_REFUND_ADDRESS'
  | 'POLKADOT_REFUND_ADDRESS';

export type LiquidityProviderHavingAverageInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingDistinctCountInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `LiquidityProvider` aggregates. */
export type LiquidityProviderHavingInput = {
  AND?: InputMaybe<Array<LiquidityProviderHavingInput>>;
  OR?: InputMaybe<Array<LiquidityProviderHavingInput>>;
  average?: InputMaybe<LiquidityProviderHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityProviderHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityProviderHavingMaxInput>;
  min?: InputMaybe<LiquidityProviderHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityProviderHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityProviderHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityProviderHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityProviderHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityProviderHavingVarianceSampleInput>;
};

export type LiquidityProviderHavingMaxInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingMinInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingStddevPopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingStddevSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingSumInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingVariancePopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderHavingVarianceSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderMaxAggregates = {
  __typename?: 'LiquidityProviderMaxAggregates';
  /** Maximum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityProviderMinAggregates = {
  __typename?: 'LiquidityProviderMinAggregates';
  /** Minimum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityProviderStddevPopulationAggregates = {
  __typename?: 'LiquidityProviderStddevPopulationAggregates';
  /** Population standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderStddevSampleAggregates = {
  __typename?: 'LiquidityProviderStddevSampleAggregates';
  /** Sample standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderSumAggregates = {
  __typename?: 'LiquidityProviderSumAggregates';
  /** Sum of accountId across the matching connection */
  accountId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type LiquidityProviderVariancePopulationAggregates = {
  __typename?: 'LiquidityProviderVariancePopulationAggregates';
  /** Population variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderVarianceSampleAggregates = {
  __typename?: 'LiquidityProviderVarianceSampleAggregates';
  /** Sample variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquidityProvider` values. */
export type LiquidityProvidersConnection = {
  __typename?: 'LiquidityProvidersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityProviderAggregates>;
  /** A list of edges which contains the `LiquidityProvider` and cursor to aid in pagination. */
  edges: Array<LiquidityProvidersEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityProviderAggregates>>;
  /** A list of `LiquidityProvider` objects. */
  nodes: Array<LiquidityProvider>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityProvider` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityProvider` values. */
export type LiquidityProvidersConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityProviderGroupBy>;
  having?: InputMaybe<LiquidityProviderHavingInput>;
};

/** A `LiquidityProvider` edge in the connection. */
export type LiquidityProvidersEdge = {
  __typename?: 'LiquidityProvidersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityProvider` at the end of the edge. */
  node: LiquidityProvider;
};

/** Methods to use when ordering `LiquidityProvider`. */
export type LiquidityProvidersOrderBy =
  | 'ACCOUNT_ID_ASC'
  | 'ACCOUNT_ID_DESC'
  | 'BITCOIN_REFUND_ADDRESS_ASC'
  | 'BITCOIN_REFUND_ADDRESS_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'COLLECTED_FEES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'ETHEREUM_REFUND_ADDRESS_ASC'
  | 'ETHEREUM_REFUND_ADDRESS_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_BALANCE_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSITS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPOSIT_ADDRESS_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_EVENT_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_IS_EXPIRED_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_IS_EXPIRED_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'LIQUIDITY_DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_WITHDRAWAL_ADDRESS_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EGRESS_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EGRESS_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_ASC'
  | 'LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_WITHDRAWAL_ADDRESS_DESC'
  | 'NATURAL'
  | 'POLKADOT_REFUND_ADDRESS_ASC'
  | 'POLKADOT_REFUND_ADDRESS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_MAXIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_MAXIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_MINIMUM_RATE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_MINIMUM_RATE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_VALUE_USD_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_VALUE_USD_DESC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'POOL_ORDER_EVENTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type LiquidityWithdrawal = Node & {
  __typename?: 'LiquidityWithdrawal';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  /** Reads a single `Block` that is related to this `LiquidityWithdrawal`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  /** Reads a single `Broadcast` that is related to this `LiquidityWithdrawal`. */
  broadcastByBroadcastId?: Maybe<Broadcast>;
  broadcastId?: Maybe<Scalars['Int']['output']>;
  chain: ChainflipChain;
  egressId: Scalars['BigInt']['output'];
  /** Reads a single `Event` that is related to this `LiquidityWithdrawal`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  fee: Scalars['BigFloat']['output'];
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['Int']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `LiquidityWithdrawal`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  valueUsd: Scalars['BigFloat']['output'];
  withdrawalAddress: Scalars['String']['output'];
};

export type LiquidityWithdrawalAggregates = {
  __typename?: 'LiquidityWithdrawalAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityWithdrawalAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityWithdrawalDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityWithdrawalMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityWithdrawalMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityWithdrawalStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityWithdrawalStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityWithdrawalSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityWithdrawalVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityWithdrawalVarianceSampleAggregates>;
};

export type LiquidityWithdrawalAverageAggregates = {
  __typename?: 'LiquidityWithdrawalAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquidityWithdrawal` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type LiquidityWithdrawalCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `egressId` field. */
  egressId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `withdrawalAddress` field. */
  withdrawalAddress?: InputMaybe<Scalars['String']['input']>;
};

export type LiquidityWithdrawalDistinctCountAggregates = {
  __typename?: 'LiquidityWithdrawalDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of withdrawalAddress across the matching connection */
  withdrawalAddress?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityWithdrawalFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityWithdrawalFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `egressId` field. */
  egressId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityWithdrawalFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityWithdrawalFilter>>;
  /** Filter by the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `withdrawalAddress` field. */
  withdrawalAddress?: InputMaybe<StringFilter>;
};

/** Grouping methods for `LiquidityWithdrawal` for usage during aggregation. */
export type LiquidityWithdrawalGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'BLOCK_ID'
  | 'BROADCAST_ID'
  | 'CHAIN'
  | 'EGRESS_ID'
  | 'EVENT_ID'
  | 'FEE'
  | 'FEE_USD'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'VALUE_USD'
  | 'WITHDRAWAL_ADDRESS';

export type LiquidityWithdrawalHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `LiquidityWithdrawal` aggregates. */
export type LiquidityWithdrawalHavingInput = {
  AND?: InputMaybe<Array<LiquidityWithdrawalHavingInput>>;
  OR?: InputMaybe<Array<LiquidityWithdrawalHavingInput>>;
  average?: InputMaybe<LiquidityWithdrawalHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityWithdrawalHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityWithdrawalHavingMaxInput>;
  min?: InputMaybe<LiquidityWithdrawalHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityWithdrawalHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityWithdrawalHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityWithdrawalHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityWithdrawalHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityWithdrawalHavingVarianceSampleInput>;
};

export type LiquidityWithdrawalHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  broadcastId?: InputMaybe<HavingIntFilter>;
  egressId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquidityWithdrawalMaxAggregates = {
  __typename?: 'LiquidityWithdrawalMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityWithdrawalMinAggregates = {
  __typename?: 'LiquidityWithdrawalMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityWithdrawalStddevPopulationAggregates = {
  __typename?: 'LiquidityWithdrawalStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityWithdrawalStddevSampleAggregates = {
  __typename?: 'LiquidityWithdrawalStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityWithdrawalSumAggregates = {
  __typename?: 'LiquidityWithdrawalSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of broadcastId across the matching connection */
  broadcastId: Scalars['BigInt']['output'];
  /** Sum of egressId across the matching connection */
  egressId: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of valueUsd across the matching connection */
  valueUsd: Scalars['BigFloat']['output'];
};

export type LiquidityWithdrawalVariancePopulationAggregates = {
  __typename?: 'LiquidityWithdrawalVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityWithdrawalVarianceSampleAggregates = {
  __typename?: 'LiquidityWithdrawalVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressId across the matching connection */
  egressId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquidityWithdrawal` values. */
export type LiquidityWithdrawalsConnection = {
  __typename?: 'LiquidityWithdrawalsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityWithdrawalAggregates>;
  /** A list of edges which contains the `LiquidityWithdrawal` and cursor to aid in pagination. */
  edges: Array<LiquidityWithdrawalsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityWithdrawalAggregates>>;
  /** A list of `LiquidityWithdrawal` objects. */
  nodes: Array<LiquidityWithdrawal>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityWithdrawal` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityWithdrawal` values. */
export type LiquidityWithdrawalsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityWithdrawalGroupBy>;
  having?: InputMaybe<LiquidityWithdrawalHavingInput>;
};

/** A `LiquidityWithdrawal` edge in the connection. */
export type LiquidityWithdrawalsEdge = {
  __typename?: 'LiquidityWithdrawalsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityWithdrawal` at the end of the edge. */
  node: LiquidityWithdrawal;
};

/** Methods to use when ordering `LiquidityWithdrawal`. */
export type LiquidityWithdrawalsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'BROADCAST_ID_ASC'
  | 'BROADCAST_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'EGRESS_ID_ASC'
  | 'EGRESS_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'VALUE_USD_ASC'
  | 'VALUE_USD_DESC'
  | 'WITHDRAWAL_ADDRESS_ASC'
  | 'WITHDRAWAL_ADDRESS_DESC';

export type LpAccount = Node & {
  __typename?: 'LpAccount';
  alias?: Maybe<Scalars['String']['output']>;
  /** Reads and enables pagination through a set of `DepositBalance`. */
  depositBalancesByLpIdSs58: DepositBalancesConnection;
  idSs58: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  openOrders: Scalars['JSON']['output'];
};


export type LpAccountDepositBalancesByLpIdSs58Args = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositBalanceCondition>;
  filter?: InputMaybe<DepositBalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositBalancesOrderBy>>;
};

export type LpAccountAggregates = {
  __typename?: 'LpAccountAggregates';
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LpAccountDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
};

/**
 * A condition to be used against `LpAccount` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type LpAccountCondition = {
  /** Checks for equality with the object’s `alias` field. */
  alias?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `idSs58` field. */
  idSs58?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `openOrders` field. */
  openOrders?: InputMaybe<Scalars['JSON']['input']>;
};

export type LpAccountDistinctCountAggregates = {
  __typename?: 'LpAccountDistinctCountAggregates';
  /** Distinct count of alias across the matching connection */
  alias?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idSs58 across the matching connection */
  idSs58?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of openOrders across the matching connection */
  openOrders?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LpAccount` object types. All fields are combined with a logical ‘and.’ */
export type LpAccountFilter = {
  /** Filter by the object’s `alias` field. */
  alias?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LpAccountFilter>>;
  /** Filter by the object’s `idSs58` field. */
  idSs58?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LpAccountFilter>;
  /** Filter by the object’s `openOrders` field. */
  openOrders?: InputMaybe<JsonFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LpAccountFilter>>;
};

/** Grouping methods for `LpAccount` for usage during aggregation. */
export type LpAccountGroupBy =
  | 'ALIAS'
  | 'OPEN_ORDERS';

/** Conditions for `LpAccount` aggregates. */
export type LpAccountHavingInput = {
  AND?: InputMaybe<Array<LpAccountHavingInput>>;
  OR?: InputMaybe<Array<LpAccountHavingInput>>;
};

/** A connection to a list of `LpAccount` values. */
export type LpAccountsConnection = {
  __typename?: 'LpAccountsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LpAccountAggregates>;
  /** A list of edges which contains the `LpAccount` and cursor to aid in pagination. */
  edges: Array<LpAccountsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LpAccountAggregates>>;
  /** A list of `LpAccount` objects. */
  nodes: Array<LpAccount>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LpAccount` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LpAccount` values. */
export type LpAccountsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LpAccountGroupBy>;
  having?: InputMaybe<LpAccountHavingInput>;
};

/** A `LpAccount` edge in the connection. */
export type LpAccountsEdge = {
  __typename?: 'LpAccountsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LpAccount` at the end of the edge. */
  node: LpAccount;
};

/** Methods to use when ordering `LpAccount`. */
export type LpAccountsOrderBy =
  | 'ALIAS_ASC'
  | 'ALIAS_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_AVERAGE_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_COUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_COUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_DISTINCT_COUNT_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MAX_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_MIN_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_POPULATION_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_STDDEV_SAMPLE_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_SUM_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_POPULATION_LP_ID_SS58_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_ASSET_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_ASSET_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_LP_ID_SS58_ASC'
  | 'DEPOSIT_BALANCES_BY_LP_ID_SS58_VARIANCE_SAMPLE_LP_ID_SS58_DESC'
  | 'ID_SS58_ASC'
  | 'ID_SS58_DESC'
  | 'NATURAL'
  | 'OPEN_ORDERS_ASC'
  | 'OPEN_ORDERS_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type MarketData = {
  __typename?: 'MarketData';
  candlesticks: Array<CandlestickResult>;
  globalVolume?: Maybe<Scalars['Float']['output']>;
  prices: Array<LineData>;
  volumes: Array<VolumeResult>;
};

/** A connection to a list of `Metadatum` values. */
export type MetadataConnection = {
  __typename?: 'MetadataConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<MetadatumAggregates>;
  /** A list of edges which contains the `Metadatum` and cursor to aid in pagination. */
  edges: Array<MetadataEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<MetadatumAggregates>>;
  /** A list of `Metadatum` objects. */
  nodes: Array<Metadatum>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Metadatum` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Metadatum` values. */
export type MetadataConnectionGroupedAggregatesArgs = {
  groupBy: Array<MetadataGroupBy>;
  having?: InputMaybe<MetadataHavingInput>;
};

/** A `Metadatum` edge in the connection. */
export type MetadataEdge = {
  __typename?: 'MetadataEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Metadatum` at the end of the edge. */
  node: Metadatum;
};

/** Grouping methods for `Metadatum` for usage during aggregation. */
export type MetadataGroupBy =
  | 'CHAINSPEC'
  | 'LABEL'
  | 'NAME';

export type MetadataHavingAverageInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingDistinctCountInput = {
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Metadatum` aggregates. */
export type MetadataHavingInput = {
  AND?: InputMaybe<Array<MetadataHavingInput>>;
  OR?: InputMaybe<Array<MetadataHavingInput>>;
  average?: InputMaybe<MetadataHavingAverageInput>;
  distinctCount?: InputMaybe<MetadataHavingDistinctCountInput>;
  max?: InputMaybe<MetadataHavingMaxInput>;
  min?: InputMaybe<MetadataHavingMinInput>;
  stddevPopulation?: InputMaybe<MetadataHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<MetadataHavingStddevSampleInput>;
  sum?: InputMaybe<MetadataHavingSumInput>;
  variancePopulation?: InputMaybe<MetadataHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<MetadataHavingVarianceSampleInput>;
};

export type MetadataHavingMaxInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingMinInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingStddevPopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingStddevSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingSumInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingVariancePopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type MetadataHavingVarianceSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `Metadatum`. */
export type MetadataOrderBy =
  | 'CHAINSPEC_ASC'
  | 'CHAINSPEC_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_AVERAGE_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_COUNT_ASC'
  | 'EVENTS_BY_METADATA_ID_COUNT_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_MAX_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MAX_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_MIN_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_MIN_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_SUM_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_SUM_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EVENTS_BY_METADATA_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_AVERAGE_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_COUNT_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_COUNT_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_DISTINCT_COUNT_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MAX_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_MIN_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_STDDEV_SAMPLE_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_SUM_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_POPULATION_VERSION_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ARGS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ARGS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ERROR_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ERROR_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_HASH_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_HASH_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_INDEX_IN_BLOCK_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_METADATA_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_METADATA_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SIGNATURE_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SIGNATURE_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SUBMITTER_ID_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SUBMITTER_ID_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SUCCESS_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_SUCCESS_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_TIP_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_TIP_DESC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_VERSION_ASC'
  | 'EXTRINSICS_BY_METADATA_ID_VARIANCE_SAMPLE_VERSION_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LABEL_ASC'
  | 'LABEL_DESC'
  | 'NAME_ASC'
  | 'NAME_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type Metadatum = Node & {
  __typename?: 'Metadatum';
  chainspec: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Event`. */
  eventsByMetadataId: EventsConnection;
  /** Reads and enables pagination through a set of `Extrinsic`. */
  extrinsicsByMetadataId: ExtrinsicsConnection;
  id: Scalars['Int']['output'];
  label: Scalars['String']['output'];
  name: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};


export type MetadatumEventsByMetadataIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EventCondition>;
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventsOrderBy>>;
};


export type MetadatumExtrinsicsByMetadataIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ExtrinsicCondition>;
  filter?: InputMaybe<ExtrinsicFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;
};

export type MetadatumAggregates = {
  __typename?: 'MetadatumAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<MetadatumAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<MetadatumDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<MetadatumMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<MetadatumMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<MetadatumStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<MetadatumStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<MetadatumSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<MetadatumVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<MetadatumVarianceSampleAggregates>;
};

export type MetadatumAverageAggregates = {
  __typename?: 'MetadatumAverageAggregates';
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `Metadatum` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type MetadatumCondition = {
  /** Checks for equality with the object’s `chainspec` field. */
  chainspec?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `label` field. */
  label?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `name` field. */
  name?: InputMaybe<Scalars['String']['input']>;
};

export type MetadatumDistinctCountAggregates = {
  __typename?: 'MetadatumDistinctCountAggregates';
  /** Distinct count of chainspec across the matching connection */
  chainspec?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of label across the matching connection */
  label?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of name across the matching connection */
  name?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Metadatum` object types. All fields are combined with a logical ‘and.’ */
export type MetadatumFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<MetadatumFilter>>;
  /** Filter by the object’s `chainspec` field. */
  chainspec?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `label` field. */
  label?: InputMaybe<StringFilter>;
  /** Filter by the object’s `name` field. */
  name?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<MetadatumFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<MetadatumFilter>>;
};

export type MetadatumMaxAggregates = {
  __typename?: 'MetadatumMaxAggregates';
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type MetadatumMinAggregates = {
  __typename?: 'MetadatumMinAggregates';
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type MetadatumStddevPopulationAggregates = {
  __typename?: 'MetadatumStddevPopulationAggregates';
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type MetadatumStddevSampleAggregates = {
  __typename?: 'MetadatumStddevSampleAggregates';
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type MetadatumSumAggregates = {
  __typename?: 'MetadatumSumAggregates';
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type MetadatumVariancePopulationAggregates = {
  __typename?: 'MetadatumVariancePopulationAggregates';
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type MetadatumVarianceSampleAggregates = {
  __typename?: 'MetadatumVarianceSampleAggregates';
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** An object with a globally unique `ID`. */
export type Node = {
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

/** A connection to a list of `Penalty` values. */
export type PenaltiesConnection = {
  __typename?: 'PenaltiesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PenaltyAggregates>;
  /** A list of edges which contains the `Penalty` and cursor to aid in pagination. */
  edges: Array<PenaltiesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PenaltyAggregates>>;
  /** A list of `Penalty` objects. */
  nodes: Array<Penalty>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Penalty` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Penalty` values. */
export type PenaltiesConnectionGroupedAggregatesArgs = {
  groupBy: Array<PenaltyGroupBy>;
  having?: InputMaybe<PenaltyHavingInput>;
};

/** A `Penalty` edge in the connection. */
export type PenaltiesEdge = {
  __typename?: 'PenaltiesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Penalty` at the end of the edge. */
  node: Penalty;
};

/** Methods to use when ordering `Penalty`. */
export type PenaltiesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'BLOCK_ID_ASC'
  | 'BLOCK_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REASON_ASC'
  | 'REASON_DESC'
  | 'VALIDATOR_ID_ASC'
  | 'VALIDATOR_ID_DESC';

export type Penalty = Node & {
  __typename?: 'Penalty';
  amount: Scalars['Int']['output'];
  /** Reads a single `Block` that is related to this `Penalty`. */
  blockByBlockId: Block;
  blockId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `Penalty`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  reason: Scalars['String']['output'];
  /** Reads a single `Validator` that is related to this `Penalty`. */
  validatorByValidatorId: Validator;
  validatorId: Scalars['Int']['output'];
};

export type PenaltyAggregates = {
  __typename?: 'PenaltyAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PenaltyAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PenaltyDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PenaltyMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PenaltyMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PenaltyStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PenaltyStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PenaltySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PenaltyVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PenaltyVarianceSampleAggregates>;
};

export type PenaltyAverageAggregates = {
  __typename?: 'PenaltyAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Penalty` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type PenaltyCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `blockId` field. */
  blockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `reason` field. */
  reason?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `validatorId` field. */
  validatorId?: InputMaybe<Scalars['Int']['input']>;
};

export type PenaltyDistinctCountAggregates = {
  __typename?: 'PenaltyDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of reason across the matching connection */
  reason?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Penalty` object types. All fields are combined with a logical ‘and.’ */
export type PenaltyFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<IntFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PenaltyFilter>>;
  /** Filter by the object’s `blockId` field. */
  blockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PenaltyFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PenaltyFilter>>;
  /** Filter by the object’s `reason` field. */
  reason?: InputMaybe<StringFilter>;
  /** Filter by the object’s `validatorId` field. */
  validatorId?: InputMaybe<IntFilter>;
};

/** Grouping methods for `Penalty` for usage during aggregation. */
export type PenaltyGroupBy =
  | 'AMOUNT'
  | 'BLOCK_ID'
  | 'EVENT_ID'
  | 'REASON'
  | 'VALIDATOR_ID';

export type PenaltyHavingAverageInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingDistinctCountInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Penalty` aggregates. */
export type PenaltyHavingInput = {
  AND?: InputMaybe<Array<PenaltyHavingInput>>;
  OR?: InputMaybe<Array<PenaltyHavingInput>>;
  average?: InputMaybe<PenaltyHavingAverageInput>;
  distinctCount?: InputMaybe<PenaltyHavingDistinctCountInput>;
  max?: InputMaybe<PenaltyHavingMaxInput>;
  min?: InputMaybe<PenaltyHavingMinInput>;
  stddevPopulation?: InputMaybe<PenaltyHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PenaltyHavingStddevSampleInput>;
  sum?: InputMaybe<PenaltyHavingSumInput>;
  variancePopulation?: InputMaybe<PenaltyHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PenaltyHavingVarianceSampleInput>;
};

export type PenaltyHavingMaxInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingMinInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingStddevSampleInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingSumInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingIntFilter>;
  blockId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  validatorId?: InputMaybe<HavingIntFilter>;
};

export type PenaltyMaxAggregates = {
  __typename?: 'PenaltyMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['Int']['output']>;
  /** Maximum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type PenaltyMinAggregates = {
  __typename?: 'PenaltyMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['Int']['output']>;
  /** Minimum of blockId across the matching connection */
  blockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['Int']['output']>;
};

export type PenaltyStddevPopulationAggregates = {
  __typename?: 'PenaltyStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PenaltyStddevSampleAggregates = {
  __typename?: 'PenaltyStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PenaltySumAggregates = {
  __typename?: 'PenaltySumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigInt']['output'];
  /** Sum of blockId across the matching connection */
  blockId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of validatorId across the matching connection */
  validatorId: Scalars['BigInt']['output'];
};

export type PenaltyVariancePopulationAggregates = {
  __typename?: 'PenaltyVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PenaltyVarianceSampleAggregates = {
  __typename?: 'PenaltyVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockId across the matching connection */
  blockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorId across the matching connection */
  validatorId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PendingDeposit = {
  __typename?: 'PendingDeposit';
  amount: Scalars['String']['output'];
  confirmations: Scalars['Int']['output'];
};

export type PendingDepositsInput = {
  address: Scalars['String']['input'];
  asset: Scalars['String']['input'];
  chain: Scalars['String']['input'];
};

export type Pool = Node & {
  __typename?: 'Pool';
  baseAsset: ChainflipAsset;
  baseLiquidityAmount: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  liquidityFeeHundredthPips: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  price: Scalars['Float']['output'];
  quoteAsset: ChainflipAsset;
  quoteLiquidityAmount: Scalars['BigFloat']['output'];
  rangeOrderPrice: Scalars['Float']['output'];
};

export type PoolAggregates = {
  __typename?: 'PoolAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PoolAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PoolDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PoolMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PoolMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PoolStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PoolStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PoolSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PoolVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PoolVarianceSampleAggregates>;
};

export type PoolAverageAggregates = {
  __typename?: 'PoolAverageAggregates';
  /** Mean average of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Mean average of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

/** A condition to be used against `Pool` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type PoolCondition = {
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `baseLiquidityAmount` field. */
  baseLiquidityAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityFeeHundredthPips` field. */
  liquidityFeeHundredthPips?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `price` field. */
  price?: InputMaybe<Scalars['Float']['input']>;
  /** Checks for equality with the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `quoteLiquidityAmount` field. */
  quoteLiquidityAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `rangeOrderPrice` field. */
  rangeOrderPrice?: InputMaybe<Scalars['Float']['input']>;
};

export type PoolDistinctCountAggregates = {
  __typename?: 'PoolDistinctCountAggregates';
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of price across the matching connection */
  price?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAsset across the matching connection */
  quoteAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['BigInt']['output']>;
};

export type PoolEventType =
  | 'DECREASED'
  | 'INCREASED';

/** A filter to be used against PoolEventType fields. All fields are combined with a logical ‘and.’ */
export type PoolEventTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PoolEventType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PoolEventType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PoolEventType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PoolEventType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PoolEventType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PoolEventType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PoolEventType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PoolEventType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PoolEventType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PoolEventType>>;
};

/** A filter to be used against `Pool` object types. All fields are combined with a logical ‘and.’ */
export type PoolFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PoolFilter>>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `baseLiquidityAmount` field. */
  baseLiquidityAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityFeeHundredthPips` field. */
  liquidityFeeHundredthPips?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PoolFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PoolFilter>>;
  /** Filter by the object’s `price` field. */
  price?: InputMaybe<FloatFilter>;
  /** Filter by the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `quoteLiquidityAmount` field. */
  quoteLiquidityAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `rangeOrderPrice` field. */
  rangeOrderPrice?: InputMaybe<FloatFilter>;
};

/** Grouping methods for `Pool` for usage during aggregation. */
export type PoolGroupBy =
  | 'BASE_ASSET'
  | 'BASE_LIQUIDITY_AMOUNT'
  | 'LIQUIDITY_FEE_HUNDREDTH_PIPS'
  | 'PRICE'
  | 'QUOTE_ASSET'
  | 'QUOTE_LIQUIDITY_AMOUNT'
  | 'RANGE_ORDER_PRICE';

export type PoolHavingAverageInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingDistinctCountInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

/** Conditions for `Pool` aggregates. */
export type PoolHavingInput = {
  AND?: InputMaybe<Array<PoolHavingInput>>;
  OR?: InputMaybe<Array<PoolHavingInput>>;
  average?: InputMaybe<PoolHavingAverageInput>;
  distinctCount?: InputMaybe<PoolHavingDistinctCountInput>;
  max?: InputMaybe<PoolHavingMaxInput>;
  min?: InputMaybe<PoolHavingMinInput>;
  stddevPopulation?: InputMaybe<PoolHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PoolHavingStddevSampleInput>;
  sum?: InputMaybe<PoolHavingSumInput>;
  variancePopulation?: InputMaybe<PoolHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PoolHavingVarianceSampleInput>;
};

export type PoolHavingMaxInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingMinInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingStddevPopulationInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingStddevSampleInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingSumInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingVariancePopulationInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolHavingVarianceSampleInput = {
  baseLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeHundredthPips?: InputMaybe<HavingIntFilter>;
  price?: InputMaybe<HavingFloatFilter>;
  quoteLiquidityAmount?: InputMaybe<HavingBigfloatFilter>;
  rangeOrderPrice?: InputMaybe<HavingFloatFilter>;
};

export type PoolMaxAggregates = {
  __typename?: 'PoolMaxAggregates';
  /** Maximum of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['Int']['output']>;
  /** Maximum of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Maximum of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

export type PoolMinAggregates = {
  __typename?: 'PoolMinAggregates';
  /** Minimum of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['Int']['output']>;
  /** Minimum of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Minimum of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

export type PoolOrder = Node & {
  __typename?: 'PoolOrder';
  baseAmount: Scalars['BigFloat']['output'];
  baseAsset: ChainflipAsset;
  baseCollectedFees: Scalars['BigFloat']['output'];
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `PoolOrder`. */
  eventByOrderCreatedEventId: Event;
  /** Reads a single `Event` that is related to this `PoolOrder`. */
  eventByOrderLastUpdatedEventId?: Maybe<Event>;
  filledBaseAmount: Scalars['BigFloat']['output'];
  filledQuoteAmount: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `PoolOrder`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  lowerTick: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  orderCreatedEventId: Scalars['BigInt']['output'];
  orderId: Scalars['String']['output'];
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  orderType: PoolOrderType;
  quoteAmount: Scalars['BigFloat']['output'];
  quoteAsset: ChainflipAsset;
  quoteCollectedFees: Scalars['BigFloat']['output'];
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  status: PoolOrderStatus;
  upperTick: Scalars['BigFloat']['output'];
};

export type PoolOrderAggregates = {
  __typename?: 'PoolOrderAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PoolOrderAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PoolOrderDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PoolOrderMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PoolOrderMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PoolOrderStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PoolOrderStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PoolOrderSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PoolOrderVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PoolOrderVarianceSampleAggregates>;
};

export type PoolOrderAverageAggregates = {
  __typename?: 'PoolOrderAverageAggregates';
  /** Mean average of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `PoolOrder` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type PoolOrderCondition = {
  /** Checks for equality with the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledBaseAmount` field. */
  filledBaseAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledQuoteAmount` field. */
  filledQuoteAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `lowerTick` field. */
  lowerTick?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `orderCreatedEventId` field. */
  orderCreatedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `orderId` field. */
  orderId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `orderLastUpdatedEventId` field. */
  orderLastUpdatedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderType>;
  /** Checks for equality with the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `status` field. */
  status?: InputMaybe<PoolOrderStatus>;
  /** Checks for equality with the object’s `upperTick` field. */
  upperTick?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type PoolOrderDistinctCountAggregates = {
  __typename?: 'PoolOrderDistinctCountAggregates';
  /** Distinct count of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderId across the matching connection */
  orderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderType across the matching connection */
  orderType?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAsset across the matching connection */
  quoteAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of status across the matching connection */
  status?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigInt']['output']>;
};

export type PoolOrderEvent = Node & {
  __typename?: 'PoolOrderEvent';
  baseAmount: Scalars['BigFloat']['output'];
  baseAsset: ChainflipAsset;
  baseCollectedFees: Scalars['BigFloat']['output'];
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  baseValueUsd: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `PoolOrderEvent`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  eventType: PoolEventType;
  id: Scalars['Int']['output'];
  /** Reads a single `LiquidityProvider` that is related to this `PoolOrderEvent`. */
  liquidityProviderByLiquidityProviderId: LiquidityProvider;
  liquidityProviderId: Scalars['Int']['output'];
  maximumRate: Scalars['BigFloat']['output'];
  minimumRate: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  orderId: Scalars['String']['output'];
  orderType: PoolOrderType;
  quoteAmount: Scalars['BigFloat']['output'];
  quoteCollectedFees: Scalars['BigFloat']['output'];
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  quoteValueUsd: Scalars['BigFloat']['output'];
  timestamp: Scalars['Datetime']['output'];
};

export type PoolOrderEventAggregates = {
  __typename?: 'PoolOrderEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PoolOrderEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PoolOrderEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PoolOrderEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PoolOrderEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PoolOrderEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PoolOrderEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PoolOrderEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PoolOrderEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PoolOrderEventVarianceSampleAggregates>;
};

export type PoolOrderEventAverageAggregates = {
  __typename?: 'PoolOrderEventAverageAggregates';
  /** Mean average of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `PoolOrderEvent` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type PoolOrderEventCondition = {
  /** Checks for equality with the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseValueUsd` field. */
  baseValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `eventType` field. */
  eventType?: InputMaybe<PoolEventType>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `maximumRate` field. */
  maximumRate?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `minimumRate` field. */
  minimumRate?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `orderId` field. */
  orderId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderType>;
  /** Checks for equality with the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteValueUsd` field. */
  quoteValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
};

export type PoolOrderEventDistinctCountAggregates = {
  __typename?: 'PoolOrderEventDistinctCountAggregates';
  /** Distinct count of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventType across the matching connection */
  eventType?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderId across the matching connection */
  orderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderType across the matching connection */
  orderType?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PoolOrderEvent` object types. All fields are combined with a logical ‘and.’ */
export type PoolOrderEventFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PoolOrderEventFilter>>;
  /** Filter by the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseValueUsd` field. */
  baseValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `eventType` field. */
  eventType?: InputMaybe<PoolEventTypeFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `maximumRate` field. */
  maximumRate?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `minimumRate` field. */
  minimumRate?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PoolOrderEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PoolOrderEventFilter>>;
  /** Filter by the object’s `orderId` field. */
  orderId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderTypeFilter>;
  /** Filter by the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteValueUsd` field. */
  quoteValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
};

/** Grouping methods for `PoolOrderEvent` for usage during aggregation. */
export type PoolOrderEventGroupBy =
  | 'BASE_AMOUNT'
  | 'BASE_ASSET'
  | 'BASE_COLLECTED_FEES'
  | 'BASE_COLLECTED_FEES_USD'
  | 'BASE_VALUE_USD'
  | 'EVENT_TYPE'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'MAXIMUM_RATE'
  | 'MINIMUM_RATE'
  | 'ORDER_ID'
  | 'ORDER_TYPE'
  | 'QUOTE_AMOUNT'
  | 'QUOTE_COLLECTED_FEES'
  | 'QUOTE_COLLECTED_FEES_USD'
  | 'QUOTE_VALUE_USD'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR';

export type PoolOrderEventHavingAverageInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingDistinctCountInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `PoolOrderEvent` aggregates. */
export type PoolOrderEventHavingInput = {
  AND?: InputMaybe<Array<PoolOrderEventHavingInput>>;
  OR?: InputMaybe<Array<PoolOrderEventHavingInput>>;
  average?: InputMaybe<PoolOrderEventHavingAverageInput>;
  distinctCount?: InputMaybe<PoolOrderEventHavingDistinctCountInput>;
  max?: InputMaybe<PoolOrderEventHavingMaxInput>;
  min?: InputMaybe<PoolOrderEventHavingMinInput>;
  stddevPopulation?: InputMaybe<PoolOrderEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PoolOrderEventHavingStddevSampleInput>;
  sum?: InputMaybe<PoolOrderEventHavingSumInput>;
  variancePopulation?: InputMaybe<PoolOrderEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PoolOrderEventHavingVarianceSampleInput>;
};

export type PoolOrderEventHavingMaxInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingMinInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingStddevPopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingStddevSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingSumInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingVariancePopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventHavingVarianceSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  baseValueUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  maximumRate?: InputMaybe<HavingBigfloatFilter>;
  minimumRate?: InputMaybe<HavingBigfloatFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteValueUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type PoolOrderEventMaxAggregates = {
  __typename?: 'PoolOrderEventMaxAggregates';
  /** Maximum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderEventMinAggregates = {
  __typename?: 'PoolOrderEventMinAggregates';
  /** Minimum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderEventStddevPopulationAggregates = {
  __typename?: 'PoolOrderEventStddevPopulationAggregates';
  /** Population standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderEventStddevSampleAggregates = {
  __typename?: 'PoolOrderEventStddevSampleAggregates';
  /** Sample standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderEventSumAggregates = {
  __typename?: 'PoolOrderEventSumAggregates';
  /** Sum of baseAmount across the matching connection */
  baseAmount: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFees across the matching connection */
  baseCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of baseValueUsd across the matching connection */
  baseValueUsd: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of maximumRate across the matching connection */
  maximumRate: Scalars['BigFloat']['output'];
  /** Sum of minimumRate across the matching connection */
  minimumRate: Scalars['BigFloat']['output'];
  /** Sum of quoteAmount across the matching connection */
  quoteAmount: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFees across the matching connection */
  quoteCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of quoteValueUsd across the matching connection */
  quoteValueUsd: Scalars['BigFloat']['output'];
};

export type PoolOrderEventVariancePopulationAggregates = {
  __typename?: 'PoolOrderEventVariancePopulationAggregates';
  /** Population variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderEventVarianceSampleAggregates = {
  __typename?: 'PoolOrderEventVarianceSampleAggregates';
  /** Sample variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseValueUsd across the matching connection */
  baseValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of maximumRate across the matching connection */
  maximumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of minimumRate across the matching connection */
  minimumRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteValueUsd across the matching connection */
  quoteValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PoolOrderEvent` values. */
export type PoolOrderEventsConnection = {
  __typename?: 'PoolOrderEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PoolOrderEventAggregates>;
  /** A list of edges which contains the `PoolOrderEvent` and cursor to aid in pagination. */
  edges: Array<PoolOrderEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PoolOrderEventAggregates>>;
  /** A list of `PoolOrderEvent` objects. */
  nodes: Array<PoolOrderEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PoolOrderEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PoolOrderEvent` values. */
export type PoolOrderEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<PoolOrderEventGroupBy>;
  having?: InputMaybe<PoolOrderEventHavingInput>;
};

/** A `PoolOrderEvent` edge in the connection. */
export type PoolOrderEventsEdge = {
  __typename?: 'PoolOrderEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PoolOrderEvent` at the end of the edge. */
  node: PoolOrderEvent;
};

/** Methods to use when ordering `PoolOrderEvent`. */
export type PoolOrderEventsOrderBy =
  | 'BASE_AMOUNT_ASC'
  | 'BASE_AMOUNT_DESC'
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BASE_COLLECTED_FEES_ASC'
  | 'BASE_COLLECTED_FEES_DESC'
  | 'BASE_COLLECTED_FEES_USD_ASC'
  | 'BASE_COLLECTED_FEES_USD_DESC'
  | 'BASE_VALUE_USD_ASC'
  | 'BASE_VALUE_USD_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'EVENT_TYPE_ASC'
  | 'EVENT_TYPE_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'MAXIMUM_RATE_ASC'
  | 'MAXIMUM_RATE_DESC'
  | 'MINIMUM_RATE_ASC'
  | 'MINIMUM_RATE_DESC'
  | 'NATURAL'
  | 'ORDER_ID_ASC'
  | 'ORDER_ID_DESC'
  | 'ORDER_TYPE_ASC'
  | 'ORDER_TYPE_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'QUOTE_AMOUNT_ASC'
  | 'QUOTE_AMOUNT_DESC'
  | 'QUOTE_COLLECTED_FEES_ASC'
  | 'QUOTE_COLLECTED_FEES_DESC'
  | 'QUOTE_COLLECTED_FEES_USD_ASC'
  | 'QUOTE_COLLECTED_FEES_USD_DESC'
  | 'QUOTE_VALUE_USD_ASC'
  | 'QUOTE_VALUE_USD_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC';

/** A filter to be used against `PoolOrder` object types. All fields are combined with a logical ‘and.’ */
export type PoolOrderFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PoolOrderFilter>>;
  /** Filter by the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `filledBaseAmount` field. */
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `filledQuoteAmount` field. */
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lowerTick` field. */
  lowerTick?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PoolOrderFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PoolOrderFilter>>;
  /** Filter by the object’s `orderCreatedEventId` field. */
  orderCreatedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `orderId` field. */
  orderId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `orderLastUpdatedEventId` field. */
  orderLastUpdatedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderTypeFilter>;
  /** Filter by the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `status` field. */
  status?: InputMaybe<PoolOrderStatusFilter>;
  /** Filter by the object’s `upperTick` field. */
  upperTick?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `PoolOrder` for usage during aggregation. */
export type PoolOrderGroupBy =
  | 'BASE_AMOUNT'
  | 'BASE_ASSET'
  | 'BASE_COLLECTED_FEES'
  | 'BASE_COLLECTED_FEES_USD'
  | 'FILLED_BASE_AMOUNT'
  | 'FILLED_QUOTE_AMOUNT'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'LOWER_TICK'
  | 'ORDER_CREATED_EVENT_ID'
  | 'ORDER_ID'
  | 'ORDER_LAST_UPDATED_EVENT_ID'
  | 'ORDER_TYPE'
  | 'QUOTE_AMOUNT'
  | 'QUOTE_ASSET'
  | 'QUOTE_COLLECTED_FEES'
  | 'QUOTE_COLLECTED_FEES_USD'
  | 'STATUS'
  | 'UPPER_TICK';

export type PoolOrderHavingAverageInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingDistinctCountInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `PoolOrder` aggregates. */
export type PoolOrderHavingInput = {
  AND?: InputMaybe<Array<PoolOrderHavingInput>>;
  OR?: InputMaybe<Array<PoolOrderHavingInput>>;
  average?: InputMaybe<PoolOrderHavingAverageInput>;
  distinctCount?: InputMaybe<PoolOrderHavingDistinctCountInput>;
  max?: InputMaybe<PoolOrderHavingMaxInput>;
  min?: InputMaybe<PoolOrderHavingMinInput>;
  stddevPopulation?: InputMaybe<PoolOrderHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PoolOrderHavingStddevSampleInput>;
  sum?: InputMaybe<PoolOrderHavingSumInput>;
  variancePopulation?: InputMaybe<PoolOrderHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PoolOrderHavingVarianceSampleInput>;
};

export type PoolOrderHavingMaxInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingMinInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingStddevPopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingStddevSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingSumInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingVariancePopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingVarianceSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderMaxAggregates = {
  __typename?: 'PoolOrderMaxAggregates';
  /** Maximum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderMinAggregates = {
  __typename?: 'PoolOrderMinAggregates';
  /** Minimum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderStatus =
  | 'CLOSED'
  | 'OPEN';

/** A filter to be used against PoolOrderStatus fields. All fields are combined with a logical ‘and.’ */
export type PoolOrderStatusFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PoolOrderStatus>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PoolOrderStatus>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PoolOrderStatus>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PoolOrderStatus>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PoolOrderStatus>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PoolOrderStatus>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PoolOrderStatus>>;
};

export type PoolOrderStddevPopulationAggregates = {
  __typename?: 'PoolOrderStddevPopulationAggregates';
  /** Population standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderStddevSampleAggregates = {
  __typename?: 'PoolOrderStddevSampleAggregates';
  /** Sample standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderSumAggregates = {
  __typename?: 'PoolOrderSumAggregates';
  /** Sum of baseAmount across the matching connection */
  baseAmount: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFees across the matching connection */
  baseCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of filledBaseAmount across the matching connection */
  filledBaseAmount: Scalars['BigFloat']['output'];
  /** Sum of filledQuoteAmount across the matching connection */
  filledQuoteAmount: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of lowerTick across the matching connection */
  lowerTick: Scalars['BigFloat']['output'];
  /** Sum of orderCreatedEventId across the matching connection */
  orderCreatedEventId: Scalars['BigFloat']['output'];
  /** Sum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId: Scalars['BigFloat']['output'];
  /** Sum of quoteAmount across the matching connection */
  quoteAmount: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFees across the matching connection */
  quoteCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of upperTick across the matching connection */
  upperTick: Scalars['BigFloat']['output'];
};

export type PoolOrderType =
  | 'LIMIT'
  | 'RANGE';

/** A filter to be used against PoolOrderType fields. All fields are combined with a logical ‘and.’ */
export type PoolOrderTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PoolOrderType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PoolOrderType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PoolOrderType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PoolOrderType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PoolOrderType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PoolOrderType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PoolOrderType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PoolOrderType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PoolOrderType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PoolOrderType>>;
};

export type PoolOrderVariancePopulationAggregates = {
  __typename?: 'PoolOrderVariancePopulationAggregates';
  /** Population variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderVarianceSampleAggregates = {
  __typename?: 'PoolOrderVarianceSampleAggregates';
  /** Sample variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PoolOrder` values. */
export type PoolOrdersConnection = {
  __typename?: 'PoolOrdersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PoolOrderAggregates>;
  /** A list of edges which contains the `PoolOrder` and cursor to aid in pagination. */
  edges: Array<PoolOrdersEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PoolOrderAggregates>>;
  /** A list of `PoolOrder` objects. */
  nodes: Array<PoolOrder>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PoolOrder` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PoolOrder` values. */
export type PoolOrdersConnectionGroupedAggregatesArgs = {
  groupBy: Array<PoolOrderGroupBy>;
  having?: InputMaybe<PoolOrderHavingInput>;
};

/** A `PoolOrder` edge in the connection. */
export type PoolOrdersEdge = {
  __typename?: 'PoolOrdersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PoolOrder` at the end of the edge. */
  node: PoolOrder;
};

/** Methods to use when ordering `PoolOrder`. */
export type PoolOrdersOrderBy =
  | 'BASE_AMOUNT_ASC'
  | 'BASE_AMOUNT_DESC'
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BASE_COLLECTED_FEES_ASC'
  | 'BASE_COLLECTED_FEES_DESC'
  | 'BASE_COLLECTED_FEES_USD_ASC'
  | 'BASE_COLLECTED_FEES_USD_DESC'
  | 'FILLED_BASE_AMOUNT_ASC'
  | 'FILLED_BASE_AMOUNT_DESC'
  | 'FILLED_QUOTE_AMOUNT_ASC'
  | 'FILLED_QUOTE_AMOUNT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'LOWER_TICK_ASC'
  | 'LOWER_TICK_DESC'
  | 'NATURAL'
  | 'ORDER_CREATED_EVENT_ID_ASC'
  | 'ORDER_CREATED_EVENT_ID_DESC'
  | 'ORDER_ID_ASC'
  | 'ORDER_ID_DESC'
  | 'ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'ORDER_TYPE_ASC'
  | 'ORDER_TYPE_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'QUOTE_AMOUNT_ASC'
  | 'QUOTE_AMOUNT_DESC'
  | 'QUOTE_ASSET_ASC'
  | 'QUOTE_ASSET_DESC'
  | 'QUOTE_COLLECTED_FEES_ASC'
  | 'QUOTE_COLLECTED_FEES_DESC'
  | 'QUOTE_COLLECTED_FEES_USD_ASC'
  | 'QUOTE_COLLECTED_FEES_USD_DESC'
  | 'STATUS_ASC'
  | 'STATUS_DESC'
  | 'UPPER_TICK_ASC'
  | 'UPPER_TICK_DESC';

export type PoolStddevPopulationAggregates = {
  __typename?: 'PoolStddevPopulationAggregates';
  /** Population standard deviation of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Population standard deviation of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

export type PoolStddevSampleAggregates = {
  __typename?: 'PoolStddevSampleAggregates';
  /** Sample standard deviation of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Sample standard deviation of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

export type PoolSumAggregates = {
  __typename?: 'PoolSumAggregates';
  /** Sum of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips: Scalars['BigInt']['output'];
  /** Sum of price across the matching connection */
  price: Scalars['Float']['output'];
  /** Sum of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount: Scalars['BigFloat']['output'];
  /** Sum of rangeOrderPrice across the matching connection */
  rangeOrderPrice: Scalars['Float']['output'];
};

export type PoolSwap = Node & {
  __typename?: 'PoolSwap';
  assetSwappedBlockTimestamp: Scalars['Datetime']['output'];
  assetSwappedEventId: Scalars['BigInt']['output'];
  /** Reads a single `Event` that is related to this `PoolSwap`. */
  eventByAssetSwappedEventId: Event;
  fromAmount: Scalars['BigFloat']['output'];
  fromAsset: ChainflipAsset;
  fromValueUsd: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  liquidityFeeAmount: Scalars['BigFloat']['output'];
  liquidityFeeValueUsd: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  toAmount: Scalars['BigFloat']['output'];
  toAsset: ChainflipAsset;
  toValueUsd: Scalars['BigFloat']['output'];
};

export type PoolSwapAggregates = {
  __typename?: 'PoolSwapAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PoolSwapAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PoolSwapDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PoolSwapMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PoolSwapMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PoolSwapStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PoolSwapStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PoolSwapSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PoolSwapVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PoolSwapVarianceSampleAggregates>;
};

export type PoolSwapAverageAggregates = {
  __typename?: 'PoolSwapAverageAggregates';
  /** Mean average of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `PoolSwap` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type PoolSwapCondition = {
  /** Checks for equality with the object’s `assetSwappedBlockTimestamp` field. */
  assetSwappedBlockTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `assetSwappedEventId` field. */
  assetSwappedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `fromAmount` field. */
  fromAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `fromAsset` field. */
  fromAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `fromValueUsd` field. */
  fromValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityFeeAmount` field. */
  liquidityFeeAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `liquidityFeeValueUsd` field. */
  liquidityFeeValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `toAmount` field. */
  toAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `toAsset` field. */
  toAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `toValueUsd` field. */
  toValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type PoolSwapDistinctCountAggregates = {
  __typename?: 'PoolSwapDistinctCountAggregates';
  /** Distinct count of assetSwappedBlockTimestamp across the matching connection */
  assetSwappedBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fromAsset across the matching connection */
  fromAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of toAsset across the matching connection */
  toAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PoolSwap` object types. All fields are combined with a logical ‘and.’ */
export type PoolSwapFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PoolSwapFilter>>;
  /** Filter by the object’s `assetSwappedBlockTimestamp` field. */
  assetSwappedBlockTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `assetSwappedEventId` field. */
  assetSwappedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `fromAmount` field. */
  fromAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `fromAsset` field. */
  fromAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `fromValueUsd` field. */
  fromValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityFeeAmount` field. */
  liquidityFeeAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `liquidityFeeValueUsd` field. */
  liquidityFeeValueUsd?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PoolSwapFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PoolSwapFilter>>;
  /** Filter by the object’s `toAmount` field. */
  toAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `toAsset` field. */
  toAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `toValueUsd` field. */
  toValueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `PoolSwap` for usage during aggregation. */
export type PoolSwapGroupBy =
  | 'ASSET_SWAPPED_BLOCK_TIMESTAMP'
  | 'ASSET_SWAPPED_BLOCK_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'ASSET_SWAPPED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'ASSET_SWAPPED_EVENT_ID'
  | 'FROM_AMOUNT'
  | 'FROM_ASSET'
  | 'FROM_VALUE_USD'
  | 'LIQUIDITY_FEE_AMOUNT'
  | 'LIQUIDITY_FEE_VALUE_USD'
  | 'TO_AMOUNT'
  | 'TO_ASSET'
  | 'TO_VALUE_USD';

export type PoolSwapHavingAverageInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingDistinctCountInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `PoolSwap` aggregates. */
export type PoolSwapHavingInput = {
  AND?: InputMaybe<Array<PoolSwapHavingInput>>;
  OR?: InputMaybe<Array<PoolSwapHavingInput>>;
  average?: InputMaybe<PoolSwapHavingAverageInput>;
  distinctCount?: InputMaybe<PoolSwapHavingDistinctCountInput>;
  max?: InputMaybe<PoolSwapHavingMaxInput>;
  min?: InputMaybe<PoolSwapHavingMinInput>;
  stddevPopulation?: InputMaybe<PoolSwapHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PoolSwapHavingStddevSampleInput>;
  sum?: InputMaybe<PoolSwapHavingSumInput>;
  variancePopulation?: InputMaybe<PoolSwapHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PoolSwapHavingVarianceSampleInput>;
};

export type PoolSwapHavingMaxInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingMinInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingStddevPopulationInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingStddevSampleInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingSumInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingVariancePopulationInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapHavingVarianceSampleInput = {
  assetSwappedBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  assetSwappedEventId?: InputMaybe<HavingBigintFilter>;
  fromAmount?: InputMaybe<HavingBigfloatFilter>;
  fromValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityFeeAmount?: InputMaybe<HavingBigfloatFilter>;
  liquidityFeeValueUsd?: InputMaybe<HavingBigfloatFilter>;
  toAmount?: InputMaybe<HavingBigfloatFilter>;
  toValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolSwapMaxAggregates = {
  __typename?: 'PoolSwapMaxAggregates';
  /** Maximum of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolSwapMinAggregates = {
  __typename?: 'PoolSwapMinAggregates';
  /** Minimum of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolSwapStddevPopulationAggregates = {
  __typename?: 'PoolSwapStddevPopulationAggregates';
  /** Population standard deviation of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolSwapStddevSampleAggregates = {
  __typename?: 'PoolSwapStddevSampleAggregates';
  /** Sample standard deviation of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolSwapSumAggregates = {
  __typename?: 'PoolSwapSumAggregates';
  /** Sum of assetSwappedEventId across the matching connection */
  assetSwappedEventId: Scalars['BigFloat']['output'];
  /** Sum of fromAmount across the matching connection */
  fromAmount: Scalars['BigFloat']['output'];
  /** Sum of fromValueUsd across the matching connection */
  fromValueUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount: Scalars['BigFloat']['output'];
  /** Sum of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd: Scalars['BigFloat']['output'];
  /** Sum of toAmount across the matching connection */
  toAmount: Scalars['BigFloat']['output'];
  /** Sum of toValueUsd across the matching connection */
  toValueUsd: Scalars['BigFloat']['output'];
};

export type PoolSwapVariancePopulationAggregates = {
  __typename?: 'PoolSwapVariancePopulationAggregates';
  /** Population variance of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolSwapVarianceSampleAggregates = {
  __typename?: 'PoolSwapVarianceSampleAggregates';
  /** Sample variance of assetSwappedEventId across the matching connection */
  assetSwappedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fromAmount across the matching connection */
  fromAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fromValueUsd across the matching connection */
  fromValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityFeeAmount across the matching connection */
  liquidityFeeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityFeeValueUsd across the matching connection */
  liquidityFeeValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of toAmount across the matching connection */
  toAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of toValueUsd across the matching connection */
  toValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PoolSwap` values. */
export type PoolSwapsConnection = {
  __typename?: 'PoolSwapsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PoolSwapAggregates>;
  /** A list of edges which contains the `PoolSwap` and cursor to aid in pagination. */
  edges: Array<PoolSwapsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PoolSwapAggregates>>;
  /** A list of `PoolSwap` objects. */
  nodes: Array<PoolSwap>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PoolSwap` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PoolSwap` values. */
export type PoolSwapsConnectionGroupedAggregatesArgs = {
  groupBy: Array<PoolSwapGroupBy>;
  having?: InputMaybe<PoolSwapHavingInput>;
};

/** A `PoolSwap` edge in the connection. */
export type PoolSwapsEdge = {
  __typename?: 'PoolSwapsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PoolSwap` at the end of the edge. */
  node: PoolSwap;
};

/** Methods to use when ordering `PoolSwap`. */
export type PoolSwapsOrderBy =
  | 'ASSET_SWAPPED_BLOCK_TIMESTAMP_ASC'
  | 'ASSET_SWAPPED_BLOCK_TIMESTAMP_DESC'
  | 'ASSET_SWAPPED_EVENT_ID_ASC'
  | 'ASSET_SWAPPED_EVENT_ID_DESC'
  | 'FROM_AMOUNT_ASC'
  | 'FROM_AMOUNT_DESC'
  | 'FROM_ASSET_ASC'
  | 'FROM_ASSET_DESC'
  | 'FROM_VALUE_USD_ASC'
  | 'FROM_VALUE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_FEE_AMOUNT_ASC'
  | 'LIQUIDITY_FEE_AMOUNT_DESC'
  | 'LIQUIDITY_FEE_VALUE_USD_ASC'
  | 'LIQUIDITY_FEE_VALUE_USD_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TO_AMOUNT_ASC'
  | 'TO_AMOUNT_DESC'
  | 'TO_ASSET_ASC'
  | 'TO_ASSET_DESC'
  | 'TO_VALUE_USD_ASC'
  | 'TO_VALUE_USD_DESC';

export type PoolVariancePopulationAggregates = {
  __typename?: 'PoolVariancePopulationAggregates';
  /** Population variance of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Population variance of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

export type PoolVarianceSampleAggregates = {
  __typename?: 'PoolVarianceSampleAggregates';
  /** Sample variance of baseLiquidityAmount across the matching connection */
  baseLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityFeeHundredthPips across the matching connection */
  liquidityFeeHundredthPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of price across the matching connection */
  price?: Maybe<Scalars['Float']['output']>;
  /** Sample variance of quoteLiquidityAmount across the matching connection */
  quoteLiquidityAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of rangeOrderPrice across the matching connection */
  rangeOrderPrice?: Maybe<Scalars['Float']['output']>;
};

/** A connection to a list of `Pool` values. */
export type PoolsConnection = {
  __typename?: 'PoolsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PoolAggregates>;
  /** A list of edges which contains the `Pool` and cursor to aid in pagination. */
  edges: Array<PoolsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PoolAggregates>>;
  /** A list of `Pool` objects. */
  nodes: Array<Pool>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Pool` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Pool` values. */
export type PoolsConnectionGroupedAggregatesArgs = {
  groupBy: Array<PoolGroupBy>;
  having?: InputMaybe<PoolHavingInput>;
};

/** A `Pool` edge in the connection. */
export type PoolsEdge = {
  __typename?: 'PoolsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Pool` at the end of the edge. */
  node: Pool;
};

/** Methods to use when ordering `Pool`. */
export type PoolsOrderBy =
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BASE_LIQUIDITY_AMOUNT_ASC'
  | 'BASE_LIQUIDITY_AMOUNT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_FEE_HUNDREDTH_PIPS_ASC'
  | 'LIQUIDITY_FEE_HUNDREDTH_PIPS_DESC'
  | 'NATURAL'
  | 'PRICE_ASC'
  | 'PRICE_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'QUOTE_ASSET_ASC'
  | 'QUOTE_ASSET_DESC'
  | 'QUOTE_LIQUIDITY_AMOUNT_ASC'
  | 'QUOTE_LIQUIDITY_AMOUNT_DESC'
  | 'RANGE_ORDER_PRICE_ASC'
  | 'RANGE_ORDER_PRICE_DESC';

export type PriceQueryInput = {
  address: Scalars['String']['input'];
  chainId: Scalars['String']['input'];
  date?: InputMaybe<Scalars['Datetime']['input']>;
};

/** The root query type which gives access points into the data universe. */
export type Query = Node & {
  __typename?: 'Query';
  /** Reads a single `_PrismaMigration` using its globally unique `ID`. */
  _prismaMigration?: Maybe<_PrismaMigration>;
  _prismaMigrationById?: Maybe<_PrismaMigration>;
  /** Reads a single `Account` using its globally unique `ID`. */
  account?: Maybe<Account>;
  accountById?: Maybe<Account>;
  accountByIdHex?: Maybe<Account>;
  accountByIdSs58?: Maybe<Account>;
  /** Reads a single `AccountEpochBalanceChange` using its globally unique `ID`. */
  accountEpochBalanceChange?: Maybe<AccountEpochBalanceChange>;
  accountEpochBalanceChangeByEpochIdAndAccountId?: Maybe<AccountEpochBalanceChange>;
  accountEpochBalanceChangeById?: Maybe<AccountEpochBalanceChange>;
  /** Reads a single `AccountFundingEvent` using its globally unique `ID`. */
  accountFundingEvent?: Maybe<AccountFundingEvent>;
  accountFundingEventById?: Maybe<AccountFundingEvent>;
  /** Reads and enables pagination through a set of `AccountEpochBalanceChange`. */
  allAccountEpochBalanceChanges?: Maybe<AccountEpochBalanceChangesConnection>;
  /** Reads and enables pagination through a set of `AccountFundingEvent`. */
  allAccountFundingEvents?: Maybe<AccountFundingEventsConnection>;
  /** Reads and enables pagination through a set of `Account`. */
  allAccounts?: Maybe<AccountsConnection>;
  /** Reads and enables pagination through a set of `Auction`. */
  allAuctions?: Maybe<AuctionsConnection>;
  /** Reads and enables pagination through a set of `AuthorityHeartbeat`. */
  allAuthorityHeartbeats?: Maybe<AuthorityHeartbeatsConnection>;
  /** Reads and enables pagination through a set of `AuthorityMembership`. */
  allAuthorityMemberships?: Maybe<AuthorityMembershipsConnection>;
  /** Reads and enables pagination through a set of `Banner`. */
  allBanners?: Maybe<BannersConnection>;
  /** Reads and enables pagination through a set of `Block`. */
  allBlocks?: Maybe<BlocksConnection>;
  /** Reads and enables pagination through a set of `Broadcast`. */
  allBroadcasts?: Maybe<BroadcastsConnection>;
  /** Reads and enables pagination through a set of `BrokerAccountEarnedFee`. */
  allBrokerAccountEarnedFees?: Maybe<BrokerAccountEarnedFeesConnection>;
  /** Reads and enables pagination through a set of `BrokerAccount`. */
  allBrokerAccounts?: Maybe<BrokerAccountsConnection>;
  /** Reads and enables pagination through a set of `BrokerFeeAndWithdrawal`. */
  allBrokerFeeAndWithdrawals?: Maybe<BrokerFeeAndWithdrawalsConnection>;
  /** Reads and enables pagination through a set of `BrokerWithdrawal`. */
  allBrokerWithdrawals?: Maybe<BrokerWithdrawalsConnection>;
  /** Reads and enables pagination through a set of `Broker`. */
  allBrokers?: Maybe<BrokersConnection>;
  /** Reads and enables pagination through a set of `CfeVersion`. */
  allCfeVersions?: Maybe<CfeVersionsConnection>;
  /** Reads and enables pagination through a set of `ChainTracking`. */
  allChainTrackings?: Maybe<ChainTrackingsConnection>;
  /** Reads and enables pagination through a set of `Circulation`. */
  allCirculations?: Maybe<CirculationsConnection>;
  /** Reads and enables pagination through a set of `CollectedFee`. */
  allCollectedFees?: Maybe<CollectedFeesConnection>;
  /** Reads and enables pagination through a set of `DepositBalance`. */
  allDepositBalances?: Maybe<DepositBalancesConnection>;
  /** Reads and enables pagination through a set of `EnvironmentAddress`. */
  allEnvironmentAddresses?: Maybe<EnvironmentAddressesConnection>;
  /** Reads and enables pagination through a set of `Epoch`. */
  allEpoches?: Maybe<EpochesConnection>;
  /** Reads and enables pagination through a set of `Event`. */
  allEvents?: Maybe<EventsConnection>;
  /** Reads and enables pagination through a set of `ExecutedRedemption`. */
  allExecutedRedemptions?: Maybe<ExecutedRedemptionsConnection>;
  /** Reads and enables pagination through a set of `Extrinsic`. */
  allExtrinsics?: Maybe<ExtrinsicsConnection>;
  /** Reads and enables pagination through a set of `FailedSwap`. */
  allFailedSwaps?: Maybe<FailedSwapsConnection>;
  /** Reads and enables pagination through a set of `FlipSupply`. */
  allFlipSupplies?: Maybe<FlipSuppliesConnection>;
  /** Reads and enables pagination through a set of `FundingEvent`. */
  allFundingEvents?: Maybe<FundingEventsConnection>;
  /** Reads and enables pagination through a set of `IgnoredDeposit`. */
  allIgnoredDeposits?: Maybe<IgnoredDepositsConnection>;
  /** Reads and enables pagination through a set of `LiquidityBalanceEvent`. */
  allLiquidityBalanceEvents?: Maybe<LiquidityBalanceEventsConnection>;
  /** Reads and enables pagination through a set of `LiquidityDepositChannel`. */
  allLiquidityDepositChannels?: Maybe<LiquidityDepositChannelsConnection>;
  /** Reads and enables pagination through a set of `LiquidityDeposit`. */
  allLiquidityDeposits?: Maybe<LiquidityDepositsConnection>;
  /** Reads and enables pagination through a set of `LiquidityProvider`. */
  allLiquidityProviders?: Maybe<LiquidityProvidersConnection>;
  /** Reads and enables pagination through a set of `LiquidityWithdrawal`. */
  allLiquidityWithdrawals?: Maybe<LiquidityWithdrawalsConnection>;
  /** Reads and enables pagination through a set of `LpAccount`. */
  allLpAccounts?: Maybe<LpAccountsConnection>;
  /** Reads and enables pagination through a set of `Metadatum`. */
  allMetadata?: Maybe<MetadataConnection>;
  /** Reads and enables pagination through a set of `Penalty`. */
  allPenalties?: Maybe<PenaltiesConnection>;
  /** Reads and enables pagination through a set of `PoolOrderEvent`. */
  allPoolOrderEvents?: Maybe<PoolOrderEventsConnection>;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  allPoolOrders?: Maybe<PoolOrdersConnection>;
  /** Reads and enables pagination through a set of `PoolSwap`. */
  allPoolSwaps?: Maybe<PoolSwapsConnection>;
  /** Reads and enables pagination through a set of `Pool`. */
  allPools?: Maybe<PoolsConnection>;
  /** Reads and enables pagination through a set of `_PrismaMigration`. */
  allPrismaMigrations?: Maybe<_PrismaMigrationsConnection>;
  /** Reads and enables pagination through a set of `RegisteredRedemption`. */
  allRegisteredRedemptions?: Maybe<RegisteredRedemptionsConnection>;
  /** Reads and enables pagination through a set of `RotationEvent`. */
  allRotationEvents?: Maybe<RotationEventsConnection>;
  /** Reads and enables pagination through a set of `StateChainError`. */
  allStateChainErrors?: Maybe<StateChainErrorsConnection>;
  /** Reads and enables pagination through a set of `SwapChannel`. */
  allSwapChannels?: Maybe<SwapChannelsConnection>;
  /** Reads and enables pagination through a set of `SwapFee`. */
  allSwapFees?: Maybe<SwapFeesConnection>;
  /** Reads and enables pagination through a set of `Swap`. */
  allSwaps?: Maybe<SwapsConnection>;
  /** Reads and enables pagination through a set of `TokenPrice`. */
  allTokenPrices?: Maybe<TokenPricesConnection>;
  /** Reads and enables pagination through a set of `Validator`. */
  allValidators?: Maybe<ValidatorsConnection>;
  /** Reads a single `Auction` using its globally unique `ID`. */
  auction?: Maybe<Auction>;
  auctionById?: Maybe<Auction>;
  /** Reads a single `AuthorityHeartbeat` using its globally unique `ID`. */
  authorityHeartbeat?: Maybe<AuthorityHeartbeat>;
  authorityHeartbeatByExtrinsicId?: Maybe<AuthorityHeartbeat>;
  authorityHeartbeatById?: Maybe<AuthorityHeartbeat>;
  /** Reads a single `AuthorityMembership` using its globally unique `ID`. */
  authorityMembership?: Maybe<AuthorityMembership>;
  authorityMembershipByEpochIdAndValidatorId?: Maybe<AuthorityMembership>;
  authorityMembershipById?: Maybe<AuthorityMembership>;
  /** Reads a single `Banner` using its globally unique `ID`. */
  banner?: Maybe<Banner>;
  bannerByApp?: Maybe<Banner>;
  /** Reads a single `Block` using its globally unique `ID`. */
  block?: Maybe<Block>;
  blockByHash?: Maybe<Block>;
  blockById?: Maybe<Block>;
  /** Reads a single `Broadcast` using its globally unique `ID`. */
  broadcast?: Maybe<Broadcast>;
  broadcastByDestinationChainAndNativeId?: Maybe<Broadcast>;
  broadcastById?: Maybe<Broadcast>;
  /** Reads a single `Broker` using its globally unique `ID`. */
  broker?: Maybe<Broker>;
  /** Reads a single `BrokerAccount` using its globally unique `ID`. */
  brokerAccount?: Maybe<BrokerAccount>;
  brokerAccountByIdSs58?: Maybe<BrokerAccount>;
  /** Reads a single `BrokerAccountEarnedFee` using its globally unique `ID`. */
  brokerAccountEarnedFee?: Maybe<BrokerAccountEarnedFee>;
  brokerAccountEarnedFeeById?: Maybe<BrokerAccountEarnedFee>;
  brokerByAccountId?: Maybe<Broker>;
  brokerById?: Maybe<Broker>;
  brokerFeeAndWithdrawalByEventId?: Maybe<BrokerFeeAndWithdrawal>;
  /** Reads a single `BrokerWithdrawal` using its globally unique `ID`. */
  brokerWithdrawal?: Maybe<BrokerWithdrawal>;
  brokerWithdrawalById?: Maybe<BrokerWithdrawal>;
  /** Reads a single `CfeVersion` using its globally unique `ID`. */
  cfeVersion?: Maybe<CfeVersion>;
  cfeVersionById?: Maybe<CfeVersion>;
  /** Reads a single `ChainTracking` using its globally unique `ID`. */
  chainTracking?: Maybe<ChainTracking>;
  chainTrackingByChain?: Maybe<ChainTracking>;
  chainTrackingById?: Maybe<ChainTracking>;
  /** Reads a single `Circulation` using its globally unique `ID`. */
  circulation?: Maybe<Circulation>;
  circulationById?: Maybe<Circulation>;
  /** Reads a single `CollectedFee` using its globally unique `ID`. */
  collectedFee?: Maybe<CollectedFee>;
  collectedFeeById?: Maybe<CollectedFee>;
  /** Reads a single `EnvironmentAddress` using its globally unique `ID`. */
  environmentAddress?: Maybe<EnvironmentAddress>;
  environmentAddressById?: Maybe<EnvironmentAddress>;
  /** Reads a single `Epoch` using its globally unique `ID`. */
  epoch?: Maybe<Epoch>;
  epochByEndBlockId?: Maybe<Epoch>;
  epochById?: Maybe<Epoch>;
  epochByStartBlockId?: Maybe<Epoch>;
  /** Reads a single `Event` using its globally unique `ID`. */
  event?: Maybe<Event>;
  eventByBlockIdAndIndexInBlock?: Maybe<Event>;
  eventById?: Maybe<Event>;
  /** Reads a single `ExecutedRedemption` using its globally unique `ID`. */
  executedRedemption?: Maybe<ExecutedRedemption>;
  executedRedemptionByTxHashAndLogIndex?: Maybe<ExecutedRedemption>;
  /** Reads a single `Extrinsic` using its globally unique `ID`. */
  extrinsic?: Maybe<Extrinsic>;
  extrinsicByBlockIdAndIndexInBlock?: Maybe<Extrinsic>;
  extrinsicById?: Maybe<Extrinsic>;
  /** Reads a single `FailedSwap` using its globally unique `ID`. */
  failedSwap?: Maybe<FailedSwap>;
  failedSwapById?: Maybe<FailedSwap>;
  /** Reads a single `FlipSupply` using its globally unique `ID`. */
  flipSupply?: Maybe<FlipSupply>;
  flipSupplyById?: Maybe<FlipSupply>;
  /** Reads a single `FundingEvent` using its globally unique `ID`. */
  fundingEvent?: Maybe<FundingEvent>;
  fundingEventByTxHashAndLogIndex?: Maybe<FundingEvent>;
  getTokenPrices: Array<TokenPrice>;
  /** Reads a single `IgnoredDeposit` using its globally unique `ID`. */
  ignoredDeposit?: Maybe<IgnoredDeposit>;
  ignoredDepositById?: Maybe<IgnoredDeposit>;
  liquidityBalanceEventByEventId?: Maybe<LiquidityBalanceEvent>;
  /** Reads a single `LiquidityDeposit` using its globally unique `ID`. */
  liquidityDeposit?: Maybe<LiquidityDeposit>;
  liquidityDepositById?: Maybe<LiquidityDeposit>;
  /** Reads a single `LiquidityDepositChannel` using its globally unique `ID`. */
  liquidityDepositChannel?: Maybe<LiquidityDepositChannel>;
  liquidityDepositChannelById?: Maybe<LiquidityDepositChannel>;
  liquidityDepositChannelByIssuedBlockIdAndChainAndChannelId?: Maybe<LiquidityDepositChannel>;
  /** Reads a single `LiquidityProvider` using its globally unique `ID`. */
  liquidityProvider?: Maybe<LiquidityProvider>;
  liquidityProviderByAccountId?: Maybe<LiquidityProvider>;
  liquidityProviderById?: Maybe<LiquidityProvider>;
  /** Reads a single `LiquidityWithdrawal` using its globally unique `ID`. */
  liquidityWithdrawal?: Maybe<LiquidityWithdrawal>;
  liquidityWithdrawalByEgressIdAndChain?: Maybe<LiquidityWithdrawal>;
  liquidityWithdrawalById?: Maybe<LiquidityWithdrawal>;
  /** Reads a single `LpAccount` using its globally unique `ID`. */
  lpAccount?: Maybe<LpAccount>;
  lpAccountByIdSs58?: Maybe<LpAccount>;
  marketData: MarketData;
  /** Reads a single `Metadatum` using its globally unique `ID`. */
  metadatum?: Maybe<Metadatum>;
  metadatumByChainspecAndName?: Maybe<Metadatum>;
  metadatumById?: Maybe<Metadatum>;
  /** Fetches an object given its globally unique `ID`. */
  node?: Maybe<Node>;
  /** The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Penalty` using its globally unique `ID`. */
  penalty?: Maybe<Penalty>;
  penaltyById?: Maybe<Penalty>;
  pendingDeposits: Array<Maybe<PendingDeposit>>;
  /** Reads a single `Pool` using its globally unique `ID`. */
  pool?: Maybe<Pool>;
  poolByBaseAssetAndQuoteAsset?: Maybe<Pool>;
  poolById?: Maybe<Pool>;
  /** Reads a single `PoolOrder` using its globally unique `ID`. */
  poolOrder?: Maybe<PoolOrder>;
  poolOrderById?: Maybe<PoolOrder>;
  /** Reads a single `PoolOrderEvent` using its globally unique `ID`. */
  poolOrderEvent?: Maybe<PoolOrderEvent>;
  poolOrderEventByEventId?: Maybe<PoolOrderEvent>;
  poolOrderEventById?: Maybe<PoolOrderEvent>;
  /** Reads a single `PoolSwap` using its globally unique `ID`. */
  poolSwap?: Maybe<PoolSwap>;
  poolSwapById?: Maybe<PoolSwap>;
  /**
   * Exposes the root query type nested one level down. This is helpful for Relay 1
   * which can only query top level fields if they are in a particular form.
   */
  query: Query;
  /** Reads a single `RegisteredRedemption` using its globally unique `ID`. */
  registeredRedemption?: Maybe<RegisteredRedemption>;
  registeredRedemptionByTxHashAndLogIndex?: Maybe<RegisteredRedemption>;
  /** Reads a single `RotationEvent` using its globally unique `ID`. */
  rotationEvent?: Maybe<RotationEvent>;
  rotationEventById?: Maybe<RotationEvent>;
  /** Reads a single `StateChainError` using its globally unique `ID`. */
  stateChainError?: Maybe<StateChainError>;
  stateChainErrorByChainspecAndPalletIndexAndErrorIndex?: Maybe<StateChainError>;
  stateChainErrorById?: Maybe<StateChainError>;
  /** Reads a single `Swap` using its globally unique `ID`. */
  swap?: Maybe<Swap>;
  swapById?: Maybe<Swap>;
  swapByNativeId?: Maybe<Swap>;
  /** Reads a single `SwapChannel` using its globally unique `ID`. */
  swapChannel?: Maybe<SwapChannel>;
  swapChannelById?: Maybe<SwapChannel>;
  swapChannelByIssuedBlockIdAndSourceChainAndChannelId?: Maybe<SwapChannel>;
  /** Reads a single `SwapFee` using its globally unique `ID`. */
  swapFee?: Maybe<SwapFee>;
  swapFeeById?: Maybe<SwapFee>;
  /** Reads a single `TokenPrice` using its globally unique `ID`. */
  tokenPrice?: Maybe<TokenPrice>;
  tokenPriceByChainIdAndAddress?: Maybe<TokenPrice>;
  /** Reads a single `Validator` using its globally unique `ID`. */
  validator?: Maybe<Validator>;
  validatorByAccountId?: Maybe<Validator>;
  validatorById?: Maybe<Validator>;
  validatorByIdHex?: Maybe<Validator>;
  validatorsByWalletAddress: Array<Validator>;
};


/** The root query type which gives access points into the data universe. */
export type Query_PrismaMigrationArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type Query_PrismaMigrationByIdArgs = {
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByIdHexArgs = {
  idHex: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByIdSs58Args = {
  idSs58: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountEpochBalanceChangeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountEpochBalanceChangeByEpochIdAndAccountIdArgs = {
  accountId: Scalars['Int']['input'];
  epochId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountEpochBalanceChangeByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountFundingEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountFundingEventByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAccountEpochBalanceChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountEpochBalanceChangeCondition>;
  filter?: InputMaybe<AccountEpochBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountEpochBalanceChangesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAccountFundingEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountFundingEventCondition>;
  filter?: InputMaybe<AccountFundingEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountFundingEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAccountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountCondition>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAuctionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuctionCondition>;
  filter?: InputMaybe<AuctionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuctionsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAuthorityHeartbeatsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAuthorityMembershipsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityMembershipCondition>;
  filter?: InputMaybe<AuthorityMembershipFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityMembershipsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBannersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BannerCondition>;
  filter?: InputMaybe<BannerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BannersOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBlocksArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BlockCondition>;
  filter?: InputMaybe<BlockFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlocksOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBroadcastsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BroadcastCondition>;
  filter?: InputMaybe<BroadcastFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BroadcastsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBrokerAccountEarnedFeesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerAccountEarnedFeeCondition>;
  filter?: InputMaybe<BrokerAccountEarnedFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerAccountEarnedFeesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBrokerAccountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerAccountCondition>;
  filter?: InputMaybe<BrokerAccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerAccountsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBrokerFeeAndWithdrawalsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerFeeAndWithdrawalCondition>;
  filter?: InputMaybe<BrokerFeeAndWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerFeeAndWithdrawalsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBrokerWithdrawalsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerWithdrawalCondition>;
  filter?: InputMaybe<BrokerWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokerWithdrawalsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBrokersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BrokerCondition>;
  filter?: InputMaybe<BrokerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BrokersOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllCfeVersionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<CfeVersionCondition>;
  filter?: InputMaybe<CfeVersionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CfeVersionsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllChainTrackingsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ChainTrackingCondition>;
  filter?: InputMaybe<ChainTrackingFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ChainTrackingsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllCirculationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<CirculationCondition>;
  filter?: InputMaybe<CirculationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CirculationsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllCollectedFeesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<CollectedFeeCondition>;
  filter?: InputMaybe<CollectedFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CollectedFeesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllDepositBalancesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositBalanceCondition>;
  filter?: InputMaybe<DepositBalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositBalancesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllEnvironmentAddressesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EnvironmentAddressCondition>;
  filter?: InputMaybe<EnvironmentAddressFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EnvironmentAddressesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllEpochesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EpochCondition>;
  filter?: InputMaybe<EpochFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EpochesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EventCondition>;
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllExecutedRedemptionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ExecutedRedemptionCondition>;
  filter?: InputMaybe<ExecutedRedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExecutedRedemptionsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllExtrinsicsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ExtrinsicCondition>;
  filter?: InputMaybe<ExtrinsicFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllFailedSwapsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<FailedSwapCondition>;
  filter?: InputMaybe<FailedSwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FailedSwapsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllFlipSuppliesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<FlipSupplyCondition>;
  filter?: InputMaybe<FlipSupplyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FlipSuppliesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllFundingEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<FundingEventCondition>;
  filter?: InputMaybe<FundingEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FundingEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllIgnoredDepositsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<IgnoredDepositCondition>;
  filter?: InputMaybe<IgnoredDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IgnoredDepositsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityBalanceEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityBalanceEventCondition>;
  filter?: InputMaybe<LiquidityBalanceEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityBalanceEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityDepositChannelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositChannelCondition>;
  filter?: InputMaybe<LiquidityDepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositChannelsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityDepositsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityDepositCondition>;
  filter?: InputMaybe<LiquidityDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityDepositsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityProvidersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityProviderCondition>;
  filter?: InputMaybe<LiquidityProviderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityProvidersOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityWithdrawalsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityWithdrawalCondition>;
  filter?: InputMaybe<LiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityWithdrawalsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLpAccountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LpAccountCondition>;
  filter?: InputMaybe<LpAccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LpAccountsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllMetadataArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<MetadatumCondition>;
  filter?: InputMaybe<MetadatumFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MetadataOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPenaltiesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PenaltyCondition>;
  filter?: InputMaybe<PenaltyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PenaltiesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPoolOrderEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderEventCondition>;
  filter?: InputMaybe<PoolOrderEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrderEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPoolOrdersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPoolSwapsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolSwapCondition>;
  filter?: InputMaybe<PoolSwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolSwapsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPoolsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolCondition>;
  filter?: InputMaybe<PoolFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPrismaMigrationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<_PrismaMigrationCondition>;
  filter?: InputMaybe<_PrismaMigrationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<_PrismaMigrationsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllRegisteredRedemptionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RegisteredRedemptionCondition>;
  filter?: InputMaybe<RegisteredRedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RegisteredRedemptionsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllRotationEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RotationEventCondition>;
  filter?: InputMaybe<RotationEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RotationEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllStateChainErrorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<StateChainErrorCondition>;
  filter?: InputMaybe<StateChainErrorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<StateChainErrorsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllSwapChannelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapChannelCondition>;
  filter?: InputMaybe<SwapChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapChannelsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllSwapFeesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapFeeCondition>;
  filter?: InputMaybe<SwapFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapFeesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllSwapsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllTokenPricesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TokenPriceCondition>;
  filter?: InputMaybe<TokenPriceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TokenPricesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllValidatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<ValidatorCondition>;
  filter?: InputMaybe<ValidatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAuctionArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuctionByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityHeartbeatArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityHeartbeatByExtrinsicIdArgs = {
  extrinsicId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityHeartbeatByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityMembershipArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityMembershipByEpochIdAndValidatorIdArgs = {
  epochId: Scalars['Int']['input'];
  validatorId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAuthorityMembershipByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBannerArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBannerByAppArgs = {
  app: App;
};


/** The root query type which gives access points into the data universe. */
export type QueryBlockArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlockByHashArgs = {
  hash: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlockByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBroadcastArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBroadcastByDestinationChainAndNativeIdArgs = {
  destinationChain: ChainflipChain;
  nativeId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBroadcastByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerAccountArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerAccountByIdSs58Args = {
  idSs58: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerAccountEarnedFeeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerAccountEarnedFeeByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerByAccountIdArgs = {
  accountId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerFeeAndWithdrawalByEventIdArgs = {
  eventId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerWithdrawalArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBrokerWithdrawalByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCfeVersionArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCfeVersionByIdArgs = {
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryChainTrackingArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryChainTrackingByChainArgs = {
  chain: ChainflipChain;
};


/** The root query type which gives access points into the data universe. */
export type QueryChainTrackingByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCirculationArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCirculationByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCollectedFeeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryCollectedFeeByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEnvironmentAddressArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEnvironmentAddressByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEpochArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEpochByEndBlockIdArgs = {
  endBlockId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEpochByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEpochByStartBlockIdArgs = {
  startBlockId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventByBlockIdAndIndexInBlockArgs = {
  blockId: Scalars['Int']['input'];
  indexInBlock: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryExecutedRedemptionArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryExecutedRedemptionByTxHashAndLogIndexArgs = {
  logIndex: Scalars['BigInt']['input'];
  txHash: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryExtrinsicArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryExtrinsicByBlockIdAndIndexInBlockArgs = {
  blockId: Scalars['Int']['input'];
  indexInBlock: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryExtrinsicByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFailedSwapArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFailedSwapByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFlipSupplyArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFlipSupplyByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFundingEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryFundingEventByTxHashAndLogIndexArgs = {
  logIndex: Scalars['BigInt']['input'];
  txHash: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryGetTokenPricesArgs = {
  input: Array<PriceQueryInput>;
};


/** The root query type which gives access points into the data universe. */
export type QueryIgnoredDepositArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryIgnoredDepositByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityBalanceEventByEventIdArgs = {
  eventId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityDepositArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityDepositByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityDepositChannelArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityDepositChannelByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityDepositChannelByIssuedBlockIdAndChainAndChannelIdArgs = {
  chain: ChainflipChain;
  channelId: Scalars['BigInt']['input'];
  issuedBlockId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityProviderArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityProviderByAccountIdArgs = {
  accountId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityProviderByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityWithdrawalArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityWithdrawalByEgressIdAndChainArgs = {
  chain: ChainflipChain;
  egressId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityWithdrawalByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLpAccountArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLpAccountByIdSs58Args = {
  idSs58: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryMarketDataArgs = {
  asset: ChainflipAsset;
  numberOfDays?: InputMaybe<Scalars['Int']['input']>;
};


/** The root query type which gives access points into the data universe. */
export type QueryMetadatumArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryMetadatumByChainspecAndNameArgs = {
  chainspec: Scalars['String']['input'];
  name: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryMetadatumByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryNodeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPenaltyArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPenaltyByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPendingDepositsArgs = {
  input: PendingDepositsInput;
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolByBaseAssetAndQuoteAssetArgs = {
  baseAsset: ChainflipAsset;
  quoteAsset: ChainflipAsset;
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderEventByEventIdArgs = {
  eventId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderEventByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolSwapArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolSwapByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRegisteredRedemptionArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRegisteredRedemptionByTxHashAndLogIndexArgs = {
  logIndex: Scalars['BigInt']['input'];
  txHash: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRotationEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRotationEventByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryStateChainErrorArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryStateChainErrorByChainspecAndPalletIndexAndErrorIndexArgs = {
  chainspec: Scalars['String']['input'];
  errorIndex: Scalars['Int']['input'];
  palletIndex: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryStateChainErrorByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapByNativeIdArgs = {
  nativeId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapChannelArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapChannelByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapChannelByIssuedBlockIdAndSourceChainAndChannelIdArgs = {
  channelId: Scalars['BigInt']['input'];
  issuedBlockId: Scalars['Int']['input'];
  sourceChain: ChainflipChain;
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapFeeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySwapFeeByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTokenPriceArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTokenPriceByChainIdAndAddressArgs = {
  address: Scalars['String']['input'];
  chainId: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryValidatorArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryValidatorByAccountIdArgs = {
  accountId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryValidatorByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryValidatorByIdHexArgs = {
  idHex: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryValidatorsByWalletAddressArgs = {
  input: ValidatorsByWalletAddressInput;
};

export type RegisteredRedemption = Node & {
  __typename?: 'RegisteredRedemption';
  amount: Scalars['BigFloat']['output'];
  block: Scalars['String']['output'];
  blockTimestamp: Scalars['String']['output'];
  expiryTime: Scalars['String']['output'];
  logIndex: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  redeemAddress: Scalars['String']['output'];
  startTime: Scalars['String']['output'];
  txHash: Scalars['String']['output'];
  txId: Scalars['String']['output'];
  validatorIdHex: Scalars['String']['output'];
};

export type RegisteredRedemptionAggregates = {
  __typename?: 'RegisteredRedemptionAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<RegisteredRedemptionAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<RegisteredRedemptionDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<RegisteredRedemptionMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<RegisteredRedemptionMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<RegisteredRedemptionStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<RegisteredRedemptionStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<RegisteredRedemptionSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<RegisteredRedemptionVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<RegisteredRedemptionVarianceSampleAggregates>;
};

export type RegisteredRedemptionAverageAggregates = {
  __typename?: 'RegisteredRedemptionAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `RegisteredRedemption` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type RegisteredRedemptionCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `expiryTime` field. */
  expiryTime?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `logIndex` field. */
  logIndex?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `redeemAddress` field. */
  redeemAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `startTime` field. */
  startTime?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `txHash` field. */
  txHash?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `txId` field. */
  txId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<Scalars['String']['input']>;
};

export type RegisteredRedemptionDistinctCountAggregates = {
  __typename?: 'RegisteredRedemptionDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockTimestamp across the matching connection */
  blockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of expiryTime across the matching connection */
  expiryTime?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of redeemAddress across the matching connection */
  redeemAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startTime across the matching connection */
  startTime?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txHash across the matching connection */
  txHash?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of txId across the matching connection */
  txId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorIdHex across the matching connection */
  validatorIdHex?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `RegisteredRedemption` object types. All fields are combined with a logical ‘and.’ */
export type RegisteredRedemptionFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<RegisteredRedemptionFilter>>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<StringFilter>;
  /** Filter by the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<StringFilter>;
  /** Filter by the object’s `expiryTime` field. */
  expiryTime?: InputMaybe<StringFilter>;
  /** Filter by the object’s `logIndex` field. */
  logIndex?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<RegisteredRedemptionFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<RegisteredRedemptionFilter>>;
  /** Filter by the object’s `redeemAddress` field. */
  redeemAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `startTime` field. */
  startTime?: InputMaybe<StringFilter>;
  /** Filter by the object’s `txHash` field. */
  txHash?: InputMaybe<StringFilter>;
  /** Filter by the object’s `txId` field. */
  txId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `validatorIdHex` field. */
  validatorIdHex?: InputMaybe<StringFilter>;
};

/** Grouping methods for `RegisteredRedemption` for usage during aggregation. */
export type RegisteredRedemptionGroupBy =
  | 'AMOUNT'
  | 'BLOCK'
  | 'BLOCK_TIMESTAMP'
  | 'EXPIRY_TIME'
  | 'LOG_INDEX'
  | 'REDEEM_ADDRESS'
  | 'START_TIME'
  | 'TX_HASH'
  | 'TX_ID'
  | 'VALIDATOR_ID_HEX';

export type RegisteredRedemptionHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `RegisteredRedemption` aggregates. */
export type RegisteredRedemptionHavingInput = {
  AND?: InputMaybe<Array<RegisteredRedemptionHavingInput>>;
  OR?: InputMaybe<Array<RegisteredRedemptionHavingInput>>;
  average?: InputMaybe<RegisteredRedemptionHavingAverageInput>;
  distinctCount?: InputMaybe<RegisteredRedemptionHavingDistinctCountInput>;
  max?: InputMaybe<RegisteredRedemptionHavingMaxInput>;
  min?: InputMaybe<RegisteredRedemptionHavingMinInput>;
  stddevPopulation?: InputMaybe<RegisteredRedemptionHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<RegisteredRedemptionHavingStddevSampleInput>;
  sum?: InputMaybe<RegisteredRedemptionHavingSumInput>;
  variancePopulation?: InputMaybe<RegisteredRedemptionHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<RegisteredRedemptionHavingVarianceSampleInput>;
};

export type RegisteredRedemptionHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  logIndex?: InputMaybe<HavingBigintFilter>;
};

export type RegisteredRedemptionMaxAggregates = {
  __typename?: 'RegisteredRedemptionMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type RegisteredRedemptionMinAggregates = {
  __typename?: 'RegisteredRedemptionMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigInt']['output']>;
};

export type RegisteredRedemptionStddevPopulationAggregates = {
  __typename?: 'RegisteredRedemptionStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type RegisteredRedemptionStddevSampleAggregates = {
  __typename?: 'RegisteredRedemptionStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type RegisteredRedemptionSumAggregates = {
  __typename?: 'RegisteredRedemptionSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of logIndex across the matching connection */
  logIndex: Scalars['BigFloat']['output'];
};

export type RegisteredRedemptionVariancePopulationAggregates = {
  __typename?: 'RegisteredRedemptionVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type RegisteredRedemptionVarianceSampleAggregates = {
  __typename?: 'RegisteredRedemptionVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of logIndex across the matching connection */
  logIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `RegisteredRedemption` values. */
export type RegisteredRedemptionsConnection = {
  __typename?: 'RegisteredRedemptionsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<RegisteredRedemptionAggregates>;
  /** A list of edges which contains the `RegisteredRedemption` and cursor to aid in pagination. */
  edges: Array<RegisteredRedemptionsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<RegisteredRedemptionAggregates>>;
  /** A list of `RegisteredRedemption` objects. */
  nodes: Array<RegisteredRedemption>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `RegisteredRedemption` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `RegisteredRedemption` values. */
export type RegisteredRedemptionsConnectionGroupedAggregatesArgs = {
  groupBy: Array<RegisteredRedemptionGroupBy>;
  having?: InputMaybe<RegisteredRedemptionHavingInput>;
};

/** A `RegisteredRedemption` edge in the connection. */
export type RegisteredRedemptionsEdge = {
  __typename?: 'RegisteredRedemptionsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `RegisteredRedemption` at the end of the edge. */
  node: RegisteredRedemption;
};

/** Methods to use when ordering `RegisteredRedemption`. */
export type RegisteredRedemptionsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BLOCK_TIMESTAMP_ASC'
  | 'BLOCK_TIMESTAMP_DESC'
  | 'EXPIRY_TIME_ASC'
  | 'EXPIRY_TIME_DESC'
  | 'LOG_INDEX_ASC'
  | 'LOG_INDEX_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'REDEEM_ADDRESS_ASC'
  | 'REDEEM_ADDRESS_DESC'
  | 'START_TIME_ASC'
  | 'START_TIME_DESC'
  | 'TX_HASH_ASC'
  | 'TX_HASH_DESC'
  | 'TX_ID_ASC'
  | 'TX_ID_DESC'
  | 'VALIDATOR_ID_HEX_ASC'
  | 'VALIDATOR_ID_HEX_DESC';

export type RotationEvent = Node & {
  __typename?: 'RotationEvent';
  /** Reads a single `Epoch` that is related to this `RotationEvent`. */
  epochByEpochId: Epoch;
  epochId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `RotationEvent`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  type: RotationEventType;
};

export type RotationEventAggregates = {
  __typename?: 'RotationEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<RotationEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<RotationEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<RotationEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<RotationEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<RotationEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<RotationEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<RotationEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<RotationEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<RotationEventVarianceSampleAggregates>;
};

export type RotationEventAverageAggregates = {
  __typename?: 'RotationEventAverageAggregates';
  /** Mean average of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `RotationEvent` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type RotationEventCondition = {
  /** Checks for equality with the object’s `epochId` field. */
  epochId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<RotationEventType>;
};

export type RotationEventDistinctCountAggregates = {
  __typename?: 'RotationEventDistinctCountAggregates';
  /** Distinct count of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `RotationEvent` object types. All fields are combined with a logical ‘and.’ */
export type RotationEventFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<RotationEventFilter>>;
  /** Filter by the object’s `epochId` field. */
  epochId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<RotationEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<RotationEventFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<RotationEventTypeFilter>;
};

/** Grouping methods for `RotationEvent` for usage during aggregation. */
export type RotationEventGroupBy =
  | 'EPOCH_ID'
  | 'EVENT_ID'
  | 'TYPE';

export type RotationEventHavingAverageInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingDistinctCountInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `RotationEvent` aggregates. */
export type RotationEventHavingInput = {
  AND?: InputMaybe<Array<RotationEventHavingInput>>;
  OR?: InputMaybe<Array<RotationEventHavingInput>>;
  average?: InputMaybe<RotationEventHavingAverageInput>;
  distinctCount?: InputMaybe<RotationEventHavingDistinctCountInput>;
  max?: InputMaybe<RotationEventHavingMaxInput>;
  min?: InputMaybe<RotationEventHavingMinInput>;
  stddevPopulation?: InputMaybe<RotationEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<RotationEventHavingStddevSampleInput>;
  sum?: InputMaybe<RotationEventHavingSumInput>;
  variancePopulation?: InputMaybe<RotationEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<RotationEventHavingVarianceSampleInput>;
};

export type RotationEventHavingMaxInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingMinInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingStddevPopulationInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingStddevSampleInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingSumInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingVariancePopulationInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventHavingVarianceSampleInput = {
  epochId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type RotationEventMaxAggregates = {
  __typename?: 'RotationEventMaxAggregates';
  /** Maximum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type RotationEventMinAggregates = {
  __typename?: 'RotationEventMinAggregates';
  /** Minimum of epochId across the matching connection */
  epochId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type RotationEventStddevPopulationAggregates = {
  __typename?: 'RotationEventStddevPopulationAggregates';
  /** Population standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type RotationEventStddevSampleAggregates = {
  __typename?: 'RotationEventStddevSampleAggregates';
  /** Sample standard deviation of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type RotationEventSumAggregates = {
  __typename?: 'RotationEventSumAggregates';
  /** Sum of epochId across the matching connection */
  epochId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type RotationEventType =
  | 'ACTIVATING_KEYS_ROTATION_PHASE'
  | 'AUCTION_COMPLETED'
  | 'BITCOIN_KEYGEN_REQUEST'
  | 'BITCOIN_KEYGEN_VERIFICATION_SUCCESS'
  | 'BITCOIN_KEY_HANDOVER_REQUEST'
  | 'BITCOIN_KEY_HANDOVER_VERIFICATION_SUCCESS'
  | 'BITCOIN_KEY_ROTATION_COMPLETED'
  | 'BITCOIN_VAULT_ACTIVATION_COMPLETED'
  | 'BITCOIN_VAULT_ROTATION_COMPLETED'
  | 'ETHEREUM_KEYGEN_REQUEST'
  | 'ETHEREUM_KEYGEN_VERIFICATION_SUCCESS'
  | 'ETHEREUM_KEY_ROTATION_COMPLETED'
  | 'ETHEREUM_VAULT_ACTIVATION_COMPLETED'
  | 'ETHEREUM_VAULT_ROTATION_COMPLETED'
  | 'NEW_EPOCH'
  | 'NEW_KEYS_ACTIVATED_ROTATION_PHASE'
  | 'POLKADOT_KEYGEN_REQUEST'
  | 'POLKADOT_KEYGEN_VERIFICATION_SUCCESS'
  | 'POLKADOT_KEY_ROTATION_COMPLETED'
  | 'POLKADOT_VAULT_ACTIVATION_COMPLETED'
  | 'POLKADOT_VAULT_ROTATION_COMPLETED';

/** A filter to be used against RotationEventType fields. All fields are combined with a logical ‘and.’ */
export type RotationEventTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<RotationEventType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<RotationEventType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<RotationEventType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<RotationEventType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<RotationEventType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<RotationEventType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<RotationEventType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<RotationEventType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<RotationEventType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<RotationEventType>>;
};

export type RotationEventVariancePopulationAggregates = {
  __typename?: 'RotationEventVariancePopulationAggregates';
  /** Population variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type RotationEventVarianceSampleAggregates = {
  __typename?: 'RotationEventVarianceSampleAggregates';
  /** Sample variance of epochId across the matching connection */
  epochId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `RotationEvent` values. */
export type RotationEventsConnection = {
  __typename?: 'RotationEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<RotationEventAggregates>;
  /** A list of edges which contains the `RotationEvent` and cursor to aid in pagination. */
  edges: Array<RotationEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<RotationEventAggregates>>;
  /** A list of `RotationEvent` objects. */
  nodes: Array<RotationEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `RotationEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `RotationEvent` values. */
export type RotationEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<RotationEventGroupBy>;
  having?: InputMaybe<RotationEventHavingInput>;
};

/** A `RotationEvent` edge in the connection. */
export type RotationEventsEdge = {
  __typename?: 'RotationEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `RotationEvent` at the end of the edge. */
  node: RotationEvent;
};

/** Methods to use when ordering `RotationEvent`. */
export type RotationEventsOrderBy =
  | 'EPOCH_ID_ASC'
  | 'EPOCH_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type StateChainError = Node & {
  __typename?: 'StateChainError';
  chainspec: Scalars['String']['output'];
  docs: Scalars['String']['output'];
  errorIndex: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  palletIndex: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByStateChainErrorId: SwapsConnection;
};


export type StateChainErrorSwapsByStateChainErrorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};

export type StateChainErrorAggregates = {
  __typename?: 'StateChainErrorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<StateChainErrorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<StateChainErrorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<StateChainErrorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<StateChainErrorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<StateChainErrorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<StateChainErrorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<StateChainErrorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<StateChainErrorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<StateChainErrorVarianceSampleAggregates>;
};

export type StateChainErrorAverageAggregates = {
  __typename?: 'StateChainErrorAverageAggregates';
  /** Mean average of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `StateChainError` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type StateChainErrorCondition = {
  /** Checks for equality with the object’s `chainspec` field. */
  chainspec?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `docs` field. */
  docs?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `errorIndex` field. */
  errorIndex?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `name` field. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `palletIndex` field. */
  palletIndex?: InputMaybe<Scalars['Int']['input']>;
};

export type StateChainErrorDistinctCountAggregates = {
  __typename?: 'StateChainErrorDistinctCountAggregates';
  /** Distinct count of chainspec across the matching connection */
  chainspec?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of docs across the matching connection */
  docs?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of name across the matching connection */
  name?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `StateChainError` object types. All fields are combined with a logical ‘and.’ */
export type StateChainErrorFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<StateChainErrorFilter>>;
  /** Filter by the object’s `chainspec` field. */
  chainspec?: InputMaybe<StringFilter>;
  /** Filter by the object’s `docs` field. */
  docs?: InputMaybe<StringFilter>;
  /** Filter by the object’s `errorIndex` field. */
  errorIndex?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `name` field. */
  name?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<StateChainErrorFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<StateChainErrorFilter>>;
  /** Filter by the object’s `palletIndex` field. */
  palletIndex?: InputMaybe<IntFilter>;
};

/** Grouping methods for `StateChainError` for usage during aggregation. */
export type StateChainErrorGroupBy =
  | 'CHAINSPEC'
  | 'DOCS'
  | 'ERROR_INDEX'
  | 'NAME'
  | 'PALLET_INDEX';

export type StateChainErrorHavingAverageInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingDistinctCountInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `StateChainError` aggregates. */
export type StateChainErrorHavingInput = {
  AND?: InputMaybe<Array<StateChainErrorHavingInput>>;
  OR?: InputMaybe<Array<StateChainErrorHavingInput>>;
  average?: InputMaybe<StateChainErrorHavingAverageInput>;
  distinctCount?: InputMaybe<StateChainErrorHavingDistinctCountInput>;
  max?: InputMaybe<StateChainErrorHavingMaxInput>;
  min?: InputMaybe<StateChainErrorHavingMinInput>;
  stddevPopulation?: InputMaybe<StateChainErrorHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<StateChainErrorHavingStddevSampleInput>;
  sum?: InputMaybe<StateChainErrorHavingSumInput>;
  variancePopulation?: InputMaybe<StateChainErrorHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<StateChainErrorHavingVarianceSampleInput>;
};

export type StateChainErrorHavingMaxInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingMinInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingStddevPopulationInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingStddevSampleInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingSumInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingVariancePopulationInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorHavingVarianceSampleInput = {
  errorIndex?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  palletIndex?: InputMaybe<HavingIntFilter>;
};

export type StateChainErrorMaxAggregates = {
  __typename?: 'StateChainErrorMaxAggregates';
  /** Maximum of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['Int']['output']>;
};

export type StateChainErrorMinAggregates = {
  __typename?: 'StateChainErrorMinAggregates';
  /** Minimum of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['Int']['output']>;
};

export type StateChainErrorStddevPopulationAggregates = {
  __typename?: 'StateChainErrorStddevPopulationAggregates';
  /** Population standard deviation of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type StateChainErrorStddevSampleAggregates = {
  __typename?: 'StateChainErrorStddevSampleAggregates';
  /** Sample standard deviation of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type StateChainErrorSumAggregates = {
  __typename?: 'StateChainErrorSumAggregates';
  /** Sum of errorIndex across the matching connection */
  errorIndex: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of palletIndex across the matching connection */
  palletIndex: Scalars['BigInt']['output'];
};

export type StateChainErrorVariancePopulationAggregates = {
  __typename?: 'StateChainErrorVariancePopulationAggregates';
  /** Population variance of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigFloat']['output']>;
};

export type StateChainErrorVarianceSampleAggregates = {
  __typename?: 'StateChainErrorVarianceSampleAggregates';
  /** Sample variance of errorIndex across the matching connection */
  errorIndex?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of palletIndex across the matching connection */
  palletIndex?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `StateChainError` values. */
export type StateChainErrorsConnection = {
  __typename?: 'StateChainErrorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<StateChainErrorAggregates>;
  /** A list of edges which contains the `StateChainError` and cursor to aid in pagination. */
  edges: Array<StateChainErrorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<StateChainErrorAggregates>>;
  /** A list of `StateChainError` objects. */
  nodes: Array<StateChainError>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `StateChainError` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `StateChainError` values. */
export type StateChainErrorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<StateChainErrorGroupBy>;
  having?: InputMaybe<StateChainErrorHavingInput>;
};

/** A `StateChainError` edge in the connection. */
export type StateChainErrorsEdge = {
  __typename?: 'StateChainErrorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `StateChainError` at the end of the edge. */
  node: StateChainError;
};

/** Methods to use when ordering `StateChainError`. */
export type StateChainErrorsOrderBy =
  | 'CHAINSPEC_ASC'
  | 'CHAINSPEC_DESC'
  | 'DOCS_ASC'
  | 'DOCS_DESC'
  | 'ERROR_INDEX_ASC'
  | 'ERROR_INDEX_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NAME_ASC'
  | 'NAME_DESC'
  | 'NATURAL'
  | 'PALLET_INDEX_ASC'
  | 'PALLET_INDEX_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_COUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_COUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_STATE_CHAIN_ERROR_ID_VARIANCE_SAMPLE_TYPE_DESC';

/** A filter to be used against String fields. All fields are combined with a logical ‘and.’ */
export type StringFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value, treating null like an ordinary value (case-insensitive). */
  distinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-sensitive). */
  endsWith?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-insensitive). */
  endsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value (case-insensitive). */
  equalToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value (case-insensitive). */
  greaterThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value (case-insensitive). */
  greaterThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Included in the specified list (case-insensitive). */
  inInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains the specified string (case-sensitive). */
  includes?: InputMaybe<Scalars['String']['input']>;
  /** Contains the specified string (case-insensitive). */
  includesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['String']['input']>;
  /** Less than the specified value (case-insensitive). */
  lessThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value (case-insensitive). */
  lessThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  like?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  likeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value (case-insensitive). */
  notDistinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-sensitive). */
  notEndsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-insensitive). */
  notEndsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value (case-insensitive). */
  notEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Not included in the specified list (case-insensitive). */
  notInInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Does not contain the specified string (case-sensitive). */
  notIncludes?: InputMaybe<Scalars['String']['input']>;
  /** Does not contain the specified string (case-insensitive). */
  notIncludesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLike?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLikeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-sensitive). */
  notStartsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-insensitive). */
  notStartsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-sensitive). */
  startsWith?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-insensitive). */
  startsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
};

export type Swap = Node & {
  __typename?: 'Swap';
  /** Reads a single `Broadcast` that is related to this `Swap`. */
  broadcastByBroadcastId?: Maybe<Broadcast>;
  broadcastId?: Maybe<Scalars['Int']['output']>;
  ccmDepositReceivedEventId?: Maybe<Scalars['BigInt']['output']>;
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  ccmMessage?: Maybe<Scalars['String']['output']>;
  depositAmount: Scalars['BigFloat']['output'];
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  depositValueUsd: Scalars['BigFloat']['output'];
  destinationAddress: Scalars['String']['output'];
  destinationAsset: ChainflipAsset;
  destinationChain: ChainflipChain;
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  egressCounter?: Maybe<Scalars['BigInt']['output']>;
  egressIgnoredEventId?: Maybe<Scalars['BigInt']['output']>;
  egressScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `Event` that is related to this `Swap`. */
  eventByCcmDepositReceivedEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Swap`. */
  eventByEgressIgnoredEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Swap`. */
  eventByEgressScheduledEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Swap`. */
  eventBySwapExecutedEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Swap`. */
  eventBySwapScheduledEventId: Event;
  id: Scalars['Int']['output'];
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  nativeId: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  sourceAsset: ChainflipAsset;
  sourceChain: ChainflipChain;
  /** Reads a single `StateChainError` that is related to this `Swap`. */
  stateChainErrorByStateChainErrorId?: Maybe<StateChainError>;
  stateChainErrorId?: Maybe<Scalars['Int']['output']>;
  /** Reads a single `SwapChannel` that is related to this `Swap`. */
  swapChannelByDepositChannelId?: Maybe<SwapChannel>;
  swapExecutedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads and enables pagination through a set of `SwapFee`. */
  swapFeesBySwapId: SwapFeesConnection;
  swapInputAmount: Scalars['BigFloat']['output'];
  swapInputValueUsd: Scalars['BigFloat']['output'];
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  swapScheduledBlockTimestamp: Scalars['Datetime']['output'];
  swapScheduledEventId: Scalars['BigInt']['output'];
  type: SwapType;
};


export type SwapSwapFeesBySwapIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapFeeCondition>;
  filter?: InputMaybe<SwapFeeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapFeesOrderBy>>;
};

export type SwapAggregates = {
  __typename?: 'SwapAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<SwapAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<SwapDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<SwapMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<SwapMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<SwapStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<SwapStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<SwapSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<SwapVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<SwapVarianceSampleAggregates>;
};

export type SwapAverageAggregates = {
  __typename?: 'SwapAverageAggregates';
  /** Mean average of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapChannel = Node & {
  __typename?: 'SwapChannel';
  /** Reads a single `Block` that is related to this `SwapChannel`. */
  blockByIssuedBlockId: Block;
  /** Reads a single `Broker` that is related to this `SwapChannel`. */
  brokerByBrokerId: Broker;
  brokerCommissionRate: Scalars['Int']['output'];
  brokerId: Scalars['Int']['output'];
  channelId: Scalars['BigInt']['output'];
  depositAddress: Scalars['String']['output'];
  destinationAddress: Scalars['String']['output'];
  destinationAsset: ChainflipAsset;
  destinationChain: ChainflipChain;
  /** Reads a single `Event` that is related to this `SwapChannel`. */
  eventByExpiryEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `SwapChannel`. */
  eventByIssuedEventId: Event;
  expiryBlockId?: Maybe<Scalars['Int']['output']>;
  expiryEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads and enables pagination through a set of `FailedSwap`. */
  failedSwapsByDepositChannelId: FailedSwapsConnection;
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `IgnoredDeposit`. */
  ignoredDepositsBySwapDepositChannelId: IgnoredDepositsConnection;
  isExpired: Scalars['Boolean']['output'];
  issuedBlockId: Scalars['Int']['output'];
  issuedEventId: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  sourceAsset: ChainflipAsset;
  sourceChain: ChainflipChain;
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Reads and enables pagination through a set of `Swap`. */
  swapsByDepositChannelId: SwapsConnection;
};


export type SwapChannelFailedSwapsByDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<FailedSwapCondition>;
  filter?: InputMaybe<FailedSwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FailedSwapsOrderBy>>;
};


export type SwapChannelIgnoredDepositsBySwapDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<IgnoredDepositCondition>;
  filter?: InputMaybe<IgnoredDepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<IgnoredDepositsOrderBy>>;
};


export type SwapChannelSwapsByDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<SwapCondition>;
  filter?: InputMaybe<SwapFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SwapsOrderBy>>;
};

export type SwapChannelAggregates = {
  __typename?: 'SwapChannelAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<SwapChannelAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<SwapChannelDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<SwapChannelMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<SwapChannelMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<SwapChannelStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<SwapChannelStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<SwapChannelSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<SwapChannelVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<SwapChannelVarianceSampleAggregates>;
};

export type SwapChannelAverageAggregates = {
  __typename?: 'SwapChannelAverageAggregates';
  /** Mean average of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `SwapChannel` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type SwapChannelCondition = {
  /** Checks for equality with the object’s `brokerCommissionRate` field. */
  brokerCommissionRate?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `brokerId` field. */
  brokerId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `channelId` field. */
  channelId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `depositAddress` field. */
  depositAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `destinationAsset` field. */
  destinationAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `expiryBlockId` field. */
  expiryBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `expiryEventId` field. */
  expiryEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `isExpired` field. */
  isExpired?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `issuedEventId` field. */
  issuedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `sourceChainExpiryBlock` field. */
  sourceChainExpiryBlock?: InputMaybe<Scalars['BigInt']['input']>;
};

export type SwapChannelDistinctCountAggregates = {
  __typename?: 'SwapChannelDistinctCountAggregates';
  /** Distinct count of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAddress across the matching connection */
  depositAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAddress across the matching connection */
  destinationAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAsset across the matching connection */
  destinationAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationChain across the matching connection */
  destinationChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isExpired across the matching connection */
  isExpired?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceAsset across the matching connection */
  sourceAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceChain across the matching connection */
  sourceChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `SwapChannel` object types. All fields are combined with a logical ‘and.’ */
export type SwapChannelFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<SwapChannelFilter>>;
  /** Filter by the object’s `brokerCommissionRate` field. */
  brokerCommissionRate?: InputMaybe<IntFilter>;
  /** Filter by the object’s `brokerId` field. */
  brokerId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `channelId` field. */
  channelId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `depositAddress` field. */
  depositAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `destinationAsset` field. */
  destinationAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `expiryBlockId` field. */
  expiryBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `expiryEventId` field. */
  expiryEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `isExpired` field. */
  isExpired?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `issuedEventId` field. */
  issuedEventId?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<SwapChannelFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<SwapChannelFilter>>;
  /** Filter by the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `sourceChainExpiryBlock` field. */
  sourceChainExpiryBlock?: InputMaybe<BigIntFilter>;
};

/** Grouping methods for `SwapChannel` for usage during aggregation. */
export type SwapChannelGroupBy =
  | 'BROKER_COMMISSION_RATE'
  | 'BROKER_ID'
  | 'CHANNEL_ID'
  | 'DEPOSIT_ADDRESS'
  | 'DESTINATION_ADDRESS'
  | 'DESTINATION_ASSET'
  | 'DESTINATION_CHAIN'
  | 'EXPIRY_BLOCK_ID'
  | 'EXPIRY_EVENT_ID'
  | 'ISSUED_BLOCK_ID'
  | 'ISSUED_EVENT_ID'
  | 'IS_EXPIRED'
  | 'SOURCE_ASSET'
  | 'SOURCE_CHAIN'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK';

export type SwapChannelHavingAverageInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingDistinctCountInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `SwapChannel` aggregates. */
export type SwapChannelHavingInput = {
  AND?: InputMaybe<Array<SwapChannelHavingInput>>;
  OR?: InputMaybe<Array<SwapChannelHavingInput>>;
  average?: InputMaybe<SwapChannelHavingAverageInput>;
  distinctCount?: InputMaybe<SwapChannelHavingDistinctCountInput>;
  max?: InputMaybe<SwapChannelHavingMaxInput>;
  min?: InputMaybe<SwapChannelHavingMinInput>;
  stddevPopulation?: InputMaybe<SwapChannelHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<SwapChannelHavingStddevSampleInput>;
  sum?: InputMaybe<SwapChannelHavingSumInput>;
  variancePopulation?: InputMaybe<SwapChannelHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<SwapChannelHavingVarianceSampleInput>;
};

export type SwapChannelHavingMaxInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingMinInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingStddevPopulationInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingStddevSampleInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingSumInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingVariancePopulationInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelHavingVarianceSampleInput = {
  brokerCommissionRate?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  expiryBlockId?: InputMaybe<HavingIntFilter>;
  expiryEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  issuedEventId?: InputMaybe<HavingBigintFilter>;
  sourceChainExpiryBlock?: InputMaybe<HavingBigintFilter>;
};

export type SwapChannelMaxAggregates = {
  __typename?: 'SwapChannelMaxAggregates';
  /** Maximum of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['Int']['output']>;
  /** Maximum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

export type SwapChannelMinAggregates = {
  __typename?: 'SwapChannelMinAggregates';
  /** Minimum of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['Int']['output']>;
  /** Minimum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigInt']['output']>;
};

export type SwapChannelStddevPopulationAggregates = {
  __typename?: 'SwapChannelStddevPopulationAggregates';
  /** Population standard deviation of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapChannelStddevSampleAggregates = {
  __typename?: 'SwapChannelStddevSampleAggregates';
  /** Sample standard deviation of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapChannelSumAggregates = {
  __typename?: 'SwapChannelSumAggregates';
  /** Sum of brokerCommissionRate across the matching connection */
  brokerCommissionRate: Scalars['BigInt']['output'];
  /** Sum of brokerId across the matching connection */
  brokerId: Scalars['BigInt']['output'];
  /** Sum of channelId across the matching connection */
  channelId: Scalars['BigFloat']['output'];
  /** Sum of expiryBlockId across the matching connection */
  expiryBlockId: Scalars['BigInt']['output'];
  /** Sum of expiryEventId across the matching connection */
  expiryEventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of issuedBlockId across the matching connection */
  issuedBlockId: Scalars['BigInt']['output'];
  /** Sum of issuedEventId across the matching connection */
  issuedEventId: Scalars['BigFloat']['output'];
  /** Sum of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock: Scalars['BigFloat']['output'];
};

export type SwapChannelVariancePopulationAggregates = {
  __typename?: 'SwapChannelVariancePopulationAggregates';
  /** Population variance of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapChannelVarianceSampleAggregates = {
  __typename?: 'SwapChannelVarianceSampleAggregates';
  /** Sample variance of brokerCommissionRate across the matching connection */
  brokerCommissionRate?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of expiryBlockId across the matching connection */
  expiryBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of expiryEventId across the matching connection */
  expiryEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of issuedEventId across the matching connection */
  issuedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of sourceChainExpiryBlock across the matching connection */
  sourceChainExpiryBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `SwapChannel` values. */
export type SwapChannelsConnection = {
  __typename?: 'SwapChannelsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<SwapChannelAggregates>;
  /** A list of edges which contains the `SwapChannel` and cursor to aid in pagination. */
  edges: Array<SwapChannelsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<SwapChannelAggregates>>;
  /** A list of `SwapChannel` objects. */
  nodes: Array<SwapChannel>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `SwapChannel` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `SwapChannel` values. */
export type SwapChannelsConnectionGroupedAggregatesArgs = {
  groupBy: Array<SwapChannelGroupBy>;
  having?: InputMaybe<SwapChannelHavingInput>;
};

/** A `SwapChannel` edge in the connection. */
export type SwapChannelsEdge = {
  __typename?: 'SwapChannelsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `SwapChannel` at the end of the edge. */
  node: SwapChannel;
};

/** Methods to use when ordering `SwapChannel`. */
export type SwapChannelsOrderBy =
  | 'BROKER_COMMISSION_RATE_ASC'
  | 'BROKER_COMMISSION_RATE_DESC'
  | 'BROKER_ID_ASC'
  | 'BROKER_ID_DESC'
  | 'CHANNEL_ID_ASC'
  | 'CHANNEL_ID_DESC'
  | 'DEPOSIT_ADDRESS_ASC'
  | 'DEPOSIT_ADDRESS_DESC'
  | 'DESTINATION_ADDRESS_ASC'
  | 'DESTINATION_ADDRESS_DESC'
  | 'DESTINATION_ASSET_ASC'
  | 'DESTINATION_ASSET_DESC'
  | 'DESTINATION_CHAIN_ASC'
  | 'DESTINATION_CHAIN_DESC'
  | 'EXPIRY_BLOCK_ID_ASC'
  | 'EXPIRY_BLOCK_ID_DESC'
  | 'EXPIRY_EVENT_ID_ASC'
  | 'EXPIRY_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_FAILED_EVENT_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_FAILED_EVENT_ID_ASC'
  | 'FAILED_SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_FAILED_EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MAX_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_MIN_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_SUM_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_DEPOSIT_CHANNEL_ID_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_ASC'
  | 'IGNORED_DEPOSITS_BY_SWAP_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_DEPOSIT_CHANNEL_ID_DESC'
  | 'ISSUED_BLOCK_ID_ASC'
  | 'ISSUED_BLOCK_ID_DESC'
  | 'ISSUED_EVENT_ID_ASC'
  | 'ISSUED_EVENT_ID_DESC'
  | 'IS_EXPIRED_ASC'
  | 'IS_EXPIRED_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SOURCE_ASSET_ASC'
  | 'SOURCE_ASSET_DESC'
  | 'SOURCE_CHAIN_ASC'
  | 'SOURCE_CHAIN_DESC'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK_ASC'
  | 'SOURCE_CHAIN_EXPIRY_BLOCK_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MAX_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_MIN_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_SUM_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BROADCAST_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_BROADCAST_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_GAS_BUDGET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_MESSAGE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CCM_MESSAGE_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ADDRESS_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DESTINATION_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_COUNTER_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_IGNORED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EGRESS_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_INTERMEDIATE_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_INTERMEDIATE_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NATIVE_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NATIVE_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_ASSET_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_ASSET_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SOURCE_CHAIN_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_INPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAPS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_TYPE_DESC';

/** A condition to be used against `Swap` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type SwapCondition = {
  /** Checks for equality with the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `ccmDepositReceivedEventId` field. */
  ccmDepositReceivedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `ccmGasBudget` field. */
  ccmGasBudget?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `ccmMessage` field. */
  ccmMessage?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `depositValueUsd` field. */
  depositValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `destinationAsset` field. */
  destinationAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `egressAmount` field. */
  egressAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `egressCounter` field. */
  egressCounter?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `egressIgnoredEventId` field. */
  egressIgnoredEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `egressScheduledEventId` field. */
  egressScheduledEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `egressValueUsd` field. */
  egressValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `intermediateAmount` field. */
  intermediateAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `intermediateValueUsd` field. */
  intermediateValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `nativeId` field. */
  nativeId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `stateChainErrorId` field. */
  stateChainErrorId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `swapExecutedEventId` field. */
  swapExecutedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `swapInputAmount` field. */
  swapInputAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `swapInputValueUsd` field. */
  swapInputValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `swapOutputAmount` field. */
  swapOutputAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `swapOutputValueUsd` field. */
  swapOutputValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `swapScheduledBlockTimestamp` field. */
  swapScheduledBlockTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `swapScheduledEventId` field. */
  swapScheduledEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<SwapType>;
};

export type SwapDistinctCountAggregates = {
  __typename?: 'SwapDistinctCountAggregates';
  /** Distinct count of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ccmMessage across the matching connection */
  ccmMessage?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAddress across the matching connection */
  destinationAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationAsset across the matching connection */
  destinationAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of destinationChain across the matching connection */
  destinationChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceAsset across the matching connection */
  sourceAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sourceChain across the matching connection */
  sourceChain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapScheduledBlockTimestamp across the matching connection */
  swapScheduledBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

export type SwapFee = Node & {
  __typename?: 'SwapFee';
  amount: Scalars['BigFloat']['output'];
  asset: ChainflipAsset;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Swap` that is related to this `SwapFee`. */
  swapBySwapId: Swap;
  swapId: Scalars['Int']['output'];
  type: SwapFeeType;
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeAggregates = {
  __typename?: 'SwapFeeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<SwapFeeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<SwapFeeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<SwapFeeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<SwapFeeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<SwapFeeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<SwapFeeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<SwapFeeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<SwapFeeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<SwapFeeVarianceSampleAggregates>;
};

export type SwapFeeAverageAggregates = {
  __typename?: 'SwapFeeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `SwapFee` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type SwapFeeCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `swapId` field. */
  swapId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<SwapFeeType>;
  /** Checks for equality with the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type SwapFeeDistinctCountAggregates = {
  __typename?: 'SwapFeeDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `SwapFee` object types. All fields are combined with a logical ‘and.’ */
export type SwapFeeFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<SwapFeeFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<SwapFeeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<SwapFeeFilter>>;
  /** Filter by the object’s `swapId` field. */
  swapId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<SwapFeeTypeFilter>;
  /** Filter by the object’s `valueUsd` field. */
  valueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `SwapFee` for usage during aggregation. */
export type SwapFeeGroupBy =
  | 'AMOUNT'
  | 'ASSET'
  | 'SWAP_ID'
  | 'TYPE'
  | 'VALUE_USD';

export type SwapFeeHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `SwapFee` aggregates. */
export type SwapFeeHavingInput = {
  AND?: InputMaybe<Array<SwapFeeHavingInput>>;
  OR?: InputMaybe<Array<SwapFeeHavingInput>>;
  average?: InputMaybe<SwapFeeHavingAverageInput>;
  distinctCount?: InputMaybe<SwapFeeHavingDistinctCountInput>;
  max?: InputMaybe<SwapFeeHavingMaxInput>;
  min?: InputMaybe<SwapFeeHavingMinInput>;
  stddevPopulation?: InputMaybe<SwapFeeHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<SwapFeeHavingStddevSampleInput>;
  sum?: InputMaybe<SwapFeeHavingSumInput>;
  variancePopulation?: InputMaybe<SwapFeeHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<SwapFeeHavingVarianceSampleInput>;
};

export type SwapFeeHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  swapId?: InputMaybe<HavingIntFilter>;
  valueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type SwapFeeMaxAggregates = {
  __typename?: 'SwapFeeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of swapId across the matching connection */
  swapId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeMinAggregates = {
  __typename?: 'SwapFeeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of swapId across the matching connection */
  swapId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeStddevPopulationAggregates = {
  __typename?: 'SwapFeeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeStddevSampleAggregates = {
  __typename?: 'SwapFeeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeSumAggregates = {
  __typename?: 'SwapFeeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of swapId across the matching connection */
  swapId: Scalars['BigInt']['output'];
  /** Sum of valueUsd across the matching connection */
  valueUsd: Scalars['BigFloat']['output'];
};

export type SwapFeeType =
  | 'BROKER'
  | 'EGRESS'
  | 'INGRESS'
  | 'LIQUIDITY'
  | 'NETWORK';

/** A filter to be used against SwapFeeType fields. All fields are combined with a logical ‘and.’ */
export type SwapFeeTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<SwapFeeType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<SwapFeeType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<SwapFeeType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<SwapFeeType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<SwapFeeType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<SwapFeeType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<SwapFeeType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<SwapFeeType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<SwapFeeType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<SwapFeeType>>;
};

export type SwapFeeVariancePopulationAggregates = {
  __typename?: 'SwapFeeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapFeeVarianceSampleAggregates = {
  __typename?: 'SwapFeeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of valueUsd across the matching connection */
  valueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `SwapFee` values. */
export type SwapFeesConnection = {
  __typename?: 'SwapFeesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<SwapFeeAggregates>;
  /** A list of edges which contains the `SwapFee` and cursor to aid in pagination. */
  edges: Array<SwapFeesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<SwapFeeAggregates>>;
  /** A list of `SwapFee` objects. */
  nodes: Array<SwapFee>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `SwapFee` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `SwapFee` values. */
export type SwapFeesConnectionGroupedAggregatesArgs = {
  groupBy: Array<SwapFeeGroupBy>;
  having?: InputMaybe<SwapFeeHavingInput>;
};

/** A `SwapFee` edge in the connection. */
export type SwapFeesEdge = {
  __typename?: 'SwapFeesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `SwapFee` at the end of the edge. */
  node: SwapFee;
};

/** Methods to use when ordering `SwapFee`. */
export type SwapFeesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SWAP_ID_ASC'
  | 'SWAP_ID_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC'
  | 'VALUE_USD_ASC'
  | 'VALUE_USD_DESC';

/** A filter to be used against `Swap` object types. All fields are combined with a logical ‘and.’ */
export type SwapFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<SwapFilter>>;
  /** Filter by the object’s `broadcastId` field. */
  broadcastId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `ccmDepositReceivedEventId` field. */
  ccmDepositReceivedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `ccmGasBudget` field. */
  ccmGasBudget?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `ccmMessage` field. */
  ccmMessage?: InputMaybe<StringFilter>;
  /** Filter by the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `depositValueUsd` field. */
  depositValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `destinationAddress` field. */
  destinationAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `destinationAsset` field. */
  destinationAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `destinationChain` field. */
  destinationChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `egressAmount` field. */
  egressAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `egressCounter` field. */
  egressCounter?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `egressIgnoredEventId` field. */
  egressIgnoredEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `egressScheduledEventId` field. */
  egressScheduledEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `egressValueUsd` field. */
  egressValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `intermediateAmount` field. */
  intermediateAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `intermediateValueUsd` field. */
  intermediateValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `nativeId` field. */
  nativeId?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<SwapFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<SwapFilter>>;
  /** Filter by the object’s `sourceAsset` field. */
  sourceAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `sourceChain` field. */
  sourceChain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `stateChainErrorId` field. */
  stateChainErrorId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `swapExecutedEventId` field. */
  swapExecutedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `swapInputAmount` field. */
  swapInputAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `swapInputValueUsd` field. */
  swapInputValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `swapOutputAmount` field. */
  swapOutputAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `swapOutputValueUsd` field. */
  swapOutputValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `swapScheduledBlockTimestamp` field. */
  swapScheduledBlockTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `swapScheduledEventId` field. */
  swapScheduledEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<SwapTypeFilter>;
};

/** Grouping methods for `Swap` for usage during aggregation. */
export type SwapGroupBy =
  | 'BROADCAST_ID'
  | 'CCM_DEPOSIT_RECEIVED_EVENT_ID'
  | 'CCM_GAS_BUDGET'
  | 'CCM_MESSAGE'
  | 'DEPOSIT_AMOUNT'
  | 'DEPOSIT_CHANNEL_ID'
  | 'DEPOSIT_VALUE_USD'
  | 'DESTINATION_ADDRESS'
  | 'DESTINATION_ASSET'
  | 'DESTINATION_CHAIN'
  | 'EGRESS_AMOUNT'
  | 'EGRESS_COUNTER'
  | 'EGRESS_IGNORED_EVENT_ID'
  | 'EGRESS_SCHEDULED_EVENT_ID'
  | 'EGRESS_VALUE_USD'
  | 'INTERMEDIATE_AMOUNT'
  | 'INTERMEDIATE_VALUE_USD'
  | 'SOURCE_ASSET'
  | 'SOURCE_CHAIN'
  | 'STATE_CHAIN_ERROR_ID'
  | 'SWAP_EXECUTED_EVENT_ID'
  | 'SWAP_INPUT_AMOUNT'
  | 'SWAP_INPUT_VALUE_USD'
  | 'SWAP_OUTPUT_AMOUNT'
  | 'SWAP_OUTPUT_VALUE_USD'
  | 'SWAP_SCHEDULED_BLOCK_TIMESTAMP'
  | 'SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'SWAP_SCHEDULED_EVENT_ID'
  | 'TYPE';

export type SwapHavingAverageInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingDistinctCountInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `Swap` aggregates. */
export type SwapHavingInput = {
  AND?: InputMaybe<Array<SwapHavingInput>>;
  OR?: InputMaybe<Array<SwapHavingInput>>;
  average?: InputMaybe<SwapHavingAverageInput>;
  distinctCount?: InputMaybe<SwapHavingDistinctCountInput>;
  max?: InputMaybe<SwapHavingMaxInput>;
  min?: InputMaybe<SwapHavingMinInput>;
  stddevPopulation?: InputMaybe<SwapHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<SwapHavingStddevSampleInput>;
  sum?: InputMaybe<SwapHavingSumInput>;
  variancePopulation?: InputMaybe<SwapHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<SwapHavingVarianceSampleInput>;
};

export type SwapHavingMaxInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingMinInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingStddevPopulationInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingStddevSampleInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingSumInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingVariancePopulationInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapHavingVarianceSampleInput = {
  broadcastId?: InputMaybe<HavingIntFilter>;
  ccmDepositReceivedEventId?: InputMaybe<HavingBigintFilter>;
  ccmGasBudget?: InputMaybe<HavingBigfloatFilter>;
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  depositValueUsd?: InputMaybe<HavingBigfloatFilter>;
  egressAmount?: InputMaybe<HavingBigfloatFilter>;
  egressCounter?: InputMaybe<HavingBigintFilter>;
  egressIgnoredEventId?: InputMaybe<HavingBigintFilter>;
  egressScheduledEventId?: InputMaybe<HavingBigintFilter>;
  egressValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  intermediateAmount?: InputMaybe<HavingBigfloatFilter>;
  intermediateValueUsd?: InputMaybe<HavingBigfloatFilter>;
  nativeId?: InputMaybe<HavingBigintFilter>;
  stateChainErrorId?: InputMaybe<HavingIntFilter>;
  swapExecutedEventId?: InputMaybe<HavingBigintFilter>;
  swapInputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapInputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapOutputAmount?: InputMaybe<HavingBigfloatFilter>;
  swapOutputValueUsd?: InputMaybe<HavingBigfloatFilter>;
  swapScheduledBlockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapScheduledEventId?: InputMaybe<HavingBigintFilter>;
};

export type SwapMaxAggregates = {
  __typename?: 'SwapMaxAggregates';
  /** Maximum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type SwapMinAggregates = {
  __typename?: 'SwapMinAggregates';
  /** Minimum of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type SwapStddevPopulationAggregates = {
  __typename?: 'SwapStddevPopulationAggregates';
  /** Population standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapStddevSampleAggregates = {
  __typename?: 'SwapStddevSampleAggregates';
  /** Sample standard deviation of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapSumAggregates = {
  __typename?: 'SwapSumAggregates';
  /** Sum of broadcastId across the matching connection */
  broadcastId: Scalars['BigInt']['output'];
  /** Sum of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId: Scalars['BigFloat']['output'];
  /** Sum of ccmGasBudget across the matching connection */
  ccmGasBudget: Scalars['BigFloat']['output'];
  /** Sum of depositAmount across the matching connection */
  depositAmount: Scalars['BigFloat']['output'];
  /** Sum of depositChannelId across the matching connection */
  depositChannelId: Scalars['BigInt']['output'];
  /** Sum of depositValueUsd across the matching connection */
  depositValueUsd: Scalars['BigFloat']['output'];
  /** Sum of egressAmount across the matching connection */
  egressAmount: Scalars['BigFloat']['output'];
  /** Sum of egressCounter across the matching connection */
  egressCounter: Scalars['BigFloat']['output'];
  /** Sum of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId: Scalars['BigFloat']['output'];
  /** Sum of egressScheduledEventId across the matching connection */
  egressScheduledEventId: Scalars['BigFloat']['output'];
  /** Sum of egressValueUsd across the matching connection */
  egressValueUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of intermediateAmount across the matching connection */
  intermediateAmount: Scalars['BigFloat']['output'];
  /** Sum of intermediateValueUsd across the matching connection */
  intermediateValueUsd: Scalars['BigFloat']['output'];
  /** Sum of nativeId across the matching connection */
  nativeId: Scalars['BigFloat']['output'];
  /** Sum of stateChainErrorId across the matching connection */
  stateChainErrorId: Scalars['BigInt']['output'];
  /** Sum of swapExecutedEventId across the matching connection */
  swapExecutedEventId: Scalars['BigFloat']['output'];
  /** Sum of swapInputAmount across the matching connection */
  swapInputAmount: Scalars['BigFloat']['output'];
  /** Sum of swapInputValueUsd across the matching connection */
  swapInputValueUsd: Scalars['BigFloat']['output'];
  /** Sum of swapOutputAmount across the matching connection */
  swapOutputAmount: Scalars['BigFloat']['output'];
  /** Sum of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd: Scalars['BigFloat']['output'];
  /** Sum of swapScheduledEventId across the matching connection */
  swapScheduledEventId: Scalars['BigFloat']['output'];
};

export type SwapType =
  | 'GAS'
  | 'PRINCIPAL'
  | 'SWAP';

/** A filter to be used against SwapType fields. All fields are combined with a logical ‘and.’ */
export type SwapTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<SwapType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<SwapType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<SwapType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<SwapType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<SwapType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<SwapType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<SwapType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<SwapType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<SwapType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<SwapType>>;
};

export type SwapVariancePopulationAggregates = {
  __typename?: 'SwapVariancePopulationAggregates';
  /** Population variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type SwapVarianceSampleAggregates = {
  __typename?: 'SwapVarianceSampleAggregates';
  /** Sample variance of broadcastId across the matching connection */
  broadcastId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of ccmDepositReceivedEventId across the matching connection */
  ccmDepositReceivedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of ccmGasBudget across the matching connection */
  ccmGasBudget?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositValueUsd across the matching connection */
  depositValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressAmount across the matching connection */
  egressAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressCounter across the matching connection */
  egressCounter?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressIgnoredEventId across the matching connection */
  egressIgnoredEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressScheduledEventId across the matching connection */
  egressScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of egressValueUsd across the matching connection */
  egressValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of intermediateAmount across the matching connection */
  intermediateAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of intermediateValueUsd across the matching connection */
  intermediateValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of nativeId across the matching connection */
  nativeId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of stateChainErrorId across the matching connection */
  stateChainErrorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapExecutedEventId across the matching connection */
  swapExecutedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapInputAmount across the matching connection */
  swapInputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapInputValueUsd across the matching connection */
  swapInputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapOutputAmount across the matching connection */
  swapOutputAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapOutputValueUsd across the matching connection */
  swapOutputValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapScheduledEventId across the matching connection */
  swapScheduledEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Swap` values. */
export type SwapsConnection = {
  __typename?: 'SwapsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<SwapAggregates>;
  /** A list of edges which contains the `Swap` and cursor to aid in pagination. */
  edges: Array<SwapsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<SwapAggregates>>;
  /** A list of `Swap` objects. */
  nodes: Array<Swap>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Swap` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Swap` values. */
export type SwapsConnectionGroupedAggregatesArgs = {
  groupBy: Array<SwapGroupBy>;
  having?: InputMaybe<SwapHavingInput>;
};

/** A `Swap` edge in the connection. */
export type SwapsEdge = {
  __typename?: 'SwapsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Swap` at the end of the edge. */
  node: Swap;
};

/** Methods to use when ordering `Swap`. */
export type SwapsOrderBy =
  | 'BROADCAST_ID_ASC'
  | 'BROADCAST_ID_DESC'
  | 'CCM_DEPOSIT_RECEIVED_EVENT_ID_ASC'
  | 'CCM_DEPOSIT_RECEIVED_EVENT_ID_DESC'
  | 'CCM_GAS_BUDGET_ASC'
  | 'CCM_GAS_BUDGET_DESC'
  | 'CCM_MESSAGE_ASC'
  | 'CCM_MESSAGE_DESC'
  | 'DEPOSIT_AMOUNT_ASC'
  | 'DEPOSIT_AMOUNT_DESC'
  | 'DEPOSIT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNEL_ID_DESC'
  | 'DEPOSIT_VALUE_USD_ASC'
  | 'DEPOSIT_VALUE_USD_DESC'
  | 'DESTINATION_ADDRESS_ASC'
  | 'DESTINATION_ADDRESS_DESC'
  | 'DESTINATION_ASSET_ASC'
  | 'DESTINATION_ASSET_DESC'
  | 'DESTINATION_CHAIN_ASC'
  | 'DESTINATION_CHAIN_DESC'
  | 'EGRESS_AMOUNT_ASC'
  | 'EGRESS_AMOUNT_DESC'
  | 'EGRESS_COUNTER_ASC'
  | 'EGRESS_COUNTER_DESC'
  | 'EGRESS_IGNORED_EVENT_ID_ASC'
  | 'EGRESS_IGNORED_EVENT_ID_DESC'
  | 'EGRESS_SCHEDULED_EVENT_ID_ASC'
  | 'EGRESS_SCHEDULED_EVENT_ID_DESC'
  | 'EGRESS_VALUE_USD_ASC'
  | 'EGRESS_VALUE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'INTERMEDIATE_AMOUNT_ASC'
  | 'INTERMEDIATE_AMOUNT_DESC'
  | 'INTERMEDIATE_VALUE_USD_ASC'
  | 'INTERMEDIATE_VALUE_USD_DESC'
  | 'NATIVE_ID_ASC'
  | 'NATIVE_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SOURCE_ASSET_ASC'
  | 'SOURCE_ASSET_DESC'
  | 'SOURCE_CHAIN_ASC'
  | 'SOURCE_CHAIN_DESC'
  | 'STATE_CHAIN_ERROR_ID_ASC'
  | 'STATE_CHAIN_ERROR_ID_DESC'
  | 'SWAP_EXECUTED_EVENT_ID_ASC'
  | 'SWAP_EXECUTED_EVENT_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_AVERAGE_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_COUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_COUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_DISTINCT_COUNT_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MAX_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_MIN_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_POPULATION_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_STDDEV_SAMPLE_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_SUM_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_POPULATION_VALUE_USD_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_SWAP_ID_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_SWAP_ID_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_VALUE_USD_ASC'
  | 'SWAP_FEES_BY_SWAP_ID_VARIANCE_SAMPLE_VALUE_USD_DESC'
  | 'SWAP_INPUT_AMOUNT_ASC'
  | 'SWAP_INPUT_AMOUNT_DESC'
  | 'SWAP_INPUT_VALUE_USD_ASC'
  | 'SWAP_INPUT_VALUE_USD_DESC'
  | 'SWAP_OUTPUT_AMOUNT_ASC'
  | 'SWAP_OUTPUT_AMOUNT_DESC'
  | 'SWAP_OUTPUT_VALUE_USD_ASC'
  | 'SWAP_OUTPUT_VALUE_USD_DESC'
  | 'SWAP_SCHEDULED_BLOCK_TIMESTAMP_ASC'
  | 'SWAP_SCHEDULED_BLOCK_TIMESTAMP_DESC'
  | 'SWAP_SCHEDULED_EVENT_ID_ASC'
  | 'SWAP_SCHEDULED_EVENT_ID_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type TokenPrice = Node & {
  __typename?: 'TokenPrice';
  address: Scalars['String']['output'];
  chainId: Scalars['String']['output'];
  createdAt: Scalars['Datetime']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  updatedAt: Scalars['Datetime']['output'];
  usdPrice: Scalars['Float']['output'];
};

export type TokenPriceAggregates = {
  __typename?: 'TokenPriceAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<TokenPriceAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<TokenPriceDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<TokenPriceMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<TokenPriceMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<TokenPriceStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<TokenPriceStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<TokenPriceSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<TokenPriceVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<TokenPriceVarianceSampleAggregates>;
};

export type TokenPriceAverageAggregates = {
  __typename?: 'TokenPriceAverageAggregates';
  /** Mean average of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

/**
 * A condition to be used against `TokenPrice` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type TokenPriceCondition = {
  /** Checks for equality with the object’s `address` field. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `chainId` field. */
  chainId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `createdAt` field. */
  createdAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `usdPrice` field. */
  usdPrice?: InputMaybe<Scalars['Float']['input']>;
};

export type TokenPriceDistinctCountAggregates = {
  __typename?: 'TokenPriceDistinctCountAggregates';
  /** Distinct count of address across the matching connection */
  address?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chainId across the matching connection */
  chainId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `TokenPrice` object types. All fields are combined with a logical ‘and.’ */
export type TokenPriceFilter = {
  /** Filter by the object’s `address` field. */
  address?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<TokenPriceFilter>>;
  /** Filter by the object’s `chainId` field. */
  chainId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<DatetimeFilter>;
  /** Negates the expression. */
  not?: InputMaybe<TokenPriceFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<TokenPriceFilter>>;
  /** Filter by the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `usdPrice` field. */
  usdPrice?: InputMaybe<FloatFilter>;
};

/** Grouping methods for `TokenPrice` for usage during aggregation. */
export type TokenPriceGroupBy =
  | 'ADDRESS'
  | 'CHAIN_ID'
  | 'CREATED_AT'
  | 'CREATED_AT_TRUNCATED_TO_DAY'
  | 'CREATED_AT_TRUNCATED_TO_HOUR'
  | 'UPDATED_AT'
  | 'UPDATED_AT_TRUNCATED_TO_DAY'
  | 'UPDATED_AT_TRUNCATED_TO_HOUR'
  | 'USD_PRICE';

export type TokenPriceHavingAverageInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

/** Conditions for `TokenPrice` aggregates. */
export type TokenPriceHavingInput = {
  AND?: InputMaybe<Array<TokenPriceHavingInput>>;
  OR?: InputMaybe<Array<TokenPriceHavingInput>>;
  average?: InputMaybe<TokenPriceHavingAverageInput>;
  distinctCount?: InputMaybe<TokenPriceHavingDistinctCountInput>;
  max?: InputMaybe<TokenPriceHavingMaxInput>;
  min?: InputMaybe<TokenPriceHavingMinInput>;
  stddevPopulation?: InputMaybe<TokenPriceHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<TokenPriceHavingStddevSampleInput>;
  sum?: InputMaybe<TokenPriceHavingSumInput>;
  variancePopulation?: InputMaybe<TokenPriceHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<TokenPriceHavingVarianceSampleInput>;
};

export type TokenPriceHavingMaxInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingMinInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingSumInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingDatetimeFilter>;
  updatedAt?: InputMaybe<HavingDatetimeFilter>;
  usdPrice?: InputMaybe<HavingFloatFilter>;
};

export type TokenPriceMaxAggregates = {
  __typename?: 'TokenPriceMaxAggregates';
  /** Maximum of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

export type TokenPriceMinAggregates = {
  __typename?: 'TokenPriceMinAggregates';
  /** Minimum of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

export type TokenPriceStddevPopulationAggregates = {
  __typename?: 'TokenPriceStddevPopulationAggregates';
  /** Population standard deviation of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

export type TokenPriceStddevSampleAggregates = {
  __typename?: 'TokenPriceStddevSampleAggregates';
  /** Sample standard deviation of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

export type TokenPriceSumAggregates = {
  __typename?: 'TokenPriceSumAggregates';
  /** Sum of usdPrice across the matching connection */
  usdPrice: Scalars['Float']['output'];
};

export type TokenPriceVariancePopulationAggregates = {
  __typename?: 'TokenPriceVariancePopulationAggregates';
  /** Population variance of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

export type TokenPriceVarianceSampleAggregates = {
  __typename?: 'TokenPriceVarianceSampleAggregates';
  /** Sample variance of usdPrice across the matching connection */
  usdPrice?: Maybe<Scalars['Float']['output']>;
};

/** A connection to a list of `TokenPrice` values. */
export type TokenPricesConnection = {
  __typename?: 'TokenPricesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<TokenPriceAggregates>;
  /** A list of edges which contains the `TokenPrice` and cursor to aid in pagination. */
  edges: Array<TokenPricesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<TokenPriceAggregates>>;
  /** A list of `TokenPrice` objects. */
  nodes: Array<TokenPrice>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `TokenPrice` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `TokenPrice` values. */
export type TokenPricesConnectionGroupedAggregatesArgs = {
  groupBy: Array<TokenPriceGroupBy>;
  having?: InputMaybe<TokenPriceHavingInput>;
};

/** A `TokenPrice` edge in the connection. */
export type TokenPricesEdge = {
  __typename?: 'TokenPricesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `TokenPrice` at the end of the edge. */
  node: TokenPrice;
};

/** Methods to use when ordering `TokenPrice`. */
export type TokenPricesOrderBy =
  | 'ADDRESS_ASC'
  | 'ADDRESS_DESC'
  | 'CHAIN_ID_ASC'
  | 'CHAIN_ID_DESC'
  | 'CREATED_AT_ASC'
  | 'CREATED_AT_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'UPDATED_AT_ASC'
  | 'UPDATED_AT_DESC'
  | 'USD_PRICE_ASC'
  | 'USD_PRICE_DESC';

export type Validator = Node & {
  __typename?: 'Validator';
  /** Reads a single `Account` that is related to this `Validator`. */
  accountByAccountId: Account;
  accountId: Scalars['Int']['output'];
  alias?: Maybe<Scalars['String']['output']>;
  apyBp?: Maybe<Scalars['Int']['output']>;
  /** Reads and enables pagination through a set of `AuthorityHeartbeat`. */
  authorityHeartbeatsByValidatorId: AuthorityHeartbeatsConnection;
  /** Reads and enables pagination through a set of `AuthorityMembership`. */
  authorityMembershipsByValidatorId: AuthorityMembershipsConnection;
  /** Reads a single `Block` that is related to this `Validator`. */
  blockByLastHeartbeatBlockId?: Maybe<Block>;
  /** Reads and enables pagination through a set of `Block`. */
  blocksByValidatorId: BlocksConnection;
  boundRedeemAddress?: Maybe<Scalars['String']['output']>;
  /** Reads a single `CfeVersion` that is related to this `Validator`. */
  cfeVersionByCfeVersionId: CfeVersion;
  cfeVersionId: Scalars['String']['output'];
  firstFundingTimestamp: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  idHex: Scalars['String']['output'];
  idSs58: Scalars['String']['output'];
  isBidding: Scalars['Boolean']['output'];
  isCurrentAuthority: Scalars['Boolean']['output'];
  isCurrentBackup: Scalars['Boolean']['output'];
  isKeyholder: Scalars['Boolean']['output'];
  isOnline: Scalars['Boolean']['output'];
  isQualified: Scalars['Boolean']['output'];
  lastHeartbeatBlockId?: Maybe<Scalars['Int']['output']>;
  latestFundingTimestamp: Scalars['String']['output'];
  lockedBalance: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Penalty`. */
  penaltiesByValidatorId: PenaltiesConnection;
  processorId?: Maybe<Scalars['Int']['output']>;
  reputationPoints: Scalars['Int']['output'];
  role: AccountRole;
  totalRewards?: Maybe<Scalars['String']['output']>;
  unlockedBalance: Scalars['BigFloat']['output'];
};


export type ValidatorAuthorityHeartbeatsByValidatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityHeartbeatCondition>;
  filter?: InputMaybe<AuthorityHeartbeatFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityHeartbeatsOrderBy>>;
};


export type ValidatorAuthorityMembershipsByValidatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AuthorityMembershipCondition>;
  filter?: InputMaybe<AuthorityMembershipFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthorityMembershipsOrderBy>>;
};


export type ValidatorBlocksByValidatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BlockCondition>;
  filter?: InputMaybe<BlockFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlocksOrderBy>>;
};


export type ValidatorPenaltiesByValidatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PenaltyCondition>;
  filter?: InputMaybe<PenaltyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PenaltiesOrderBy>>;
};

export type ValidatorAggregates = {
  __typename?: 'ValidatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ValidatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ValidatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ValidatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ValidatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ValidatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ValidatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ValidatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ValidatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ValidatorVarianceSampleAggregates>;
};

export type ValidatorAverageAggregates = {
  __typename?: 'ValidatorAverageAggregates';
  /** Mean average of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `Validator` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type ValidatorCondition = {
  /** Checks for equality with the object’s `accountId` field. */
  accountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `alias` field. */
  alias?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `apyBp` field. */
  apyBp?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boundRedeemAddress` field. */
  boundRedeemAddress?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `cfeVersionId` field. */
  cfeVersionId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `firstFundingTimestamp` field. */
  firstFundingTimestamp?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `idHex` field. */
  idHex?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `idSs58` field. */
  idSs58?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `isBidding` field. */
  isBidding?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `isCurrentAuthority` field. */
  isCurrentAuthority?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `isCurrentBackup` field. */
  isCurrentBackup?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `isKeyholder` field. */
  isKeyholder?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `isOnline` field. */
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `isQualified` field. */
  isQualified?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `lastHeartbeatBlockId` field. */
  lastHeartbeatBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `latestFundingTimestamp` field. */
  latestFundingTimestamp?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `lockedBalance` field. */
  lockedBalance?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `processorId` field. */
  processorId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `reputationPoints` field. */
  reputationPoints?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `role` field. */
  role?: InputMaybe<AccountRole>;
  /** Checks for equality with the object’s `totalRewards` field. */
  totalRewards?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `unlockedBalance` field. */
  unlockedBalance?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type ValidatorDistinctCountAggregates = {
  __typename?: 'ValidatorDistinctCountAggregates';
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of alias across the matching connection */
  alias?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boundRedeemAddress across the matching connection */
  boundRedeemAddress?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of cfeVersionId across the matching connection */
  cfeVersionId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of firstFundingTimestamp across the matching connection */
  firstFundingTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idHex across the matching connection */
  idHex?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idSs58 across the matching connection */
  idSs58?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isBidding across the matching connection */
  isBidding?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isCurrentAuthority across the matching connection */
  isCurrentAuthority?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isCurrentBackup across the matching connection */
  isCurrentBackup?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isKeyholder across the matching connection */
  isKeyholder?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isOnline across the matching connection */
  isOnline?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isQualified across the matching connection */
  isQualified?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of latestFundingTimestamp across the matching connection */
  latestFundingTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of role across the matching connection */
  role?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalRewards across the matching connection */
  totalRewards?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Validator` object types. All fields are combined with a logical ‘and.’ */
export type ValidatorFilter = {
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `alias` field. */
  alias?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ValidatorFilter>>;
  /** Filter by the object’s `apyBp` field. */
  apyBp?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boundRedeemAddress` field. */
  boundRedeemAddress?: InputMaybe<StringFilter>;
  /** Filter by the object’s `cfeVersionId` field. */
  cfeVersionId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `firstFundingTimestamp` field. */
  firstFundingTimestamp?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `idHex` field. */
  idHex?: InputMaybe<StringFilter>;
  /** Filter by the object’s `idSs58` field. */
  idSs58?: InputMaybe<StringFilter>;
  /** Filter by the object’s `isBidding` field. */
  isBidding?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `isCurrentAuthority` field. */
  isCurrentAuthority?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `isCurrentBackup` field. */
  isCurrentBackup?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `isKeyholder` field. */
  isKeyholder?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `isOnline` field. */
  isOnline?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `isQualified` field. */
  isQualified?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `lastHeartbeatBlockId` field. */
  lastHeartbeatBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `latestFundingTimestamp` field. */
  latestFundingTimestamp?: InputMaybe<StringFilter>;
  /** Filter by the object’s `lockedBalance` field. */
  lockedBalance?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ValidatorFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ValidatorFilter>>;
  /** Filter by the object’s `processorId` field. */
  processorId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `reputationPoints` field. */
  reputationPoints?: InputMaybe<IntFilter>;
  /** Filter by the object’s `role` field. */
  role?: InputMaybe<AccountRoleFilter>;
  /** Filter by the object’s `totalRewards` field. */
  totalRewards?: InputMaybe<StringFilter>;
  /** Filter by the object’s `unlockedBalance` field. */
  unlockedBalance?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `Validator` for usage during aggregation. */
export type ValidatorGroupBy =
  | 'ALIAS'
  | 'APY_BP'
  | 'BOUND_REDEEM_ADDRESS'
  | 'CFE_VERSION_ID'
  | 'FIRST_FUNDING_TIMESTAMP'
  | 'IS_BIDDING'
  | 'IS_CURRENT_AUTHORITY'
  | 'IS_CURRENT_BACKUP'
  | 'IS_KEYHOLDER'
  | 'IS_ONLINE'
  | 'IS_QUALIFIED'
  | 'LAST_HEARTBEAT_BLOCK_ID'
  | 'LATEST_FUNDING_TIMESTAMP'
  | 'LOCKED_BALANCE'
  | 'REPUTATION_POINTS'
  | 'ROLE'
  | 'TOTAL_REWARDS'
  | 'UNLOCKED_BALANCE';

export type ValidatorHavingAverageInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingDistinctCountInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Validator` aggregates. */
export type ValidatorHavingInput = {
  AND?: InputMaybe<Array<ValidatorHavingInput>>;
  OR?: InputMaybe<Array<ValidatorHavingInput>>;
  average?: InputMaybe<ValidatorHavingAverageInput>;
  distinctCount?: InputMaybe<ValidatorHavingDistinctCountInput>;
  max?: InputMaybe<ValidatorHavingMaxInput>;
  min?: InputMaybe<ValidatorHavingMinInput>;
  stddevPopulation?: InputMaybe<ValidatorHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ValidatorHavingStddevSampleInput>;
  sum?: InputMaybe<ValidatorHavingSumInput>;
  variancePopulation?: InputMaybe<ValidatorHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ValidatorHavingVarianceSampleInput>;
};

export type ValidatorHavingMaxInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingMinInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingStddevPopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingStddevSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingSumInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingVariancePopulationInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorHavingVarianceSampleInput = {
  accountId?: InputMaybe<HavingIntFilter>;
  apyBp?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  lastHeartbeatBlockId?: InputMaybe<HavingIntFilter>;
  lockedBalance?: InputMaybe<HavingBigfloatFilter>;
  processorId?: InputMaybe<HavingIntFilter>;
  reputationPoints?: InputMaybe<HavingIntFilter>;
  unlockedBalance?: InputMaybe<HavingBigfloatFilter>;
};

export type ValidatorMaxAggregates = {
  __typename?: 'ValidatorMaxAggregates';
  /** Maximum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of processorId across the matching connection */
  processorId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['Int']['output']>;
  /** Maximum of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorMinAggregates = {
  __typename?: 'ValidatorMinAggregates';
  /** Minimum of accountId across the matching connection */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of processorId across the matching connection */
  processorId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['Int']['output']>;
  /** Minimum of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorStddevPopulationAggregates = {
  __typename?: 'ValidatorStddevPopulationAggregates';
  /** Population standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorStddevSampleAggregates = {
  __typename?: 'ValidatorStddevSampleAggregates';
  /** Sample standard deviation of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorSumAggregates = {
  __typename?: 'ValidatorSumAggregates';
  /** Sum of accountId across the matching connection */
  accountId: Scalars['BigInt']['output'];
  /** Sum of apyBp across the matching connection */
  apyBp: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId: Scalars['BigInt']['output'];
  /** Sum of lockedBalance across the matching connection */
  lockedBalance: Scalars['BigFloat']['output'];
  /** Sum of processorId across the matching connection */
  processorId: Scalars['BigInt']['output'];
  /** Sum of reputationPoints across the matching connection */
  reputationPoints: Scalars['BigInt']['output'];
  /** Sum of unlockedBalance across the matching connection */
  unlockedBalance: Scalars['BigFloat']['output'];
};

export type ValidatorVariancePopulationAggregates = {
  __typename?: 'ValidatorVariancePopulationAggregates';
  /** Population variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorVarianceSampleAggregates = {
  __typename?: 'ValidatorVarianceSampleAggregates';
  /** Sample variance of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of apyBp across the matching connection */
  apyBp?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lastHeartbeatBlockId across the matching connection */
  lastHeartbeatBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lockedBalance across the matching connection */
  lockedBalance?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of processorId across the matching connection */
  processorId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of reputationPoints across the matching connection */
  reputationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of unlockedBalance across the matching connection */
  unlockedBalance?: Maybe<Scalars['BigFloat']['output']>;
};

export type ValidatorsByWalletAddressInput = {
  address: Scalars['String']['input'];
};

/** A connection to a list of `Validator` values. */
export type ValidatorsConnection = {
  __typename?: 'ValidatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ValidatorAggregates>;
  /** A list of edges which contains the `Validator` and cursor to aid in pagination. */
  edges: Array<ValidatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ValidatorAggregates>>;
  /** A list of `Validator` objects. */
  nodes: Array<Validator>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Validator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Validator` values. */
export type ValidatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ValidatorGroupBy>;
  having?: InputMaybe<ValidatorHavingInput>;
};

/** A `Validator` edge in the connection. */
export type ValidatorsEdge = {
  __typename?: 'ValidatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Validator` at the end of the edge. */
  node: Validator;
};

/** Methods to use when ordering `Validator`. */
export type ValidatorsOrderBy =
  | 'ACCOUNT_ID_ASC'
  | 'ACCOUNT_ID_DESC'
  | 'ALIAS_ASC'
  | 'ALIAS_DESC'
  | 'APY_BP_ASC'
  | 'APY_BP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_COUNT_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_COUNT_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_AUTHORITY_MEMBERSHIP_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_HEARTBEATS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_COUNT_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_COUNT_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EPOCH_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EPOCH_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REWARD_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REWARD_DESC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'AUTHORITY_MEMBERSHIPS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_COUNT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_COUNT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_PARENT_HASH_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_PARENT_HASH_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REWARD_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REWARD_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_STATE_ROOT_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_STATE_ROOT_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'BLOCKS_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'BOUND_REDEEM_ADDRESS_ASC'
  | 'BOUND_REDEEM_ADDRESS_DESC'
  | 'CFE_VERSION_ID_ASC'
  | 'CFE_VERSION_ID_DESC'
  | 'FIRST_FUNDING_TIMESTAMP_ASC'
  | 'FIRST_FUNDING_TIMESTAMP_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'ID_HEX_ASC'
  | 'ID_HEX_DESC'
  | 'ID_SS58_ASC'
  | 'ID_SS58_DESC'
  | 'IS_BIDDING_ASC'
  | 'IS_BIDDING_DESC'
  | 'IS_CURRENT_AUTHORITY_ASC'
  | 'IS_CURRENT_AUTHORITY_DESC'
  | 'IS_CURRENT_BACKUP_ASC'
  | 'IS_CURRENT_BACKUP_DESC'
  | 'IS_KEYHOLDER_ASC'
  | 'IS_KEYHOLDER_DESC'
  | 'IS_ONLINE_ASC'
  | 'IS_ONLINE_DESC'
  | 'IS_QUALIFIED_ASC'
  | 'IS_QUALIFIED_DESC'
  | 'LAST_HEARTBEAT_BLOCK_ID_ASC'
  | 'LAST_HEARTBEAT_BLOCK_ID_DESC'
  | 'LATEST_FUNDING_TIMESTAMP_ASC'
  | 'LATEST_FUNDING_TIMESTAMP_DESC'
  | 'LOCKED_BALANCE_ASC'
  | 'LOCKED_BALANCE_DESC'
  | 'NATURAL'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_AVERAGE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_COUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_COUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_DISTINCT_COUNT_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MAX_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_MIN_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_STDDEV_SAMPLE_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_SUM_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_POPULATION_VALIDATOR_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REASON_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_REASON_DESC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_ASC'
  | 'PENALTIES_BY_VALIDATOR_ID_VARIANCE_SAMPLE_VALIDATOR_ID_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'PROCESSOR_ID_ASC'
  | 'PROCESSOR_ID_DESC'
  | 'REPUTATION_POINTS_ASC'
  | 'REPUTATION_POINTS_DESC'
  | 'ROLE_ASC'
  | 'ROLE_DESC'
  | 'TOTAL_REWARDS_ASC'
  | 'TOTAL_REWARDS_DESC'
  | 'UNLOCKED_BALANCE_ASC'
  | 'UNLOCKED_BALANCE_DESC';

export type VolumeResult = HistogramData | WhitespaceData;

export type WhitespaceData = {
  __typename?: 'WhitespaceData';
  time: Scalars['Int']['output'];
};

export type _PrismaMigration = Node & {
  __typename?: '_PrismaMigration';
  appliedStepsCount: Scalars['Int']['output'];
  checksum: Scalars['String']['output'];
  finishedAt?: Maybe<Scalars['Datetime']['output']>;
  id: Scalars['String']['output'];
  logs?: Maybe<Scalars['String']['output']>;
  migrationName: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  rolledBackAt?: Maybe<Scalars['Datetime']['output']>;
  startedAt: Scalars['Datetime']['output'];
};

export type _PrismaMigrationAggregates = {
  __typename?: '_PrismaMigrationAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<_PrismaMigrationAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<_PrismaMigrationDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<_PrismaMigrationMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<_PrismaMigrationMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<_PrismaMigrationStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<_PrismaMigrationStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<_PrismaMigrationSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<_PrismaMigrationVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<_PrismaMigrationVarianceSampleAggregates>;
};

export type _PrismaMigrationAverageAggregates = {
  __typename?: '_PrismaMigrationAverageAggregates';
  /** Mean average of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `_PrismaMigration` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type _PrismaMigrationCondition = {
  /** Checks for equality with the object’s `appliedStepsCount` field. */
  appliedStepsCount?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `checksum` field. */
  checksum?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `finishedAt` field. */
  finishedAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `logs` field. */
  logs?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `migrationName` field. */
  migrationName?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `rolledBackAt` field. */
  rolledBackAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `startedAt` field. */
  startedAt?: InputMaybe<Scalars['Datetime']['input']>;
};

export type _PrismaMigrationDistinctCountAggregates = {
  __typename?: '_PrismaMigrationDistinctCountAggregates';
  /** Distinct count of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of checksum across the matching connection */
  checksum?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of finishedAt across the matching connection */
  finishedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of logs across the matching connection */
  logs?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of migrationName across the matching connection */
  migrationName?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rolledBackAt across the matching connection */
  rolledBackAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startedAt across the matching connection */
  startedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `_PrismaMigration` object types. All fields are combined with a logical ‘and.’ */
export type _PrismaMigrationFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<_PrismaMigrationFilter>>;
  /** Filter by the object’s `appliedStepsCount` field. */
  appliedStepsCount?: InputMaybe<IntFilter>;
  /** Filter by the object’s `checksum` field. */
  checksum?: InputMaybe<StringFilter>;
  /** Filter by the object’s `finishedAt` field. */
  finishedAt?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `logs` field. */
  logs?: InputMaybe<StringFilter>;
  /** Filter by the object’s `migrationName` field. */
  migrationName?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<_PrismaMigrationFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<_PrismaMigrationFilter>>;
  /** Filter by the object’s `rolledBackAt` field. */
  rolledBackAt?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `startedAt` field. */
  startedAt?: InputMaybe<DatetimeFilter>;
};

export type _PrismaMigrationMaxAggregates = {
  __typename?: '_PrismaMigrationMaxAggregates';
  /** Maximum of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['Int']['output']>;
};

export type _PrismaMigrationMinAggregates = {
  __typename?: '_PrismaMigrationMinAggregates';
  /** Minimum of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['Int']['output']>;
};

export type _PrismaMigrationStddevPopulationAggregates = {
  __typename?: '_PrismaMigrationStddevPopulationAggregates';
  /** Population standard deviation of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationStddevSampleAggregates = {
  __typename?: '_PrismaMigrationStddevSampleAggregates';
  /** Sample standard deviation of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationSumAggregates = {
  __typename?: '_PrismaMigrationSumAggregates';
  /** Sum of appliedStepsCount across the matching connection */
  appliedStepsCount: Scalars['BigInt']['output'];
};

export type _PrismaMigrationVariancePopulationAggregates = {
  __typename?: '_PrismaMigrationVariancePopulationAggregates';
  /** Population variance of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationVarianceSampleAggregates = {
  __typename?: '_PrismaMigrationVarianceSampleAggregates';
  /** Sample variance of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `_PrismaMigration` values. */
export type _PrismaMigrationsConnection = {
  __typename?: '_PrismaMigrationsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<_PrismaMigrationAggregates>;
  /** A list of edges which contains the `_PrismaMigration` and cursor to aid in pagination. */
  edges: Array<_PrismaMigrationsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<_PrismaMigrationAggregates>>;
  /** A list of `_PrismaMigration` objects. */
  nodes: Array<_PrismaMigration>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `_PrismaMigration` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `_PrismaMigration` values. */
export type _PrismaMigrationsConnectionGroupedAggregatesArgs = {
  groupBy: Array<_PrismaMigrationsGroupBy>;
  having?: InputMaybe<_PrismaMigrationsHavingInput>;
};

/** A `_PrismaMigration` edge in the connection. */
export type _PrismaMigrationsEdge = {
  __typename?: '_PrismaMigrationsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `_PrismaMigration` at the end of the edge. */
  node: _PrismaMigration;
};

/** Grouping methods for `_PrismaMigration` for usage during aggregation. */
export type _PrismaMigrationsGroupBy =
  | 'APPLIED_STEPS_COUNT'
  | 'CHECKSUM'
  | 'FINISHED_AT'
  | 'FINISHED_AT_TRUNCATED_TO_DAY'
  | 'FINISHED_AT_TRUNCATED_TO_HOUR'
  | 'LOGS'
  | 'MIGRATION_NAME'
  | 'ROLLED_BACK_AT'
  | 'ROLLED_BACK_AT_TRUNCATED_TO_DAY'
  | 'ROLLED_BACK_AT_TRUNCATED_TO_HOUR'
  | 'STARTED_AT'
  | 'STARTED_AT_TRUNCATED_TO_DAY'
  | 'STARTED_AT_TRUNCATED_TO_HOUR';

export type _PrismaMigrationsHavingAverageInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingDistinctCountInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `_PrismaMigration` aggregates. */
export type _PrismaMigrationsHavingInput = {
  AND?: InputMaybe<Array<_PrismaMigrationsHavingInput>>;
  OR?: InputMaybe<Array<_PrismaMigrationsHavingInput>>;
  average?: InputMaybe<_PrismaMigrationsHavingAverageInput>;
  distinctCount?: InputMaybe<_PrismaMigrationsHavingDistinctCountInput>;
  max?: InputMaybe<_PrismaMigrationsHavingMaxInput>;
  min?: InputMaybe<_PrismaMigrationsHavingMinInput>;
  stddevPopulation?: InputMaybe<_PrismaMigrationsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<_PrismaMigrationsHavingStddevSampleInput>;
  sum?: InputMaybe<_PrismaMigrationsHavingSumInput>;
  variancePopulation?: InputMaybe<_PrismaMigrationsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<_PrismaMigrationsHavingVarianceSampleInput>;
};

export type _PrismaMigrationsHavingMaxInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingMinInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingStddevPopulationInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingStddevSampleInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingSumInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingVariancePopulationInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingVarianceSampleInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

/** Methods to use when ordering `_PrismaMigration`. */
export type _PrismaMigrationsOrderBy =
  | 'APPLIED_STEPS_COUNT_ASC'
  | 'APPLIED_STEPS_COUNT_DESC'
  | 'CHECKSUM_ASC'
  | 'CHECKSUM_DESC'
  | 'FINISHED_AT_ASC'
  | 'FINISHED_AT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LOGS_ASC'
  | 'LOGS_DESC'
  | 'MIGRATION_NAME_ASC'
  | 'MIGRATION_NAME_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'ROLLED_BACK_AT_ASC'
  | 'ROLLED_BACK_AT_DESC'
  | 'STARTED_AT_ASC'
  | 'STARTED_AT_DESC';

export type GetFundingEventsQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetFundingEventsQuery = { __typename?: 'Query', account?: { __typename?: 'Account', events: { __typename?: 'AccountFundingEventsConnection', totalCount: number, edges: Array<{ __typename?: 'AccountFundingEventsEdge', node: { __typename?: 'AccountFundingEvent', id: number, amount: string, type: FundingEventType, event: { __typename?: 'Event', indexInBlock: number, blockId: number, block: { __typename?: 'Block', hash: string, timestamp: string }, extrinsic?: { __typename?: 'Extrinsic', id: string, hash: string, args?: any | null } | null } } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, startCursor?: any | null, hasPreviousPage: boolean } } } | null };

export type GetExtrinsicsByAccountQueryVariables = Exact<{
  accountId?: InputMaybe<Scalars['Int']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type GetExtrinsicsByAccountQuery = { __typename?: 'Query', extrinsics?: { __typename?: 'ExtrinsicsConnection', pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'ExtrinsicsEdge', node: { __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, account?: { __typename?: 'Account', id: number, idSs58: string } | null, block: { __typename?: 'Block', id: number, hash: string, timestamp: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } } }> } | null };

export type PaginatedPenaltiesQueryQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  startBlockId: Scalars['Int']['input'];
}>;


export type PaginatedPenaltiesQueryQuery = { __typename?: 'Query', allPenalties?: { __typename?: 'PenaltiesConnection', totalCount: number, edges: Array<{ __typename?: 'PenaltiesEdge', node: { __typename?: 'Penalty', id: number, reason: string, amount: number, validator: { __typename?: 'Validator', id: number, account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, block: { __typename?: 'Block', id: number, timestamp: string } } }> } | null };

export type PaginatedPenaltiesByValidatorQueryQueryVariables = Exact<{
  validatorId?: InputMaybe<Scalars['Int']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type PaginatedPenaltiesByValidatorQueryQuery = { __typename?: 'Query', penalties?: { __typename?: 'PenaltiesConnection', pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges: Array<{ __typename?: 'PenaltiesEdge', node: { __typename?: 'Penalty', id: number, reason: string, amount: number, validator: { __typename?: 'Validator', id: number, account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, block: { __typename?: 'Block', id: number, timestamp: string } } }> } | null };

export type GetLatestBlocksQueryVariables = Exact<{
  limit?: Scalars['Int']['input'];
}>;


export type GetLatestBlocksQuery = { __typename?: 'Query', latestBlocks?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number, timestamp: string, extrinsics: { __typename?: 'ExtrinsicsConnection', totalCount: number }, events: { __typename?: 'EventsConnection', totalCount: number }, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null }> } | null };

export type GetTotalBlockCountQueryVariables = Exact<{ [key: string]: never; }>;


export type GetTotalBlockCountQuery = { __typename?: 'Query', latestBlock?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', totalCount: number }> } | null };

export type GetAllBlocksQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAllBlocksQuery = { __typename?: 'Query', allBlocks?: { __typename?: 'BlocksConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'BlocksEdge', node: { __typename?: 'Block', id: number, timestamp: string, extrinsics: { __typename?: 'ExtrinsicsConnection', totalCount: number }, events: { __typename?: 'EventsConnection', totalCount: number }, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null } }> } | null };

export type GetBlockByHashQueryVariables = Exact<{
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetBlockByHashQuery = { __typename?: 'Query', blocks?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number, hash: string, timestamp: string, stateRoot: string, parentHash: string, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, extrinsics: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> } }> } }> } | null, lastBlocks?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number }> } | null };

export type GetBlockByIdQueryVariables = Exact<{
  id?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetBlockByIdQuery = { __typename?: 'Query', blocks?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number, hash: string, timestamp: string, stateRoot: string, parentHash: string, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, extrinsics: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> } }> } }> } | null, lastBlocks?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number }> } | null };

export type GetBrokerAccountDataQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetBrokerAccountDataQuery = { __typename?: 'Query', account?: { __typename?: 'Account', alias?: string | null, broker?: { __typename?: 'Broker', channels: { __typename?: 'SwapChannelsConnection', nodes: Array<{ __typename?: 'SwapChannel', commission: number, swaps: { __typename?: 'SwapsConnection', aggregates?: { __typename?: 'SwapAggregates', sum?: { __typename?: 'SwapSumAggregates', egressValueUsd: string } | null } | null, nodes: Array<{ __typename?: 'Swap', fees: { __typename?: 'SwapFeesConnection', aggregates?: { __typename?: 'SwapFeeAggregates', sum?: { __typename?: 'SwapFeeSumAggregates', valueUsd: string } | null } | null } }> } }> } } | null } | null };

export type GetBrokerAccountCacheDataQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetBrokerAccountCacheDataQuery = { __typename?: 'Query', broker?: { __typename?: 'BrokerAccount', flipBalance: string, idSs58: string, feesEarned: { __typename?: 'BrokerAccountEarnedFeesConnection', groupedAggregates?: Array<{ __typename?: 'BrokerAccountEarnedFeeAggregates', keys?: Array<string> | null, sum?: { __typename?: 'BrokerAccountEarnedFeeSumAggregates', amount: string } | null }> | null } } | null };

export type GetBrokerFeeAndWithdrawalDataQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetBrokerFeeAndWithdrawalDataQuery = { __typename?: 'Query', account?: { __typename?: 'Account', broker?: { __typename?: 'Broker', feesAndWithdrawals: { __typename?: 'BrokerFeeAndWithdrawalsConnection', totalCount: number, edges: Array<{ __typename?: 'BrokerFeeAndWithdrawalsEdge', node: { __typename?: 'BrokerFeeAndWithdrawal', amount: string, asset: ChainflipAsset, chain: ChainflipChain, eventId: string, type: string, valueUsd: string, event?: { __typename?: 'Event', blockId: number, indexInBlock: number, block: { __typename?: 'Block', timestamp: string } } | null } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, startCursor?: any | null, hasPreviousPage: boolean } } } | null } | null };

export type GetRuntimeVersionQueryVariables = Exact<{ [key: string]: never; }>;


export type GetRuntimeVersionQuery = { __typename?: 'Query', allEnvironmentAddresses?: { __typename?: 'EnvironmentAddressesConnection', nodes: Array<{ __typename?: 'EnvironmentAddress', runtimeVersion: number }> } | null };

export type GetAllEpochsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAllEpochsQuery = { __typename?: 'Query', epochs?: { __typename?: 'EpochesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null }, edges: Array<{ __typename?: 'EpochesEdge', node: { __typename?: 'Epoch', id: number, bond: string, totalBonded: string, startBlock: { __typename?: 'Block', id: number, hash: string, timestamp: string }, endBlock?: { __typename?: 'Block', id: number, hash: string, timestamp: string } | null } }> } | null };

export type GetEpochsByIdQueryVariables = Exact<{
  epochId: Scalars['Int']['input'];
}>;


export type GetEpochsByIdQuery = { __typename?: 'Query', epoch?: { __typename?: 'Epoch', id: number, bond: string, totalBonded: string, startBlock: { __typename?: 'Block', id: number, hash: string, timestamp: string }, endBlock?: { __typename?: 'Block', id: number, hash: string, timestamp: string } | null } | null };

export type GetAuthorityMembershipsForEpochQueryVariables = Exact<{
  epochId: Scalars['Int']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAuthorityMembershipsForEpochQuery = { __typename?: 'Query', memberships?: { __typename?: 'AuthorityMembershipsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null }, edges: Array<{ __typename?: 'AuthorityMembershipsEdge', node: { __typename?: 'AuthorityMembership', id: number, bid: string, reward: string, validator: { __typename?: 'Validator', id: number, account: { __typename?: 'Account', id: number, idSs58: string, alias?: string | null, fundingEvents: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', keys?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } } } } }> } | null };

export type GetActiveAuthorityInfoQueryVariables = Exact<{ [key: string]: never; }>;


export type GetActiveAuthorityInfoQuery = { __typename?: 'Query', epoch?: { __typename?: 'EpochesConnection', nodes: Array<{ __typename?: 'Epoch', id: number, startBlockId: number, endBlockId?: number | null, memberships: { __typename?: 'AuthorityMembershipsConnection', nodes: Array<{ __typename?: 'AuthorityMembership', id: number, bid: string, reward: string, validator: { __typename?: 'Validator', id: number, cfeVersion: string, account: { __typename?: 'Account', id: number, alias?: string | null, idSs58: string }, totalMemberships: { __typename?: 'AuthorityMembershipsConnection', totalCount: number } } }> }, slashedEvents: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', accountId?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } }> } | null, lastBlock?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number }> } | null };

export type GetAuthorityMembershipsForValidatorQueryVariables = Exact<{
  validatorId?: InputMaybe<Scalars['Int']['input']>;
  accountId?: InputMaybe<Scalars['Int']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAuthorityMembershipsForValidatorQuery = { __typename?: 'Query', memberships?: { __typename?: 'AuthorityMembershipsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasPreviousPage: boolean, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'AuthorityMembershipsEdge', node: { __typename?: 'AuthorityMembership', id: number, reward: string, epoch: { __typename?: 'Epoch', id: number, startBlockId: number, endBlockId?: number | null, bond: string, totalBonded: string, eventType: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', type?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } } } }> } | null };

export type GetValidatorLatestBlockInfoQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetValidatorLatestBlockInfoQuery = { __typename?: 'Query', accounts?: { __typename?: 'AccountsConnection', nodes: Array<{ __typename?: 'Account', id: number, alias?: string | null, idSs58: string, boundRedeemAddress?: string | null, historicRewards: { __typename?: 'AccountEpochBalanceChangesConnection', aggregates?: { __typename?: 'AccountEpochBalanceChangeAggregates', sum?: { __typename?: 'AccountEpochBalanceChangeSumAggregates', startOfEpochBalance: string, endOfEpochBalance: string, balanceChange: string } | null } | null }, currentRewards: { __typename?: 'AccountEpochBalanceChangesConnection', nodes: Array<{ __typename?: 'AccountEpochBalanceChange', startOfEpochBalance: string, balanceChange: string }> }, validators: { __typename?: 'ValidatorsConnection', nodes: Array<{ __typename?: 'Validator', id: number, lastHeartbeatBlockId?: number | null, cfeVersion: string, membership: { __typename?: 'AuthorityMembershipsConnection', nodes: Array<{ __typename?: 'AuthorityMembership', epochId: number }> } }> } }> } | null };

export type GetHistoricalTotalBondQueryVariables = Exact<{ [key: string]: never; }>;


export type GetHistoricalTotalBondQuery = { __typename?: 'Query', epochs?: { __typename?: 'EpochesConnection', nodes: Array<{ __typename?: 'Epoch', totalBonded: string, epochId: number, block: { __typename?: 'Block', timestamp: string } }> } | null };

export type GetOnlineAuthorityMemberInfoQueryVariables = Exact<{
  minEpochStartBlockId: Scalars['Int']['input'];
}>;


export type GetOnlineAuthorityMemberInfoQuery = { __typename?: 'Query', epochs?: { __typename?: 'EpochesConnection', nodes: Array<{ __typename?: 'Epoch', epochId: number, startBlock: { __typename?: 'Block', timestamp: string }, endBlock?: { __typename?: 'Block', timestamp: string } | null, members: { __typename?: 'AuthorityMembershipsConnection', totalCount: number }, heartbeats: { __typename?: 'AuthorityHeartbeatsConnection', groupedAggregates?: Array<{ __typename?: 'AuthorityHeartbeatAggregates', timestampHourUTC?: Array<string> | null, distinctCount?: { __typename?: 'AuthorityHeartbeatDistinctCountAggregates', validators?: string | null } | null }> | null } }> } | null };

export type GetEventsByBlockIdAndIndexQueryVariables = Exact<{
  blockId: Scalars['Int']['input'];
  index: Scalars['Int']['input'];
}>;


export type GetEventsByBlockIdAndIndexQuery = { __typename?: 'Query', events?: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', args?: any | null, extrinsic?: { __typename?: 'Extrinsic', indexInBlock: number } | null, metadata: { __typename?: 'Metadatum', name: string, chainspec: string } }> } | null };

export type GetExtrinsicByHashQueryVariables = Exact<{
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetExtrinsicByHashQuery = { __typename?: 'Query', extrinsics?: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, account?: { __typename?: 'Account', id: number, idSs58: string } | null, block: { __typename?: 'Block', id: number, hash: string, timestamp: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> } | null };

export type GetExtrinsicByBlockIdAndIndexQueryVariables = Exact<{
  blockId: Scalars['Int']['input'];
  index: Scalars['Int']['input'];
}>;


export type GetExtrinsicByBlockIdAndIndexQuery = { __typename?: 'Query', extrinsics?: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', indexInBlock: number, id: string, args?: any | null, metadata: { __typename?: 'Metadatum', name: string, id: number, label: string } }> }, account?: { __typename?: 'Account', id: number, idSs58: string } | null, block: { __typename?: 'Block', id: number, hash: string, timestamp: string }, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> } | null };

export type GetExtrinsicCountQueryVariables = Exact<{ [key: string]: never; }>;


export type GetExtrinsicCountQuery = { __typename?: 'Query', allExtrinsics?: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string }> } | null };

export type PenaltyFragment = { __typename?: 'Penalty', id: number, reason: string, amount: number, validator: { __typename?: 'Validator', id: number, account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, block: { __typename?: 'Block', id: number, timestamp: string } };

export type BlockListBlockFragment = { __typename?: 'Block', id: number, timestamp: string, extrinsics: { __typename?: 'ExtrinsicsConnection', totalCount: number }, events: { __typename?: 'EventsConnection', totalCount: number }, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null };

export type BlockWithEventsAndExtrinsicsFragment = { __typename?: 'Block', id: number, hash: string, timestamp: string, stateRoot: string, parentHash: string, validator?: { __typename?: 'Validator', account: { __typename?: 'Account', idSs58: string } } | null, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, extrinsics: { __typename?: 'ExtrinsicsConnection', nodes: Array<{ __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, blockId: number, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> } }> } };

export type EpochFragment = { __typename?: 'Epoch', id: number, bond: string, totalBonded: string, startBlock: { __typename?: 'Block', id: number, hash: string, timestamp: string }, endBlock?: { __typename?: 'Block', id: number, hash: string, timestamp: string } | null };

export type EpochWithMembershipsFragment = { __typename?: 'Epoch', id: number, startBlockId: number, endBlockId?: number | null, memberships: { __typename?: 'AuthorityMembershipsConnection', nodes: Array<{ __typename?: 'AuthorityMembership', id: number, bid: string, reward: string, validator: { __typename?: 'Validator', id: number, cfeVersion: string, account: { __typename?: 'Account', id: number, alias?: string | null, idSs58: string }, totalMemberships: { __typename?: 'AuthorityMembershipsConnection', totalCount: number } } }> }, slashedEvents: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', accountId?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } };

export type AccountWithPossibleValidatorFragment = { __typename?: 'Account', id: number, alias?: string | null, idSs58: string, boundRedeemAddress?: string | null, historicRewards: { __typename?: 'AccountEpochBalanceChangesConnection', aggregates?: { __typename?: 'AccountEpochBalanceChangeAggregates', sum?: { __typename?: 'AccountEpochBalanceChangeSumAggregates', startOfEpochBalance: string, endOfEpochBalance: string, balanceChange: string } | null } | null }, currentRewards: { __typename?: 'AccountEpochBalanceChangesConnection', nodes: Array<{ __typename?: 'AccountEpochBalanceChange', startOfEpochBalance: string, balanceChange: string }> }, validators: { __typename?: 'ValidatorsConnection', nodes: Array<{ __typename?: 'Validator', id: number, lastHeartbeatBlockId?: number | null, cfeVersion: string, membership: { __typename?: 'AuthorityMembershipsConnection', nodes: Array<{ __typename?: 'AuthorityMembership', epochId: number }> } }> } };

export type AuthorityMembershipWithEpochFragment = { __typename?: 'AuthorityMembership', id: number, reward: string, epoch: { __typename?: 'Epoch', id: number, startBlockId: number, endBlockId?: number | null, bond: string, totalBonded: string, eventType: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', type?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } } };

export type AuthorityMembershipWithValidatorFragment = { __typename?: 'AuthorityMembership', id: number, bid: string, reward: string, validator: { __typename?: 'Validator', id: number, account: { __typename?: 'Account', id: number, idSs58: string, alias?: string | null, fundingEvents: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', keys?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } } } };

export type ExtrinsicFragment = { __typename?: 'Extrinsic', id: string, args?: any | null, fee?: string | null, hash: string, blockId: number, indexInBlock: number, signature?: string | null, success: boolean, tip?: string | null, account?: { __typename?: 'Account', id: number, idSs58: string } | null, block: { __typename?: 'Block', id: number, hash: string, timestamp: string }, events: { __typename?: 'EventsConnection', nodes: Array<{ __typename?: 'Event', id: string, args?: any | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } }> }, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } };

export type AccountFundingEventFragment = { __typename?: 'AccountFundingEvent', id: number, amount: string, type: FundingEventType, event: { __typename?: 'Event', indexInBlock: number, blockId: number, block: { __typename?: 'Block', hash: string, timestamp: string }, extrinsic?: { __typename?: 'Extrinsic', id: string, hash: string, args?: any | null } | null } };

export type EventFragment = { __typename?: 'Event', id: string, args?: any | null, metadata: { __typename?: 'Metadatum', id: number, name: string, label: string } };

export type SwapFragment = { __typename?: 'Swap', id: number, nativeId: string, sourceAsset: ChainflipAsset, depositAmount: string, depositValueUsd: string, destinationAsset: ChainflipAsset, destinationAddress: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmDepositReceivedEventId?: string | null, swapScheduledBlockTimestamp: string, egressScheduledEventId?: string | null, egressIgnoredEventId?: string | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null } | null };

export type LiquidityDepositChannelInfoFragment = { __typename?: 'LiquidityDepositChannel', id: number, asset: ChainflipAsset, chain: ChainflipChain, depositAddress: string, channelId: string, sourceChainExpiryBlock: string, isExpired: boolean, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, deposits: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', depositAmount: string, fee?: string | null, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, event: { __typename?: 'Event', id: string, indexInBlock: number }, block: { __typename?: 'Block', id: number, timestamp: string } }>, aggregates?: { __typename?: 'LiquidityDepositAggregates', sum?: { __typename?: 'LiquidityDepositSumAggregates', depositValueUsd: string } | null } | null }, block: { __typename?: 'Block', timestamp: string, id: number }, event: { __typename?: 'Event', id: string, indexInBlock: number } };

export type GetLiquidityDepositChannelQueryVariables = Exact<{
  channelId: Scalars['BigInt']['input'];
  chain: ChainflipChain;
  issuedBlockId: Scalars['Int']['input'];
}>;


export type GetLiquidityDepositChannelQuery = { __typename?: 'Query', channels?: { __typename?: 'LiquidityDepositChannelsConnection', nodes: Array<{ __typename?: 'LiquidityDepositChannel', id: number, asset: ChainflipAsset, chain: ChainflipChain, depositAddress: string, channelId: string, sourceChainExpiryBlock: string, isExpired: boolean, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, deposits: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', depositAmount: string, fee?: string | null, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, event: { __typename?: 'Event', id: string, indexInBlock: number }, block: { __typename?: 'Block', id: number, timestamp: string } }>, aggregates?: { __typename?: 'LiquidityDepositAggregates', sum?: { __typename?: 'LiquidityDepositSumAggregates', depositValueUsd: string } | null } | null }, block: { __typename?: 'Block', timestamp: string, id: number }, event: { __typename?: 'Event', id: string, indexInBlock: number } }> } | null };

export type GetCacheUndeployedLiquidityQueryVariables = Exact<{
  lpIdSs58?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetCacheUndeployedLiquidityQuery = { __typename?: 'Query', depositBalances?: { __typename?: 'DepositBalancesConnection', groupedAggregates?: Array<{ __typename?: 'DepositBalanceAggregates', keys?: Array<string> | null, sum?: { __typename?: 'DepositBalanceSumAggregates', amount: string } | null }> | null } | null };

export type GetLastLiquidityDepositQueryVariables = Exact<{
  asset: ChainflipAsset;
}>;


export type GetLastLiquidityDepositQuery = { __typename?: 'Query', deposits?: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', asset: ChainflipAsset, block: { __typename?: 'Block', timestamp: string } }> } | null };

export type GetLastLiquidityDepositForAccountQueryVariables = Exact<{
  asset: ChainflipAsset;
  lpIdSs58: Scalars['String']['input'];
}>;


export type GetLastLiquidityDepositForAccountQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', deposits: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', asset: ChainflipAsset, block: { __typename?: 'Block', timestamp: string } }> } } | null } | null };

export type LpAccountWithBalancesFragment = { __typename?: 'LpAccount', idSs58: string, alias?: string | null, openOrders: any, balances: { __typename?: 'DepositBalancesConnection', nodes: Array<{ __typename?: 'DepositBalance', chain: ChainflipChain, asset: ChainflipAsset, amount: string }> } };

export type PoolFragment = { __typename?: 'Pool', id: number, baseAsset: ChainflipAsset, quoteAsset: ChainflipAsset, price: number };

export type LiquidityBalanceEventFragment = { __typename?: 'LiquidityBalanceEvent', eventId?: string | null, amount: string, asset: ChainflipAsset, valueUsd: string, event?: { __typename?: 'Event', blockId: number, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string }, extrinsic?: { __typename?: 'Extrinsic', indexInBlock: number, blockId: number } | null } | null, depositChannel?: { __typename?: 'LiquidityDepositChannel', chain: ChainflipChain, channelId: string, issuedBlockId: number } | null, broadcast?: { __typename?: 'Broadcast', id: number, broadcastSuccessEventId?: string | null } | null };

export type GetFilteredLpAccountsWithBalancesQueryVariables = Exact<{
  filter?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetFilteredLpAccountsWithBalancesQuery = { __typename?: 'Query', lps?: { __typename?: 'LpAccountsConnection', totalCount: number, nodes: Array<{ __typename?: 'LpAccount', idSs58: string, alias?: string | null, openOrders: any, balances: { __typename?: 'DepositBalancesConnection', nodes: Array<{ __typename?: 'DepositBalance', chain: ChainflipChain, asset: ChainflipAsset, amount: string }> } }> } | null, pools?: { __typename?: 'PoolsConnection', nodes: Array<{ __typename?: 'Pool', id: number, baseAsset: ChainflipAsset, quoteAsset: ChainflipAsset, price: number }> } | null };

export type GetLpAcccountsWithCollectedFeesQueryVariables = Exact<{
  accountIds: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type GetLpAcccountsWithCollectedFeesQuery = { __typename?: 'Query', allAccounts?: { __typename?: 'AccountsConnection', nodes: Array<{ __typename?: 'Account', idSs58: string, lp?: { __typename?: 'LiquidityProvider', fees: { __typename?: 'CollectedFeesConnection', aggregates?: { __typename?: 'CollectedFeeAggregates', sum?: { __typename?: 'CollectedFeeSumAggregates', valueUsd: string } | null } | null } } | null }> } | null };

export type GetLiquidityBalanceChangeEventsQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetLiquidityBalanceChangeEventsQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', events: { __typename?: 'LiquidityBalanceEventsConnection', totalCount: number, edges: Array<{ __typename?: 'LiquidityBalanceEventsEdge', node: { __typename?: 'LiquidityBalanceEvent', eventId?: string | null, amount: string, asset: ChainflipAsset, valueUsd: string, event?: { __typename?: 'Event', blockId: number, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string }, extrinsic?: { __typename?: 'Extrinsic', indexInBlock: number, blockId: number } | null } | null, depositChannel?: { __typename?: 'LiquidityDepositChannel', chain: ChainflipChain, channelId: string, issuedBlockId: number } | null, broadcast?: { __typename?: 'Broadcast', id: number, broadcastSuccessEventId?: string | null } | null } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, startCursor?: any | null, hasPreviousPage: boolean } } } | null } | null };

export type RefundAddressesFragment = { __typename?: 'LiquidityProvider', bitcoinRefundAddress?: string | null, ethereumRefundAddress?: string | null, polkadotRefundAddress?: string | null };

export type GetLpAccountWithRefundAddressesQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetLpAccountWithRefundAddressesQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', bitcoinRefundAddress?: string | null, ethereumRefundAddress?: string | null, polkadotRefundAddress?: string | null } | null } | null };

export type PoolOrderEventFragment = { __typename?: 'PoolOrderEvent', id: number, eventType: PoolEventType, orderType: PoolOrderType, baseAmount: string, baseAsset: ChainflipAsset, quoteAmount: string, maximumRate: string, minimumRate: string, timestamp: string, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, event: { __typename?: 'Event', indexInBlock: number, blockId: number } };

export type GetPoolActivityQueryVariables = Exact<{
  baseAsset: ChainflipAsset;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type GetPoolActivityQuery = { __typename?: 'Query', poolOrders?: { __typename?: 'PoolOrderEventsConnection', pageInfo: { __typename?: 'PageInfo', endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null }, edges: Array<{ __typename?: 'PoolOrderEventsEdge', node: { __typename?: 'PoolOrderEvent', id: number, eventType: PoolEventType, orderType: PoolOrderType, baseAmount: string, baseAsset: ChainflipAsset, quoteAmount: string, maximumRate: string, minimumRate: string, timestamp: string, lp: { __typename?: 'LiquidityProvider', account: { __typename?: 'Account', idSs58: string } }, event: { __typename?: 'Event', indexInBlock: number, blockId: number } } }> } | null };

export type GetPoolAggregatesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPoolAggregatesQuery = { __typename?: 'Query', poolSwaps?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null }> | null } | null };

export type GetPoolAggregatesByDateQueryVariables = Exact<{
  startingTimestamp: Scalars['Datetime']['input'];
  endingTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
}>;


export type GetPoolAggregatesByDateQuery = { __typename?: 'Query', poolSwaps?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null }> | null } | null };

export type GetPoolAggregatesByDateTruncatedToHourQueryVariables = Exact<{
  startingTimestamp: Scalars['Datetime']['input'];
  endingTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
}>;


export type GetPoolAggregatesByDateTruncatedToHourQuery = { __typename?: 'Query', poolSwaps?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAssetDate?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string } | null }> | null } | null };

export type GetEnvironmentAddressQueryVariables = Exact<{ [key: string]: never; }>;


export type GetEnvironmentAddressQuery = { __typename?: 'Query', environmentAddress?: { __typename?: 'EnvironmentAddress', keyManagerAddress: string, stateChainGatewayAddress: string } | null };

export type GetValidatorByIdSs58QueryVariables = Exact<{
  validatorId: Scalars['String']['input'];
}>;


export type GetValidatorByIdSs58Query = { __typename?: 'Query', validators?: { __typename?: 'ValidatorsConnection', nodes: Array<{ __typename?: 'Validator', idHex: string, idSs58: string, alias?: string | null, apyBp?: number | null, boundRedeemAddress?: string | null, processorId?: number | null, totalRewards?: string | null, isCurrentAuthority: boolean, isCurrentBackup: boolean, isQualified: boolean, isOnline: boolean, isBidding: boolean, isKeyholder: boolean, reputationPoints: number, lockedBalance: string, unlockedBalance: string, firstFundingTimestamp: string, latestFundingTimestamp: string }> } | null };

export type GetActiveCacheValidatorsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetActiveCacheValidatorsQuery = { __typename?: 'Query', validators?: { __typename?: 'ValidatorsConnection', nodes: Array<{ __typename?: 'Validator', idHex: string, idSs58: string, alias?: string | null, apyBp?: number | null, boundRedeemAddress?: string | null, processorId?: number | null, totalRewards?: string | null, isCurrentAuthority: boolean, isCurrentBackup: boolean, isQualified: boolean, isOnline: boolean, isBidding: boolean, isKeyholder: boolean, reputationPoints: number, lockedBalance: string, unlockedBalance: string, firstFundingTimestamp: string, latestFundingTimestamp: string }> } | null };

export type GetAllSwapsQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  destinationAddress?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetAllSwapsQuery = { __typename?: 'Query', allSwaps?: { __typename?: 'SwapsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'SwapsEdge', node: { __typename?: 'Swap', id: number, nativeId: string, sourceAsset: ChainflipAsset, depositAmount: string, depositValueUsd: string, destinationAsset: ChainflipAsset, destinationAddress: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmDepositReceivedEventId?: string | null, swapScheduledBlockTimestamp: string, egressScheduledEventId?: string | null, egressIgnoredEventId?: string | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null } | null } }> } | null };

export type GetSwapByNativeIdQueryVariables = Exact<{
  nativeId: Scalars['BigInt']['input'];
}>;


export type GetSwapByNativeIdQuery = { __typename?: 'Query', swap?: { __typename?: 'Swap', id: number, nativeId: string, sourceAsset: ChainflipAsset, depositAmount: string, depositValueUsd: string, destinationAsset: ChainflipAsset, destinationAddress: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmDepositReceivedEventId?: string | null, swapScheduledBlockTimestamp: string, egressScheduledEventId?: string | null, egressIgnoredEventId?: string | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null } | null } | null };

export type GetAllSwapsByAssetQueryVariables = Exact<{
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  baseAsset: ChainflipAsset;
}>;


export type GetAllSwapsByAssetQuery = { __typename?: 'Query', allSwaps?: { __typename?: 'SwapsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'SwapsEdge', node: { __typename?: 'Swap', id: number, nativeId: string, sourceAsset: ChainflipAsset, depositAmount: string, depositValueUsd: string, destinationAsset: ChainflipAsset, destinationAddress: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmDepositReceivedEventId?: string | null, swapScheduledBlockTimestamp: string, egressScheduledEventId?: string | null, egressIgnoredEventId?: string | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null } | null } }> } | null };

export type GetSwapAggregatesQueryVariables = Exact<{
  minSwapScheduledTimestamp?: Scalars['Datetime']['input'];
  maxSwapScheduledTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
}>;


export type GetSwapAggregatesQuery = { __typename?: 'Query', oneHopSwaps?: { __typename?: 'SwapsConnection', aggregatesBySourceAsset?: Array<{ __typename?: 'SwapAggregates', assetAndHour?: Array<string> | null, distinctCount?: { __typename?: 'SwapDistinctCountAggregates', id?: string | null } | null }> | null, aggregatesByDestAsset?: Array<{ __typename?: 'SwapAggregates', assetAndHour?: Array<string> | null, distinctCount?: { __typename?: 'SwapDistinctCountAggregates', id?: string | null } | null }> | null } | null, twoHopSwaps?: { __typename?: 'SwapsConnection', aggregatesBySourceAsset?: Array<{ __typename?: 'SwapAggregates', assetAndHour?: Array<string> | null, distinctCount?: { __typename?: 'SwapDistinctCountAggregates', id?: string | null } | null }> | null, aggregatesByDestAsset?: Array<{ __typename?: 'SwapAggregates', assetAndHour?: Array<string> | null, distinctCount?: { __typename?: 'SwapDistinctCountAggregates', id?: string | null } | null }> | null } | null };

export type SwapAggregatesFragmentFragment = { __typename?: 'SwapAggregates', assetAndHour?: Array<string> | null, distinctCount?: { __typename?: 'SwapDistinctCountAggregates', id?: string | null } | null };

export type ChannelInfoFragment = { __typename?: 'SwapChannel', id: number, channelId: string, depositAddress: string, destinationAddress: string, destinationChain: ChainflipChain, expiryBlockId?: number | null, issuedEventId: string, sourceChain: ChainflipChain, sourceAsset: ChainflipAsset, destinationAsset: ChainflipAsset, brokerCommissionRate: number, isExpired: boolean, sourceChainExpiryBlock?: string | null, issuedBlock: { __typename?: 'Block', id: number, timestamp: string }, issuedEvent: { __typename?: 'Event', indexInBlock: number }, expiryEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', timestamp: string } } | null };

export type GetSwapChannelDataQueryVariables = Exact<{
  channelId: Scalars['BigInt']['input'];
  sourceChain: ChainflipChain;
  issuedBlockId: Scalars['Int']['input'];
}>;


export type GetSwapChannelDataQuery = { __typename?: 'Query', channel?: { __typename?: 'SwapChannel', id: number, channelId: string, depositAddress: string, destinationAddress: string, destinationChain: ChainflipChain, expiryBlockId?: number | null, issuedEventId: string, sourceChain: ChainflipChain, sourceAsset: ChainflipAsset, destinationAsset: ChainflipAsset, brokerCommissionRate: number, isExpired: boolean, sourceChainExpiryBlock?: string | null, ignoredDeposits: { __typename?: 'IgnoredDepositsConnection', nodes: Array<{ __typename?: 'IgnoredDeposit', id: string, amount: string, reason: DepositIgnoredReason, event: { __typename?: 'Event', id: string, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } }> }, broker: { __typename?: 'Broker', account: { __typename?: 'Account', idSs58: string } }, swaps: { __typename?: 'SwapsConnection', nodes: Array<{ __typename?: 'Swap', destinationAsset: ChainflipAsset, nativeId: string, sourceAsset: ChainflipAsset, depositAmount: string, depositValueUsd: string, egressAmount?: string | null, egressValueUsd?: string | null, swapScheduledBlockTimestamp: string, intermediateAmount?: string | null, intermediateValueUsd?: string | null, executedEvent?: { __typename?: 'Event', block: { __typename?: 'Block', timestamp: string } } | null, swapFeesBySwapId: { __typename?: 'SwapFeesConnection', nodes: Array<{ __typename?: 'SwapFee', valueUsd?: string | null, amount: string, asset: ChainflipAsset, type: SwapFeeType }> } }> }, issuedBlock: { __typename?: 'Block', id: number, timestamp: string }, issuedEvent: { __typename?: 'Event', indexInBlock: number }, expiryEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', timestamp: string } } | null } | null, lastBlock?: { __typename?: 'BlocksConnection', nodes: Array<{ __typename?: 'Block', id: number }> } | null };

export type OpenChannelFragment = { __typename?: 'SwapChannel', brokerCommissionRate: number, channelId: string, destinationAddress: string, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, issuedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, broker: { __typename?: 'Broker', account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, swaps: { __typename?: 'SwapsConnection', aggregates?: { __typename?: 'SwapAggregates', sum?: { __typename?: 'SwapSumAggregates', egressValueUsd: string, intermediateValueUsd: string } | null } | null } };

export type GetOpenSwapChannelsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetOpenSwapChannelsQuery = { __typename?: 'Query', channels?: { __typename?: 'SwapChannelsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges: Array<{ __typename?: 'SwapChannelsEdge', node: { __typename?: 'SwapChannel', brokerCommissionRate: number, channelId: string, destinationAddress: string, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, issuedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, broker: { __typename?: 'Broker', account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, swaps: { __typename?: 'SwapsConnection', aggregates?: { __typename?: 'SwapAggregates', sum?: { __typename?: 'SwapSumAggregates', egressValueUsd: string, intermediateValueUsd: string } | null } | null } } }> } | null };

export type BrokerSwapChannelFragment = { __typename?: 'SwapChannel', isExpired: boolean, brokerCommissionRate: number, channelId: string, destinationAddress: string, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, issuedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, broker: { __typename?: 'Broker', account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, swaps: { __typename?: 'SwapsConnection', aggregates?: { __typename?: 'SwapAggregates', sum?: { __typename?: 'SwapSumAggregates', egressValueUsd: string, intermediateValueUsd: string } | null } | null } };

export type GetSwapChannelsByBrokerIdQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetSwapChannelsByBrokerIdQuery = { __typename?: 'Query', account?: { __typename?: 'Account', broker?: { __typename?: 'Broker', channels: { __typename?: 'SwapChannelsConnection', totalCount: number, edges: Array<{ __typename?: 'SwapChannelsEdge', node: { __typename?: 'SwapChannel', isExpired: boolean, brokerCommissionRate: number, channelId: string, destinationAddress: string, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, issuedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, broker: { __typename?: 'Broker', account: { __typename?: 'Account', idSs58: string, alias?: string | null } }, swaps: { __typename?: 'SwapsConnection', aggregates?: { __typename?: 'SwapAggregates', sum?: { __typename?: 'SwapSumAggregates', egressValueUsd: string, intermediateValueUsd: string } | null } | null } } }> } } | null } | null };

export type SwapInfoFragment = { __typename?: 'Swap', nativeId: string, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, destinationAddress: string, depositAmount: string, depositValueUsd: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmMessage?: string | null, egressIgnoredEventId?: string | null, ccmDepositReceivedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, scheduledEvent: { __typename?: 'Event', indexInBlock: number, args?: any | null, block: { __typename?: 'Block', id: number, timestamp: string } }, executedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, egressScheduledEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, egressIgnoredEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null, transactionPayload?: string | null, successEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, requestedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, abortedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null } | null, channel?: { __typename?: 'SwapChannel', id: number, channelId: string, depositAddress: string, destinationAddress: string, destinationChain: ChainflipChain, expiryBlockId?: number | null, issuedEventId: string, sourceChain: ChainflipChain, sourceAsset: ChainflipAsset, destinationAsset: ChainflipAsset, brokerCommissionRate: number, isExpired: boolean, sourceChainExpiryBlock?: string | null, issuedBlock: { __typename?: 'Block', id: number, timestamp: string }, issuedEvent: { __typename?: 'Event', indexInBlock: number }, expiryEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', timestamp: string } } | null } | null, swapFeesBySwapId: { __typename?: 'SwapFeesConnection', edges: Array<{ __typename?: 'SwapFeesEdge', node: { __typename?: 'SwapFee', valueUsd?: string | null, amount: string, asset: ChainflipAsset, type: SwapFeeType } }> }, error?: { __typename?: 'StateChainError', name: string, docs: string } | null };

export type SwapFeeFragment = { __typename?: 'SwapFee', valueUsd?: string | null, amount: string, asset: ChainflipAsset, type: SwapFeeType };

export type GetSwapDataByNativeIdQueryVariables = Exact<{
  nativeId: Scalars['BigInt']['input'];
}>;


export type GetSwapDataByNativeIdQuery = { __typename?: 'Query', swap?: { __typename?: 'Swap', nativeId: string, sourceAsset: ChainflipAsset, sourceChain: ChainflipChain, destinationAsset: ChainflipAsset, destinationChain: ChainflipChain, destinationAddress: string, depositAmount: string, depositValueUsd: string, egressAmount?: string | null, egressValueUsd?: string | null, intermediateAmount?: string | null, intermediateValueUsd?: string | null, ccmMessage?: string | null, egressIgnoredEventId?: string | null, ccmDepositReceivedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, scheduledEvent: { __typename?: 'Event', indexInBlock: number, args?: any | null, block: { __typename?: 'Block', id: number, timestamp: string } }, executedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, egressScheduledEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, egressIgnoredEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, broadcast?: { __typename?: 'Broadcast', broadcastRequestedEventId: string, broadcastAbortedEventId?: string | null, broadcastSuccessEventId?: string | null, transactionPayload?: string | null, successEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null, requestedEvent: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } }, abortedEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string } } | null } | null, channel?: { __typename?: 'SwapChannel', id: number, channelId: string, depositAddress: string, destinationAddress: string, destinationChain: ChainflipChain, expiryBlockId?: number | null, issuedEventId: string, sourceChain: ChainflipChain, sourceAsset: ChainflipAsset, destinationAsset: ChainflipAsset, brokerCommissionRate: number, isExpired: boolean, sourceChainExpiryBlock?: string | null, issuedBlock: { __typename?: 'Block', id: number, timestamp: string }, issuedEvent: { __typename?: 'Event', indexInBlock: number }, expiryEvent?: { __typename?: 'Event', indexInBlock: number, block: { __typename?: 'Block', timestamp: string } } | null } | null, swapFeesBySwapId: { __typename?: 'SwapFeesConnection', edges: Array<{ __typename?: 'SwapFeesEdge', node: { __typename?: 'SwapFee', valueUsd?: string | null, amount: string, asset: ChainflipAsset, type: SwapFeeType } }> }, error?: { __typename?: 'StateChainError', name: string, docs: string } | null } | null };

export type GetLastDepositsQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetLastDepositsQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', deposits: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', id: number, depositAmount: string, channel: { __typename?: 'LiquidityDepositChannel', asset: ChainflipAsset, chain: ChainflipChain, issuedBlockId: number, channelId: string } }> } } | null } | null };

export type GetDepositsForSpecificLiquidityDepositChannelQueryVariables = Exact<{
  channelId?: InputMaybe<Scalars['BigInt']['input']>;
  chain?: InputMaybe<ChainflipChain>;
  issuedBlockId?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetDepositsForSpecificLiquidityDepositChannelQuery = { __typename?: 'Query', channels?: { __typename?: 'LiquidityDepositChannelsConnection', nodes: Array<{ __typename?: 'LiquidityDepositChannel', id: number, asset: ChainflipAsset, chain: ChainflipChain, channelId: string, depositAddress: string, deposits: { __typename?: 'LiquidityDepositsConnection', nodes: Array<{ __typename?: 'LiquidityDeposit', depositAmount: string, event: { __typename?: 'Event', blockId: number, indexInBlock: number } }> } }> } | null };

export type GetCollectedFeesQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
  baseAsset?: InputMaybe<ChainflipAsset>;
}>;


export type GetCollectedFeesQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', poolOrderEvents: { __typename?: 'PoolOrdersConnection', aggregates?: { __typename?: 'PoolOrderAggregates', sum?: { __typename?: 'PoolOrderSumAggregates', baseCollectedFeesUsd: string, quoteCollectedFeesUsd: string } | null } | null } } | null } | null };

export type GetSpecificPoolSwapsDataQueryVariables = Exact<{
  date24HoursAgo: Scalars['Datetime']['input'];
  date48HoursAgo: Scalars['Datetime']['input'];
  baseAsset: ChainflipAsset;
  quoteAsset: ChainflipAsset;
}>;


export type GetSpecificPoolSwapsDataQuery = { __typename?: 'Query', currentDayAggregates?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null, distinctCount?: { __typename?: 'PoolSwapDistinctCountAggregates', assetSwappedEventId?: string | null } | null }> | null } | null, previousDayAggregates?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null }> | null } | null };

export type BannerStatusQueryVariables = Exact<{
  app: App;
}>;


export type BannerStatusQuery = { __typename?: 'Query', banner?: { __typename?: 'BannersConnection', nodes: Array<{ __typename?: 'Banner', message: string, type: BannerType }> } | null };

export type CacheValidatorFragment = { __typename?: 'Validator', idHex: string, idSs58: string, alias?: string | null, apyBp?: number | null, boundRedeemAddress?: string | null, processorId?: number | null, totalRewards?: string | null, isCurrentAuthority: boolean, isCurrentBackup: boolean, isQualified: boolean, isOnline: boolean, isBidding: boolean, isKeyholder: boolean, reputationPoints: number, lockedBalance: string, unlockedBalance: string, firstFundingTimestamp: string, latestFundingTimestamp: string };

export type GetMarketDataQueryVariables = Exact<{
  asset: ChainflipAsset;
  numberOfDays: Scalars['Int']['input'];
}>;


export type GetMarketDataQuery = { __typename?: 'Query', marketData: { __typename?: 'MarketData', globalVolume?: number | null, candlesticks: Array<{ __typename?: 'CandlestickData', time: number, open: number, low: number, high: number, close: number } | { __typename?: 'WhitespaceData', time: number }>, volumes: Array<{ __typename?: 'HistogramData', value: number, time: number } | { __typename?: 'WhitespaceData', time: number }>, prices: Array<{ __typename?: 'LineData', time: number, value?: number | null }> } };

export type GetChainTrackingQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type GetChainTrackingQueryQuery = { __typename?: 'Query', allChainTrackings?: { __typename?: 'ChainTrackingsConnection', nodes: Array<{ __typename?: 'ChainTracking', chain: ChainflipChain, height: string }> } | null };

export type GetLatestAuctionQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLatestAuctionQuery = { __typename?: 'Query', auction?: { __typename?: 'Auction', minActiveBid?: string | null, startBlockNumber: number, endBlockNumber: number, currentHeight: number, projectedLockup?: string | null, redemptionPeriodAsPercentage: number, targetSetSize: number } | null };

export type GetLatestEpochsQueryVariables = Exact<{
  limit: Scalars['Int']['input'];
}>;


export type GetLatestEpochsQuery = { __typename?: 'Query', latestEpoch?: { __typename?: 'EpochesConnection', nodes: Array<{ __typename?: 'Epoch', id: number, rotationEvents: { __typename?: 'RotationEventsConnection', nodes: Array<{ __typename?: 'RotationEvent', id: number, type: RotationEventType, event: { __typename?: 'Event', id: string, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string, hash: string } } }> } }> } | null };

export type GetPendingDepositsQueryVariables = Exact<{
  address: Scalars['String']['input'];
  chain: Scalars['String']['input'];
  asset: Scalars['String']['input'];
}>;


export type GetPendingDepositsQuery = { __typename?: 'Query', pendingDeposits: Array<{ __typename?: 'PendingDeposit', amount: string } | null> };

export type GetLpCollectedFeesQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetLpCollectedFeesQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', collectedFees: { __typename?: 'CollectedFeesConnection', aggregates?: { __typename?: 'CollectedFeeAggregates', sum?: { __typename?: 'CollectedFeeSumAggregates', valueUsd: string } | null } | null } } | null } | null };

export type GetAllLpsCollectedFeesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllLpsCollectedFeesQuery = { __typename?: 'Query', allCollectedFees?: { __typename?: 'CollectedFeesConnection', aggregates?: { __typename?: 'CollectedFeeAggregates', sum?: { __typename?: 'CollectedFeeSumAggregates', valueUsd: string } | null } | null } | null };

export type GetOpenPoolOrdersQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetOpenPoolOrdersQuery = { __typename?: 'Query', lpAccountByIdSs58?: { __typename?: 'LpAccount', openOrders: any } | null };

export type GetTradeHistoryByAccountQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  idSs58: Scalars['String']['input'];
}>;


export type GetTradeHistoryByAccountQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', tradeHistory: { __typename?: 'PoolOrdersConnection', nodes: Array<{ __typename?: 'PoolOrder', id: number, orderId: string, liquidityProviderId: number, orderType: PoolOrderType, status: PoolOrderStatus, lowerTick: string, upperTick: string, filledQuoteAmount: string, quoteAsset: ChainflipAsset, quoteAmount: string, quoteCollectedFees: string, quoteCollectedFeesUsd: string, baseAsset: ChainflipAsset, filledBaseAmount: string, baseAmount: string, baseCollectedFees: string, baseCollectedFeesUsd: string, orderCreatedEventId: string, orderLastUpdatedEventId?: string | null }> } } | null } | null };

export type GetOrdersByAccountQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  idSs58: Scalars['String']['input'];
}>;


export type GetOrdersByAccountQuery = { __typename?: 'Query', account?: { __typename?: 'Account', lp?: { __typename?: 'LiquidityProvider', tradeHistory: { __typename?: 'PoolOrdersConnection', nodes: Array<{ __typename?: 'PoolOrder', id: number, orderId: string, liquidityProviderId: number, orderType: PoolOrderType, status: PoolOrderStatus, lowerTick: string, upperTick: string, filledQuoteAmount: string, quoteAsset: ChainflipAsset, quoteAmount: string, quoteCollectedFees: string, quoteCollectedFeesUsd: string, baseAsset: ChainflipAsset, filledBaseAmount: string, baseAmount: string, baseCollectedFees: string, baseCollectedFeesUsd: string, orderCreatedEventId: string, orderLastUpdatedEventId?: string | null }> }, allOrders: { __typename?: 'PoolOrdersConnection', nodes: Array<{ __typename?: 'PoolOrder', id: number, orderId: string, liquidityProviderId: number, orderType: PoolOrderType, status: PoolOrderStatus, lowerTick: string, upperTick: string, filledQuoteAmount: string, quoteAsset: ChainflipAsset, quoteAmount: string, quoteCollectedFees: string, quoteCollectedFeesUsd: string, baseAsset: ChainflipAsset, filledBaseAmount: string, baseAmount: string, baseCollectedFees: string, baseCollectedFeesUsd: string, orderCreatedEventId: string, orderLastUpdatedEventId?: string | null }> } } | null } | null };

export type PoolOrderFragment = { __typename?: 'PoolOrder', id: number, orderId: string, liquidityProviderId: number, orderType: PoolOrderType, status: PoolOrderStatus, lowerTick: string, upperTick: string, filledQuoteAmount: string, quoteAsset: ChainflipAsset, quoteAmount: string, quoteCollectedFees: string, quoteCollectedFeesUsd: string, baseAsset: ChainflipAsset, filledBaseAmount: string, baseAmount: string, baseCollectedFees: string, baseCollectedFeesUsd: string, orderCreatedEventId: string, orderLastUpdatedEventId?: string | null };

export type GetCachePoolsQueryVariables = Exact<{
  baseAsset?: InputMaybe<ChainflipAsset>;
}>;


export type GetCachePoolsQuery = { __typename?: 'Query', pools?: { __typename?: 'PoolsConnection', nodes: Array<{ __typename?: 'Pool', baseAsset: ChainflipAsset, quoteAsset: ChainflipAsset, price: number, rangeOrderPrice: number, baseLiquidityAmount: string, quoteLiquidityAmount: string, liquidityFeeHundredthPips: number }> } | null };

export type GetPoolTableDataQueryVariables = Exact<{
  date24HoursAgo: Scalars['Datetime']['input'];
  date48HoursAgo: Scalars['Datetime']['input'];
}>;


export type GetPoolTableDataQuery = { __typename?: 'Query', currentDayAggregates?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null }> | null } | null, previousDayAggregates?: { __typename?: 'PoolSwapsConnection', groupedAggregates?: Array<{ __typename?: 'PoolSwapAggregates', fromAssetToAsset?: Array<string> | null, sum?: { __typename?: 'PoolSwapSumAggregates', toValueUsd: string, liquidityFeeValueUsd: string } | null }> | null } | null };

export type GetAllEnvironmentAddressesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllEnvironmentAddressesQuery = { __typename?: 'Query', allEnvironmentAddresses?: { __typename?: 'EnvironmentAddressesConnection', nodes: Array<{ __typename?: 'EnvironmentAddress', redemptionTax: string }> } | null };

export type GetLatestFlipSupplyQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLatestFlipSupplyQueryQuery = { __typename?: 'Query', flipSupply?: { __typename?: 'FlipSupply', totalIssuance: string, offchainFunds: string, annualSystemCompoundedRewards: string } | null };

export type ExecutedRedemptionFragment = { __typename?: 'ExecutedRedemption', txId: string, block: string, amount: string, validatorIdHex: string, blockTimestamp: string };

export type EventWithBlockFragment = { __typename?: 'Event', id: string, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string, hash: string } };

export type EpochWithRotationFragment = { __typename?: 'Epoch', id: number, rotationEvents: { __typename?: 'RotationEventsConnection', nodes: Array<{ __typename?: 'RotationEvent', id: number, type: RotationEventType, event: { __typename?: 'Event', id: string, indexInBlock: number, block: { __typename?: 'Block', id: number, timestamp: string, hash: string } } }> } };

export type ValidatorsQueryVariables = Exact<{ [key: string]: never; }>;


export type ValidatorsQuery = { __typename?: 'Query', validators?: { __typename?: 'ValidatorsConnection', nodes: Array<{ __typename?: 'Validator', idHex: string, idSs58: string, alias?: string | null, apyBp?: number | null, boundRedeemAddress?: string | null, processorId?: number | null, totalRewards?: string | null, isCurrentAuthority: boolean, isCurrentBackup: boolean, isQualified: boolean, isOnline: boolean, isBidding: boolean, isKeyholder: boolean, reputationPoints: number, lockedBalance: string, unlockedBalance: string, firstFundingTimestamp: string, latestFundingTimestamp: string }> } | null };

export type GetValidatorsByWalletAddressQueryVariables = Exact<{
  walletAddress: Scalars['String']['input'];
}>;


export type GetValidatorsByWalletAddressQuery = { __typename?: 'Query', walletValidators: Array<{ __typename?: 'Validator', idHex: string, idSs58: string, alias?: string | null, apyBp?: number | null, boundRedeemAddress?: string | null, processorId?: number | null, totalRewards?: string | null, isCurrentAuthority: boolean, isCurrentBackup: boolean, isQualified: boolean, isOnline: boolean, isBidding: boolean, isKeyholder: boolean, reputationPoints: number, lockedBalance: string, unlockedBalance: string, firstFundingTimestamp: string, latestFundingTimestamp: string }> };

export type GetExecutedRedemptionsByValidatorIdsHexQueryVariables = Exact<{
  accountIds?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
}>;


export type GetExecutedRedemptionsByValidatorIdsHexQuery = { __typename?: 'Query', executedRedemptions?: { __typename?: 'ExecutedRedemptionsConnection', nodes: Array<{ __typename?: 'ExecutedRedemption', txId: string, block: string, amount: string, validatorIdHex: string, blockTimestamp: string }> } | null };

export type GetLatestAuthoritySetQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLatestAuthoritySetQuery = { __typename?: 'Query', currentAuthoritySet?: { __typename?: 'AuthorityMembershipsConnection', nodes: Array<{ __typename?: 'AuthorityMembership', epochId: number }> } | null };

export type GetAccountsRewardsQueryVariables = Exact<{
  accountIds: Array<Scalars['Int']['input']> | Scalars['Int']['input'];
  epochId?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAccountsRewardsQuery = { __typename?: 'Query', historicRewards?: { __typename?: 'AccountEpochBalanceChangesConnection', groupedAggregates?: Array<{ __typename?: 'AccountEpochBalanceChangeAggregates', accountId?: Array<string> | null, sum?: { __typename?: 'AccountEpochBalanceChangeSumAggregates', startOfEpochBalance: string, balanceChange: string, endOfEpochBalance: string } | null }> | null } | null, currentRewards?: { __typename?: 'AccountEpochBalanceChangesConnection', nodes: Array<{ __typename?: 'AccountEpochBalanceChange', accountId: number, startOfEpochBalance: string, balanceChange: string }> } | null };

export type GetAccountsSlashQueryQueryVariables = Exact<{
  accountIds?: InputMaybe<Array<Scalars['Int']['input']> | Scalars['Int']['input']>;
  epochId?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetAccountsSlashQueryQuery = { __typename?: 'Query', slashedEvents?: { __typename?: 'AccountFundingEventsConnection', groupedAggregates?: Array<{ __typename?: 'AccountFundingEventAggregates', accountId?: Array<string> | null, sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null }> | null } | null, currentEpochSlashedEvents?: { __typename?: 'AccountFundingEventsConnection', aggregates?: { __typename?: 'AccountFundingEventAggregates', sum?: { __typename?: 'AccountFundingEventSumAggregates', amount: string } | null } | null } | null };

export type GetValidatorCfeVersionQueryVariables = Exact<{
  idSs58: Scalars['String']['input'];
}>;


export type GetValidatorCfeVersionQuery = { __typename?: 'Query', account?: { __typename?: 'Account', validator?: { __typename?: 'Validator', cfeVersionId: string } | null } | null };

export const PenaltyFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Penalty"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Penalty"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]} as unknown as DocumentNode<PenaltyFragment, unknown>;
export const BlockListBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockListBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}}]}}]} as unknown as DocumentNode<BlockListBlockFragment, unknown>;
export const BlockWithEventsAndExtrinsicsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockWithEventsAndExtrinsics"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stateRoot"}},{"kind":"Field","name":{"kind":"Name","value":"parentHash"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"extrinsicId"},"value":{"kind":"NullValue"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<BlockWithEventsAndExtrinsicsFragment, unknown>;
export const EpochFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Epoch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bond"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"startBlock"},"name":{"kind":"Name","value":"blockByStartBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"endBlock"},"name":{"kind":"Name","value":"blockByEndBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]} as unknown as DocumentNode<EpochFragment, unknown>;
export const EpochWithMembershipsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EpochWithMemberships"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"endBlockId"}},{"kind":"Field","alias":{"kind":"Name","value":"memberships"},"name":{"kind":"Name","value":"authorityMembershipsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"BID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bid"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"cfeVersion"},"name":{"kind":"Name","value":"cfeVersionId"}},{"kind":"Field","alias":{"kind":"Name","value":"totalMemberships"},"name":{"kind":"Name","value":"authorityMembershipsByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"slashedEvents"},"name":{"kind":"Name","value":"accountFundingEventsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"type"},"value":{"kind":"EnumValue","value":"SLASHED"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ACCOUNT_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accountId"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]} as unknown as DocumentNode<EpochWithMembershipsFragment, unknown>;
export const AccountWithPossibleValidatorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountWithPossibleValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Account"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","alias":{"kind":"Name","value":"historicRewards"},"name":{"kind":"Name","value":"accountEpochBalanceChangesByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"endOfEpochBalance"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"endOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"currentRewards"},"name":{"kind":"Name","value":"accountEpochBalanceChangesByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"endOfEpochBalance"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"validatorsByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"lastHeartbeatBlockId"}},{"kind":"Field","alias":{"kind":"Name","value":"cfeVersion"},"name":{"kind":"Name","value":"cfeVersionId"}},{"kind":"Field","alias":{"kind":"Name","value":"membership"},"name":{"kind":"Name","value":"authorityMembershipsByValidatorId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"epochId"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AccountWithPossibleValidatorFragment, unknown>;
export const AuthorityMembershipWithEpochFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthorityMembershipWithEpoch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AuthorityMembership"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"epoch"},"name":{"kind":"Name","value":"epochByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"endBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"bond"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"eventType"},"name":{"kind":"Name","value":"accountFundingEventsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"TYPE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AuthorityMembershipWithEpochFragment, unknown>;
export const AuthorityMembershipWithValidatorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthorityMembershipWithValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AuthorityMembership"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bid"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","alias":{"kind":"Name","value":"fundingEvents"},"name":{"kind":"Name","value":"accountFundingEventsByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"epochId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"TYPE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"keys"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AuthorityMembershipWithValidatorFragment, unknown>;
export const EventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Event"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<EventFragment, unknown>;
export const ExtrinsicFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Extrinsic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Extrinsic"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountBySubmitterId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Event"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Event"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<ExtrinsicFragment, unknown>;
export const AccountFundingEventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountFundingEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AccountFundingEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsic"},"name":{"kind":"Name","value":"extrinsicByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"args"}}]}}]}}]}}]} as unknown as DocumentNode<AccountFundingEventFragment, unknown>;
export const SwapFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Swap"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmDepositReceivedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"egressScheduledEventId"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<SwapFragment, unknown>;
export const LiquidityDepositChannelInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LiquidityDepositChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityDepositChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"liquidityDepositsByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}}]}}]} as unknown as DocumentNode<LiquidityDepositChannelInfoFragment, unknown>;
export const LpAccountWithBalancesFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LpAccountWithBalances"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LpAccount"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"openOrders"}},{"kind":"Field","alias":{"kind":"Name","value":"balances"},"name":{"kind":"Name","value":"depositBalancesByLpIdSs58"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]} as unknown as DocumentNode<LpAccountWithBalancesFragment, unknown>;
export const PoolFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Pool"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pool"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"price"}}]}}]} as unknown as DocumentNode<PoolFragment, unknown>;
export const LiquidityBalanceEventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LiquidityBalanceEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityBalanceEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eventId"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsic"},"name":{"kind":"Name","value":"extrinsicByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"depositChannel"},"name":{"kind":"Name","value":"liquidityDepositChannelByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedBlockId"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<LiquidityBalanceEventFragment, unknown>;
export const RefundAddressesFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RefundAddresses"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityProvider"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bitcoinRefundAddress"}},{"kind":"Field","name":{"kind":"Name","value":"ethereumRefundAddress"}},{"kind":"Field","name":{"kind":"Name","value":"polkadotRefundAddress"}}]}}]} as unknown as DocumentNode<RefundAddressesFragment, unknown>;
export const PoolOrderEventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PoolOrderEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PoolOrderEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"orderType"}},{"kind":"Field","name":{"kind":"Name","value":"baseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"maximumRate"}},{"kind":"Field","name":{"kind":"Name","value":"minimumRate"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}}]}}]}}]} as unknown as DocumentNode<PoolOrderEventFragment, unknown>;
export const SwapAggregatesFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapAggregatesFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapAggregates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"assetAndHour"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"distinctCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<SwapAggregatesFragmentFragment, unknown>;
export const OpenChannelFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpenChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByBrokerId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<OpenChannelFragment, unknown>;
export const BrokerSwapChannelFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BrokerSwapChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpenChannel"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpenChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByBrokerId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<BrokerSwapChannelFragment, unknown>;
export const ChannelInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"expiryBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedBlock"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"expiryEvent"},"name":{"kind":"Name","value":"eventByExpiryEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]} as unknown as DocumentNode<ChannelInfoFragment, unknown>;
export const SwapFeeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapFee"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapFee"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]} as unknown as DocumentNode<SwapFeeFragment, unknown>;
export const SwapInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmMessage"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"ccmDepositReceivedEvent"},"name":{"kind":"Name","value":"eventByCcmDepositReceivedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"scheduledEvent"},"name":{"kind":"Name","value":"eventBySwapScheduledEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"executedEvent"},"name":{"kind":"Name","value":"eventBySwapExecutedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"egressScheduledEvent"},"name":{"kind":"Name","value":"eventByEgressScheduledEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"egressIgnoredEvent"},"name":{"kind":"Name","value":"eventByEgressIgnoredEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"successEvent"},"name":{"kind":"Name","value":"eventByBroadcastSuccessEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"requestedEvent"},"name":{"kind":"Name","value":"eventByBroadcastRequestedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"abortedEvent"},"name":{"kind":"Name","value":"eventByBroadcastAbortedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"transactionPayload"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"channel"},"name":{"kind":"Name","value":"swapChannelByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ChannelInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"swapFeesBySwapId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapFee"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"error"},"name":{"kind":"Name","value":"stateChainErrorByStateChainErrorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"docs"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"expiryBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedBlock"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"expiryEvent"},"name":{"kind":"Name","value":"eventByExpiryEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapFee"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapFee"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]} as unknown as DocumentNode<SwapInfoFragment, unknown>;
export const CacheValidatorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CacheValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Validator"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idHex"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"apyBp"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","name":{"kind":"Name","value":"processorId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRewards"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentAuthority"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentBackup"}},{"kind":"Field","name":{"kind":"Name","value":"isQualified"}},{"kind":"Field","name":{"kind":"Name","value":"isOnline"}},{"kind":"Field","name":{"kind":"Name","value":"isBidding"}},{"kind":"Field","name":{"kind":"Name","value":"isKeyholder"}},{"kind":"Field","name":{"kind":"Name","value":"reputationPoints"}},{"kind":"Field","name":{"kind":"Name","value":"lockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"unlockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"firstFundingTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"latestFundingTimestamp"}}]}}]} as unknown as DocumentNode<CacheValidatorFragment, unknown>;
export const PoolOrderFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PoolOrder"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PoolOrder"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityProviderId"}},{"kind":"Field","name":{"kind":"Name","value":"orderType"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"lowerTick"}},{"kind":"Field","name":{"kind":"Name","value":"upperTick"}},{"kind":"Field","name":{"kind":"Name","value":"filledQuoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"filledBaseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"orderCreatedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"orderLastUpdatedEventId"}}]}}]} as unknown as DocumentNode<PoolOrderFragment, unknown>;
export const ExecutedRedemptionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ExecutedRedemption"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutedRedemption"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"txId"}},{"kind":"Field","name":{"kind":"Name","value":"block"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"validatorIdHex"}},{"kind":"Field","name":{"kind":"Name","value":"blockTimestamp"}}]}}]} as unknown as DocumentNode<ExecutedRedemptionFragment, unknown>;
export const EventWithBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EventWithBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}}]}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}}]} as unknown as DocumentNode<EventWithBlockFragment, unknown>;
export const EpochWithRotationFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EpochWithRotation"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"rotationEvents"},"name":{"kind":"Name","value":"rotationEventsByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"EventWithBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EventWithBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}}]}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}}]} as unknown as DocumentNode<EpochWithRotationFragment, unknown>;
export const GetFundingEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getFundingEvents"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"accountFundingEventsByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"EVENT_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AccountFundingEvent"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountFundingEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AccountFundingEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsic"},"name":{"kind":"Name","value":"extrinsicByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"args"}}]}}]}}]}}]} as unknown as DocumentNode<GetFundingEventsQuery, GetFundingEventsQueryVariables>;
export const GetExtrinsicsByAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getExtrinsicsByAccount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"last"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"before"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"allExtrinsics"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"submitterId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountId"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}},{"kind":"Argument","name":{"kind":"Name","value":"before"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"Variable","name":{"kind":"Name","value":"last"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Extrinsic"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Event"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Extrinsic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Extrinsic"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountBySubmitterId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Event"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<GetExtrinsicsByAccountQuery, GetExtrinsicsByAccountQueryVariables>;
export const PaginatedPenaltiesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"paginatedPenaltiesQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"startBlockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allPenalties"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"startBlockId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Penalty"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Penalty"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Penalty"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]} as unknown as DocumentNode<PaginatedPenaltiesQueryQuery, PaginatedPenaltiesQueryQueryVariables>;
export const PaginatedPenaltiesByValidatorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"paginatedPenaltiesByValidatorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"last"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"before"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"penalties"},"name":{"kind":"Name","value":"allPenalties"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"validatorId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}},{"kind":"Argument","name":{"kind":"Name","value":"before"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"Variable","name":{"kind":"Name","value":"last"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Penalty"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Penalty"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Penalty"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]} as unknown as DocumentNode<PaginatedPenaltiesByValidatorQueryQuery, PaginatedPenaltiesByValidatorQueryQueryVariables>;
export const GetLatestBlocksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLatestBlocks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},"defaultValue":{"kind":"IntValue","value":"10"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"latestBlocks"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlockListBlock"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockListBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}}]}}]} as unknown as DocumentNode<GetLatestBlocksQuery, GetLatestBlocksQueryVariables>;
export const GetTotalBlockCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetTotalBlockCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"latestBlock"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"totalCount"},"name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<GetTotalBlockCountQuery, GetTotalBlockCountQueryVariables>;
export const GetAllBlocksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAllBlocks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlockListBlock"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockListBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}}]}}]} as unknown as DocumentNode<GetAllBlocksQuery, GetAllBlocksQueryVariables>;
export const GetBlockByHashDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getBlockByHash"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"hash"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"blocks"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"hash"},"value":{"kind":"Variable","name":{"kind":"Name","value":"hash"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlockWithEventsAndExtrinsics"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"lastBlocks"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockWithEventsAndExtrinsics"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stateRoot"}},{"kind":"Field","name":{"kind":"Name","value":"parentHash"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"extrinsicId"},"value":{"kind":"NullValue"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBlockByHashQuery, GetBlockByHashQueryVariables>;
export const GetBlockByIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getBlockById"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"blocks"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlockWithEventsAndExtrinsics"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"lastBlocks"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlockWithEventsAndExtrinsics"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Block"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stateRoot"}},{"kind":"Field","name":{"kind":"Name","value":"parentHash"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByBlockId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"extrinsicId"},"value":{"kind":"NullValue"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"extrinsicsByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBlockByIdQuery, GetBlockByIdQueryVariables>;
export const GetBrokerAccountDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBrokerAccountData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channels"},"name":{"kind":"Name","value":"swapChannelsByBrokerId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"commission"},"name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fees"},"name":{"kind":"Name","value":"swapFeesBySwapId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"type"},"value":{"kind":"EnumValue","value":"BROKER"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBrokerAccountDataQuery, GetBrokerAccountDataQueryVariables>;
export const GetBrokerAccountCacheDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBrokerAccountCacheData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerAccountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"flipBalance"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","alias":{"kind":"Name","value":"feesEarned"},"name":{"kind":"Name","value":"brokerAccountEarnedFeesByBrokerAccountIdSs58"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ASSET"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"keys"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBrokerAccountCacheDataQuery, GetBrokerAccountCacheDataQueryVariables>;
export const GetBrokerFeeAndWithdrawalDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBrokerFeeAndWithdrawalData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"feesAndWithdrawals"},"name":{"kind":"Name","value":"brokerFeeAndWithdrawalsByBrokerId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"EVENT_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"eventId"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBrokerFeeAndWithdrawalDataQuery, GetBrokerFeeAndWithdrawalDataQueryVariables>;
export const GetRuntimeVersionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetRuntimeVersion"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allEnvironmentAddresses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runtimeVersion"}}]}}]}}]}}]} as unknown as DocumentNode<GetRuntimeVersionQuery, GetRuntimeVersionQueryVariables>;
export const GetAllEpochsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getAllEpochs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epochs"},"name":{"kind":"Name","value":"allEpoches"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Epoch"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Epoch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bond"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"startBlock"},"name":{"kind":"Name","value":"blockByStartBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"endBlock"},"name":{"kind":"Name","value":"blockByEndBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]} as unknown as DocumentNode<GetAllEpochsQuery, GetAllEpochsQueryVariables>;
export const GetEpochsByIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getEpochsById"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epoch"},"name":{"kind":"Name","value":"epochById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Epoch"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Epoch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bond"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"startBlock"},"name":{"kind":"Name","value":"blockByStartBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"endBlock"},"name":{"kind":"Name","value":"blockByEndBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]} as unknown as DocumentNode<GetEpochsByIdQuery, GetEpochsByIdQueryVariables>;
export const GetAuthorityMembershipsForEpochDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getAuthorityMembershipsForEpoch"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"memberships"},"name":{"kind":"Name","value":"allAuthorityMemberships"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"epochId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"BID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthorityMembershipWithValidator"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthorityMembershipWithValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AuthorityMembership"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bid"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","alias":{"kind":"Name","value":"fundingEvents"},"name":{"kind":"Name","value":"accountFundingEventsByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"epochId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"TYPE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"keys"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetAuthorityMembershipsForEpochQuery, GetAuthorityMembershipsForEpochQueryVariables>;
export const GetActiveAuthorityInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getActiveAuthorityInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epoch"},"name":{"kind":"Name","value":"allEpoches"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"EpochWithMemberships"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"lastBlock"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EpochWithMemberships"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"endBlockId"}},{"kind":"Field","alias":{"kind":"Name","value":"memberships"},"name":{"kind":"Name","value":"authorityMembershipsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"BID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bid"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"cfeVersion"},"name":{"kind":"Name","value":"cfeVersionId"}},{"kind":"Field","alias":{"kind":"Name","value":"totalMemberships"},"name":{"kind":"Name","value":"authorityMembershipsByValidatorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"slashedEvents"},"name":{"kind":"Name","value":"accountFundingEventsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"type"},"value":{"kind":"EnumValue","value":"SLASHED"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ACCOUNT_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accountId"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetActiveAuthorityInfoQuery, GetActiveAuthorityInfoQueryVariables>;
export const GetAuthorityMembershipsForValidatorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getAuthorityMembershipsForValidator"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"memberships"},"name":{"kind":"Name","value":"allAuthorityMemberships"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"validatorId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthorityMembershipWithEpoch"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthorityMembershipWithEpoch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AuthorityMembership"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"reward"}},{"kind":"Field","alias":{"kind":"Name","value":"epoch"},"name":{"kind":"Name","value":"epochByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"endBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"bond"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"eventType"},"name":{"kind":"Name","value":"accountFundingEventsByEpochId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"TYPE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetAuthorityMembershipsForValidatorQuery, GetAuthorityMembershipsForValidatorQueryVariables>;
export const GetValidatorLatestBlockInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getValidatorLatestBlockInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accounts"},"name":{"kind":"Name","value":"allAccounts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AccountWithPossibleValidator"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountWithPossibleValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Account"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","alias":{"kind":"Name","value":"historicRewards"},"name":{"kind":"Name","value":"accountEpochBalanceChangesByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"endOfEpochBalance"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"endOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"currentRewards"},"name":{"kind":"Name","value":"accountEpochBalanceChangesByAccountId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"endOfEpochBalance"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"validatorsByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"lastHeartbeatBlockId"}},{"kind":"Field","alias":{"kind":"Name","value":"cfeVersion"},"name":{"kind":"Name","value":"cfeVersionId"}},{"kind":"Field","alias":{"kind":"Name","value":"membership"},"name":{"kind":"Name","value":"authorityMembershipsByValidatorId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"epochId"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetValidatorLatestBlockInfoQuery, GetValidatorLatestBlockInfoQueryVariables>;
export const GetHistoricalTotalBondDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getHistoricalTotalBond"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epochs"},"name":{"kind":"Name","value":"allEpoches"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_ASC"}},{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"100"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notIn"},"value":{"kind":"ListValue","values":[{"kind":"IntValue","value":"0"},{"kind":"IntValue","value":"1"}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epochId"},"name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"totalBonded"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByStartBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetHistoricalTotalBondQuery, GetHistoricalTotalBondQueryVariables>;
export const GetOnlineAuthorityMemberInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getOnlineAuthorityMemberInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"minEpochStartBlockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epochs"},"name":{"kind":"Name","value":"allEpoches"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"startBlockId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"minEpochStartBlockId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"epochId"},"name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"startBlock"},"name":{"kind":"Name","value":"blockByStartBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"endBlock"},"name":{"kind":"Name","value":"blockByEndBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"members"},"name":{"kind":"Name","value":"authorityMembershipsByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"heartbeats"},"name":{"kind":"Name","value":"authorityHeartbeatsByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"TIMESTAMP_TRUNCATED_TO_HOUR"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"timestampHourUTC"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"distinctCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"validatorId"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetOnlineAuthorityMemberInfoQuery, GetOnlineAuthorityMemberInfoQueryVariables>;
export const GetEventsByBlockIdAndIndexDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetEventsByBlockIdAndIndex"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"blockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"index"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"allEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"blockId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"indexInBlock"},"value":{"kind":"Variable","name":{"kind":"Name","value":"index"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsic"},"name":{"kind":"Name","value":"extrinsicByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"chainspec"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetEventsByBlockIdAndIndexQuery, GetEventsByBlockIdAndIndexQueryVariables>;
export const GetExtrinsicByHashDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getExtrinsicByHash"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"hash"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"allExtrinsics"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"hash"},"value":{"kind":"Variable","name":{"kind":"Name","value":"hash"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Extrinsic"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Event"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Extrinsic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Extrinsic"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountBySubmitterId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Event"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<GetExtrinsicByHashQuery, GetExtrinsicByHashQueryVariables>;
export const GetExtrinsicByBlockIdAndIndexDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getExtrinsicByBlockIdAndIndex"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"blockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"index"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"extrinsics"},"name":{"kind":"Name","value":"allExtrinsics"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"blockId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"indexInBlock"},"value":{"kind":"Variable","name":{"kind":"Name","value":"index"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Extrinsic"}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Event"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Extrinsic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Extrinsic"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"signature"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"tip"}},{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountBySubmitterId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"eventsByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Event"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"metadatumByMetadataId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<GetExtrinsicByBlockIdAndIndexQuery, GetExtrinsicByBlockIdAndIndexQueryVariables>;
export const GetExtrinsicCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getExtrinsicCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allExtrinsics"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<GetExtrinsicCountQuery, GetExtrinsicCountQueryVariables>;
export const GetLiquidityDepositChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLiquidityDepositChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BigInt"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chain"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipChain"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channels"},"name":{"kind":"Name","value":"allLiquidityDepositChannels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"channelId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"chain"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chain"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"issuedBlockId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LiquidityDepositChannelInfo"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LiquidityDepositChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityDepositChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"liquidityDepositsByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}}]}}]} as unknown as DocumentNode<GetLiquidityDepositChannelQuery, GetLiquidityDepositChannelQueryVariables>;
export const GetCacheUndeployedLiquidityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetCacheUndeployedLiquidity"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"lpIdSs58"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"depositBalances"},"name":{"kind":"Name","value":"allDepositBalances"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"lpIdSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"lpIdSs58"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ASSET"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"keys"}}]}}]}}]}}]} as unknown as DocumentNode<GetCacheUndeployedLiquidityQuery, GetCacheUndeployedLiquidityQueryVariables>;
export const GetLastLiquidityDepositDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLastLiquidityDeposit"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"allLiquidityDeposits"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"asset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asset"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLastLiquidityDepositQuery, GetLastLiquidityDepositQueryVariables>;
export const GetLastLiquidityDepositForAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLastLiquidityDepositForAccount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"lpIdSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"lpIdSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"liquidityDepositsByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"asset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asset"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLastLiquidityDepositForAccountQuery, GetLastLiquidityDepositForAccountQueryVariables>;
export const GetFilteredLpAccountsWithBalancesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetFilteredLpAccountsWithBalances"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lps"},"name":{"kind":"Name","value":"allLpAccounts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"includesInsensitive"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"alias"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"includesInsensitive"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LpAccountWithBalances"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"pools"},"name":{"kind":"Name","value":"allPools"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Pool"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LpAccountWithBalances"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LpAccount"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"openOrders"}},{"kind":"Field","alias":{"kind":"Name","value":"balances"},"name":{"kind":"Name","value":"depositBalancesByLpIdSs58"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Pool"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pool"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"price"}}]}}]} as unknown as DocumentNode<GetFilteredLpAccountsWithBalancesQuery, GetFilteredLpAccountsWithBalancesQueryVariables>;
export const GetLpAcccountsWithCollectedFeesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLpAcccountsWithCollectedFees"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allAccounts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fees"},"name":{"kind":"Name","value":"collectedFeesByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLpAcccountsWithCollectedFeesQuery, GetLpAcccountsWithCollectedFeesQueryVariables>;
export const GetLiquidityBalanceChangeEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getLiquidityBalanceChangeEvents"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"events"},"name":{"kind":"Name","value":"liquidityBalanceEventsByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"EVENT_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LiquidityBalanceEvent"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LiquidityBalanceEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityBalanceEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eventId"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"extrinsic"},"name":{"kind":"Name","value":"extrinsicByExtrinsicId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"depositChannel"},"name":{"kind":"Name","value":"liquidityDepositChannelByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedBlockId"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<GetLiquidityBalanceChangeEventsQuery, GetLiquidityBalanceChangeEventsQueryVariables>;
export const GetLpAccountWithRefundAddressesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getLpAccountWithRefundAddresses"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RefundAddresses"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RefundAddresses"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LiquidityProvider"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bitcoinRefundAddress"}},{"kind":"Field","name":{"kind":"Name","value":"ethereumRefundAddress"}},{"kind":"Field","name":{"kind":"Name","value":"polkadotRefundAddress"}}]}}]} as unknown as DocumentNode<GetLpAccountWithRefundAddressesQuery, GetLpAccountWithRefundAddressesQueryVariables>;
export const GetPoolActivityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPoolActivity"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"last"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"before"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"poolOrders"},"name":{"kind":"Name","value":"allPoolOrderEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}},{"kind":"Argument","name":{"kind":"Name","value":"before"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"Variable","name":{"kind":"Name","value":"last"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"quoteAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PoolOrderEvent"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PoolOrderEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PoolOrderEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"orderType"}},{"kind":"Field","name":{"kind":"Name","value":"baseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"maximumRate"}},{"kind":"Field","name":{"kind":"Name","value":"minimumRate"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"blockId"}}]}}]}}]} as unknown as DocumentNode<GetPoolActivityQuery, GetPoolActivityQueryVariables>;
export const GetPoolAggregatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPoolAggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"poolSwaps"},"name":{"kind":"Name","value":"allPoolSwaps"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetPoolAggregatesQuery, GetPoolAggregatesQueryVariables>;
export const GetPoolAggregatesByDateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPoolAggregatesByDate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"startingTimestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"endingTimestamp"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"poolSwaps"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"startingTimestamp"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"endingTimestamp"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetPoolAggregatesByDateQuery, GetPoolAggregatesByDateQueryVariables>;
export const GetPoolAggregatesByDateTruncatedToHourDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPoolAggregatesByDateTruncatedToHour"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"startingTimestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"endingTimestamp"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"poolSwaps"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"startingTimestamp"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"endingTimestamp"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"},{"kind":"EnumValue","value":"ASSET_SWAPPED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAssetDate"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetPoolAggregatesByDateTruncatedToHourQuery, GetPoolAggregatesByDateTruncatedToHourQueryVariables>;
export const GetEnvironmentAddressDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetEnvironmentAddress"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"environmentAddress"},"name":{"kind":"Name","value":"environmentAddressById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"keyManagerAddress"}},{"kind":"Field","name":{"kind":"Name","value":"stateChainGatewayAddress"}}]}}]}}]} as unknown as DocumentNode<GetEnvironmentAddressQuery, GetEnvironmentAddressQueryVariables>;
export const GetValidatorByIdSs58Document = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetValidatorByIdSs58"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"allValidators"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"validatorId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CacheValidator"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CacheValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Validator"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idHex"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"apyBp"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","name":{"kind":"Name","value":"processorId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRewards"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentAuthority"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentBackup"}},{"kind":"Field","name":{"kind":"Name","value":"isQualified"}},{"kind":"Field","name":{"kind":"Name","value":"isOnline"}},{"kind":"Field","name":{"kind":"Name","value":"isBidding"}},{"kind":"Field","name":{"kind":"Name","value":"isKeyholder"}},{"kind":"Field","name":{"kind":"Name","value":"reputationPoints"}},{"kind":"Field","name":{"kind":"Name","value":"lockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"unlockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"firstFundingTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"latestFundingTimestamp"}}]}}]} as unknown as DocumentNode<GetValidatorByIdSs58Query, GetValidatorByIdSs58QueryVariables>;
export const GetActiveCacheValidatorsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetActiveCacheValidators"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"allValidators"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isCurrentAuthority"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"BooleanValue","value":true}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isCurrentBackup"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"BooleanValue","value":true}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CacheValidator"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CacheValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Validator"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idHex"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"apyBp"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","name":{"kind":"Name","value":"processorId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRewards"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentAuthority"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentBackup"}},{"kind":"Field","name":{"kind":"Name","value":"isQualified"}},{"kind":"Field","name":{"kind":"Name","value":"isOnline"}},{"kind":"Field","name":{"kind":"Name","value":"isBidding"}},{"kind":"Field","name":{"kind":"Name","value":"isKeyholder"}},{"kind":"Field","name":{"kind":"Name","value":"reputationPoints"}},{"kind":"Field","name":{"kind":"Name","value":"lockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"unlockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"firstFundingTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"latestFundingTimestamp"}}]}}]} as unknown as DocumentNode<GetActiveCacheValidatorsQuery, GetActiveCacheValidatorsQueryVariables>;
export const GetAllSwapsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAllSwaps"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"destinationAddress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"destinationAddress"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"includesInsensitive"},"value":{"kind":"Variable","name":{"kind":"Name","value":"destinationAddress"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Swap"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Swap"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmDepositReceivedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"egressScheduledEventId"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<GetAllSwapsQuery, GetAllSwapsQueryVariables>;
export const GetSwapByNativeIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSwapByNativeId"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"nativeId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BigInt"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"swap"},"name":{"kind":"Name","value":"swapByNativeId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"nativeId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"nativeId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Swap"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Swap"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmDepositReceivedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"egressScheduledEventId"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<GetSwapByNativeIdQuery, GetSwapByNativeIdQueryVariables>;
export const GetAllSwapsByAssetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAllSwapsByAsset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"sourceAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"destinationAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Swap"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Swap"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmDepositReceivedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"egressScheduledEventId"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}}]}}]}}]} as unknown as DocumentNode<GetAllSwapsByAssetQuery, GetAllSwapsByAssetQueryVariables>;
export const GetSwapAggregatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSwapAggregates"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"minSwapScheduledTimestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}},"defaultValue":{"kind":"StringValue","value":"2013-01-01T00:00:00.000Z","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"maxSwapScheduledTimestamp"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"oneHopSwaps"},"name":{"kind":"Name","value":"allSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"and"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"intermediateAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"minSwapScheduledTimestamp"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"maxSwapScheduledTimestamp"}}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"aggregatesBySourceAsset"},"name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"SOURCE_ASSET"},{"kind":"EnumValue","value":"SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapAggregatesFragment"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"aggregatesByDestAsset"},"name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"DESTINATION_ASSET"},{"kind":"EnumValue","value":"SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapAggregatesFragment"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"twoHopSwaps"},"name":{"kind":"Name","value":"allSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"and"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"intermediateAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"minSwapScheduledTimestamp"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"maxSwapScheduledTimestamp"}}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"aggregatesBySourceAsset"},"name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"SOURCE_ASSET"},{"kind":"EnumValue","value":"SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapAggregatesFragment"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"aggregatesByDestAsset"},"name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"DESTINATION_ASSET"},{"kind":"EnumValue","value":"SWAP_SCHEDULED_BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapAggregatesFragment"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapAggregatesFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapAggregates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"assetAndHour"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"distinctCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<GetSwapAggregatesQuery, GetSwapAggregatesQueryVariables>;
export const GetSwapChannelDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSwapChannelData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BigInt"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sourceChain"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipChain"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channel"},"name":{"kind":"Name","value":"swapChannelByIssuedBlockIdAndSourceChainAndChannelId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"channelId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}}},{"kind":"Argument","name":{"kind":"Name","value":"issuedBlockId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}}},{"kind":"Argument","name":{"kind":"Name","value":"sourceChain"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sourceChain"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ChannelInfo"}},{"kind":"Field","alias":{"kind":"Name","value":"ignoredDeposits"},"name":{"kind":"Name","value":"ignoredDepositsBySwapDepositChannelId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"EVENT_ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByBrokerId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"NATIVE_ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"swapScheduledBlockTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","alias":{"kind":"Name","value":"executedEvent"},"name":{"kind":"Name","value":"eventBySwapExecutedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"swapFeesBySwapId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapFee"}}]}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"lastBlock"},"name":{"kind":"Name","value":"allBlocks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"expiryBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedBlock"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"expiryEvent"},"name":{"kind":"Name","value":"eventByExpiryEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapFee"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapFee"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]} as unknown as DocumentNode<GetSwapChannelDataQuery, GetSwapChannelDataQueryVariables>;
export const GetOpenSwapChannelsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetOpenSwapChannels"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channels"},"name":{"kind":"Name","value":"allSwapChannels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isExpired"},"value":{"kind":"BooleanValue","value":false}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ISSUED_EVENT_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpenChannel"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpenChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByBrokerId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetOpenSwapChannelsQuery, GetOpenSwapChannelsQueryVariables>;
export const GetSwapChannelsByBrokerIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSwapChannelsByBrokerId"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channels"},"name":{"kind":"Name","value":"swapChannelsByBrokerId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ISSUED_EVENT_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BrokerSwapChannel"}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpenChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broker"},"name":{"kind":"Name","value":"brokerByBrokerId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"swaps"},"name":{"kind":"Name","value":"swapsByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BrokerSwapChannel"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpenChannel"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}}]}}]} as unknown as DocumentNode<GetSwapChannelsByBrokerIdQuery, GetSwapChannelsByBrokerIdQueryVariables>;
export const GetSwapDataByNativeIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSwapDataByNativeId"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"nativeId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BigInt"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"swap"},"name":{"kind":"Name","value":"swapByNativeId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"nativeId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"nativeId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapInfo"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ChannelInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapChannel"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"expiryBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"issuedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"brokerCommissionRate"}},{"kind":"Field","name":{"kind":"Name","value":"isExpired"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChainExpiryBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"issuedBlock"},"name":{"kind":"Name","value":"blockByIssuedBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"issuedEvent"},"name":{"kind":"Name","value":"eventByIssuedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"expiryEvent"},"name":{"kind":"Name","value":"eventByExpiryEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapFee"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SwapFee"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SwapInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Swap"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nativeId"}},{"kind":"Field","name":{"kind":"Name","value":"sourceAsset"}},{"kind":"Field","name":{"kind":"Name","value":"sourceChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAsset"}},{"kind":"Field","name":{"kind":"Name","value":"destinationChain"}},{"kind":"Field","name":{"kind":"Name","value":"destinationAddress"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","name":{"kind":"Name","value":"depositValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"egressAmount"}},{"kind":"Field","name":{"kind":"Name","value":"egressValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateAmount"}},{"kind":"Field","name":{"kind":"Name","value":"intermediateValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"ccmMessage"}},{"kind":"Field","name":{"kind":"Name","value":"egressIgnoredEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"ccmDepositReceivedEvent"},"name":{"kind":"Name","value":"eventByCcmDepositReceivedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"scheduledEvent"},"name":{"kind":"Name","value":"eventBySwapScheduledEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"executedEvent"},"name":{"kind":"Name","value":"eventBySwapExecutedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"egressScheduledEvent"},"name":{"kind":"Name","value":"eventByEgressScheduledEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"egressIgnoredEvent"},"name":{"kind":"Name","value":"eventByEgressIgnoredEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"broadcast"},"name":{"kind":"Name","value":"broadcastByBroadcastId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"broadcastRequestedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastAbortedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"broadcastSuccessEventId"}},{"kind":"Field","alias":{"kind":"Name","value":"successEvent"},"name":{"kind":"Name","value":"eventByBroadcastSuccessEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"requestedEvent"},"name":{"kind":"Name","value":"eventByBroadcastRequestedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"abortedEvent"},"name":{"kind":"Name","value":"eventByBroadcastAbortedEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"transactionPayload"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"channel"},"name":{"kind":"Name","value":"swapChannelByDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ChannelInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"swapFeesBySwapId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SwapFee"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"error"},"name":{"kind":"Name","value":"stateChainErrorByStateChainErrorId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"docs"}}]}}]}}]} as unknown as DocumentNode<GetSwapDataByNativeIdQuery, GetSwapDataByNativeIdQueryVariables>;
export const GetLastDepositsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getLastDeposits"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"liquidityDepositsByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"3"}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","alias":{"kind":"Name","value":"channel"},"name":{"kind":"Name","value":"liquidityDepositChannelByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"issuedBlockId"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLastDepositsQuery, GetLastDepositsQueryVariables>;
export const GetDepositsForSpecificLiquidityDepositChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getDepositsForSpecificLiquidityDepositChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BigInt"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chain"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipChain"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"channels"},"name":{"kind":"Name","value":"allLiquidityDepositChannels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"channelId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channelId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"chain"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chain"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"issuedBlockId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"issuedBlockId"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"channelId"}},{"kind":"Field","alias":{"kind":"Name","value":"deposits"},"name":{"kind":"Name","value":"liquidityDepositsByLiquidityDepositChannelId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"depositAmount"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"blockId"}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"depositAddress"}}]}}]}}]}}]} as unknown as DocumentNode<GetDepositsForSpecificLiquidityDepositChannelQuery, GetDepositsForSpecificLiquidityDepositChannelQueryVariables>;
export const GetCollectedFeesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getCollectedFees"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"poolOrderEvents"},"name":{"kind":"Name","value":"poolOrdersByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseAsset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFeesUsd"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetCollectedFeesQuery, GetCollectedFeesQueryVariables>;
export const GetSpecificPoolSwapsDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getSpecificPoolSwapsData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date48HoursAgo"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"quoteAsset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"currentDayAggregates"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"fromAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Variable","name":{"kind":"Name","value":"quoteAsset"}}]}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"toAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Variable","name":{"kind":"Name","value":"quoteAsset"}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}},{"kind":"Field","name":{"kind":"Name","value":"distinctCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetSwappedEventId"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"previousDayAggregates"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date48HoursAgo"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThan"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"fromAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Variable","name":{"kind":"Name","value":"quoteAsset"}}]}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"toAsset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Variable","name":{"kind":"Name","value":"quoteAsset"}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetSpecificPoolSwapsDataQuery, GetSpecificPoolSwapsDataQueryVariables>;
export const BannerStatusDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"BannerStatus"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"app"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"App"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"banner"},"name":{"kind":"Name","value":"allBanners"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"app"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"app"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"app"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"ALL"}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]}}]} as unknown as DocumentNode<BannerStatusQuery, BannerStatusQueryVariables>;
export const GetMarketDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetMarketData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"numberOfDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"marketData"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"asset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asset"}}},{"kind":"Argument","name":{"kind":"Name","value":"numberOfDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"numberOfDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"candlesticks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CandlestickData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"time"}},{"kind":"Field","name":{"kind":"Name","value":"open"}},{"kind":"Field","name":{"kind":"Name","value":"low"}},{"kind":"Field","name":{"kind":"Name","value":"high"}},{"kind":"Field","name":{"kind":"Name","value":"close"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"WhitespaceData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"time"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"volumes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HistogramData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}},{"kind":"Field","name":{"kind":"Name","value":"time"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"WhitespaceData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"time"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"prices"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"time"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"globalVolume"}}]}}]}}]} as unknown as DocumentNode<GetMarketDataQuery, GetMarketDataQueryVariables>;
export const GetChainTrackingQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetChainTrackingQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allChainTrackings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chain"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}}]}}]}}]} as unknown as DocumentNode<GetChainTrackingQueryQuery, GetChainTrackingQueryQueryVariables>;
export const GetLatestAuctionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLatestAuction"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"auction"},"name":{"kind":"Name","value":"auctionById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"minActiveBid"}},{"kind":"Field","name":{"kind":"Name","value":"startBlockNumber"}},{"kind":"Field","name":{"kind":"Name","value":"endBlockNumber"}},{"kind":"Field","name":{"kind":"Name","value":"currentHeight"}},{"kind":"Field","name":{"kind":"Name","value":"projectedLockup"}},{"kind":"Field","name":{"kind":"Name","value":"redemptionPeriodAsPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"targetSetSize"}}]}}]}}]} as unknown as DocumentNode<GetLatestAuctionQuery, GetLatestAuctionQueryVariables>;
export const GetLatestEpochsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLatestEpochs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"latestEpoch"},"name":{"kind":"Name","value":"allEpoches"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"EpochWithRotation"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EventWithBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Event"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"block"},"name":{"kind":"Name","value":"blockByBlockId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"hash"}}]}},{"kind":"Field","name":{"kind":"Name","value":"indexInBlock"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EpochWithRotation"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Epoch"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"rotationEvents"},"name":{"kind":"Name","value":"rotationEventsByEpochId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","alias":{"kind":"Name","value":"event"},"name":{"kind":"Name","value":"eventByEventId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"EventWithBlock"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLatestEpochsQuery, GetLatestEpochsQueryVariables>;
export const GetPendingDepositsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getPendingDeposits"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"address"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chain"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pendingDeposits"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"address"},"value":{"kind":"Variable","name":{"kind":"Name","value":"address"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"chain"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chain"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"asset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asset"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]} as unknown as DocumentNode<GetPendingDepositsQuery, GetPendingDepositsQueryVariables>;
export const GetLpCollectedFeesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getLpCollectedFees"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"collectedFees"},"name":{"kind":"Name","value":"collectedFeesByLiquidityProviderId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLpCollectedFeesQuery, GetLpCollectedFeesQueryVariables>;
export const GetAllLpsCollectedFeesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getAllLpsCollectedFees"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allCollectedFees"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetAllLpsCollectedFeesQuery, GetAllLpsCollectedFeesQueryVariables>;
export const GetOpenPoolOrdersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getOpenPoolOrders"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lpAccountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"openOrders"}}]}}]}}]} as unknown as DocumentNode<GetOpenPoolOrdersQuery, GetOpenPoolOrdersQueryVariables>;
export const GetTradeHistoryByAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getTradeHistoryByAccount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"tradeHistory"},"name":{"kind":"Name","value":"poolOrdersByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"orderType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"LIMIT"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"filledBaseAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"filledQuoteAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"orderType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"RANGE"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseCollectedFees"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"quoteCollectedFees"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PoolOrder"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PoolOrder"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PoolOrder"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityProviderId"}},{"kind":"Field","name":{"kind":"Name","value":"orderType"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"lowerTick"}},{"kind":"Field","name":{"kind":"Name","value":"upperTick"}},{"kind":"Field","name":{"kind":"Name","value":"filledQuoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"filledBaseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"orderCreatedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"orderLastUpdatedEventId"}}]}}]} as unknown as DocumentNode<GetTradeHistoryByAccountQuery, GetTradeHistoryByAccountQueryVariables>;
export const GetOrdersByAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getOrdersByAccount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"lp"},"name":{"kind":"Name","value":"liquidityProviderByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"tradeHistory"},"name":{"kind":"Name","value":"poolOrdersByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"orderType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"LIMIT"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"filledBaseAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"filledQuoteAmount"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"orderType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"RANGE"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseCollectedFees"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"quoteCollectedFees"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"notEqualTo"},"value":{"kind":"StringValue","value":"0","block":false}}]}}]}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PoolOrder"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"allOrders"},"name":{"kind":"Name","value":"poolOrdersByLiquidityProviderId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PoolOrder"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PoolOrder"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PoolOrder"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityProviderId"}},{"kind":"Field","name":{"kind":"Name","value":"orderType"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"lowerTick"}},{"kind":"Field","name":{"kind":"Name","value":"upperTick"}},{"kind":"Field","name":{"kind":"Name","value":"filledQuoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"quoteCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"filledBaseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseAmount"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFees"}},{"kind":"Field","name":{"kind":"Name","value":"baseCollectedFeesUsd"}},{"kind":"Field","name":{"kind":"Name","value":"orderCreatedEventId"}},{"kind":"Field","name":{"kind":"Name","value":"orderLastUpdatedEventId"}}]}}]} as unknown as DocumentNode<GetOrdersByAccountQuery, GetOrdersByAccountQueryVariables>;
export const GetCachePoolsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetCachePools"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"pools"},"name":{"kind":"Name","value":"allPools"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"condition"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"baseAsset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"baseAsset"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"baseAsset"}},{"kind":"Field","name":{"kind":"Name","value":"quoteAsset"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"rangeOrderPrice"}},{"kind":"Field","name":{"kind":"Name","value":"baseLiquidityAmount"}},{"kind":"Field","name":{"kind":"Name","value":"quoteLiquidityAmount"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeHundredthPips"}}]}}]}}]}}]} as unknown as DocumentNode<GetCachePoolsQuery, GetCachePoolsQueryVariables>;
export const GetPoolTableDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPoolTableData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date48HoursAgo"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"currentDayAggregates"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"previousDayAggregates"},"name":{"kind":"Name","value":"allPoolSwaps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"assetSwappedBlockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date48HoursAgo"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThan"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date24HoursAgo"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FROM_ASSET"},{"kind":"EnumValue","value":"TO_ASSET"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"fromAssetToAsset"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"toValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"liquidityFeeValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetPoolTableDataQuery, GetPoolTableDataQueryVariables>;
export const GetAllEnvironmentAddressesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAllEnvironmentAddresses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allEnvironmentAddresses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"redemptionTax"}}]}}]}}]}}]} as unknown as DocumentNode<GetAllEnvironmentAddressesQuery, GetAllEnvironmentAddressesQueryVariables>;
export const GetLatestFlipSupplyQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLatestFlipSupplyQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"flipSupply"},"name":{"kind":"Name","value":"flipSupplyById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalIssuance"}},{"kind":"Field","name":{"kind":"Name","value":"offchainFunds"}},{"kind":"Field","name":{"kind":"Name","value":"annualSystemCompoundedRewards"}}]}}]}}]} as unknown as DocumentNode<GetLatestFlipSupplyQueryQuery, GetLatestFlipSupplyQueryQueryVariables>;
export const ValidatorsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Validators"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"validators"},"name":{"kind":"Name","value":"allValidators"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CacheValidator"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CacheValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Validator"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idHex"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"apyBp"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","name":{"kind":"Name","value":"processorId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRewards"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentAuthority"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentBackup"}},{"kind":"Field","name":{"kind":"Name","value":"isQualified"}},{"kind":"Field","name":{"kind":"Name","value":"isOnline"}},{"kind":"Field","name":{"kind":"Name","value":"isBidding"}},{"kind":"Field","name":{"kind":"Name","value":"isKeyholder"}},{"kind":"Field","name":{"kind":"Name","value":"reputationPoints"}},{"kind":"Field","name":{"kind":"Name","value":"lockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"unlockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"firstFundingTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"latestFundingTimestamp"}}]}}]} as unknown as DocumentNode<ValidatorsQuery, ValidatorsQueryVariables>;
export const GetValidatorsByWalletAddressDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetValidatorsByWalletAddress"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"walletAddress"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"walletValidators"},"name":{"kind":"Name","value":"validatorsByWalletAddress"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"address"},"value":{"kind":"Variable","name":{"kind":"Name","value":"walletAddress"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CacheValidator"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CacheValidator"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Validator"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"idHex"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}},{"kind":"Field","name":{"kind":"Name","value":"alias"}},{"kind":"Field","name":{"kind":"Name","value":"apyBp"}},{"kind":"Field","name":{"kind":"Name","value":"boundRedeemAddress"}},{"kind":"Field","name":{"kind":"Name","value":"processorId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRewards"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentAuthority"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentBackup"}},{"kind":"Field","name":{"kind":"Name","value":"isQualified"}},{"kind":"Field","name":{"kind":"Name","value":"isOnline"}},{"kind":"Field","name":{"kind":"Name","value":"isBidding"}},{"kind":"Field","name":{"kind":"Name","value":"isKeyholder"}},{"kind":"Field","name":{"kind":"Name","value":"reputationPoints"}},{"kind":"Field","name":{"kind":"Name","value":"lockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"unlockedBalance"}},{"kind":"Field","name":{"kind":"Name","value":"firstFundingTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"latestFundingTimestamp"}}]}}]} as unknown as DocumentNode<GetValidatorsByWalletAddressQuery, GetValidatorsByWalletAddressQueryVariables>;
export const GetExecutedRedemptionsByValidatorIdsHexDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetExecutedRedemptionsByValidatorIdsHex"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"executedRedemptions"},"name":{"kind":"Name","value":"allExecutedRedemptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"validatorIdHex"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"BLOCK_TIMESTAMP_DESC"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ExecutedRedemption"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ExecutedRedemption"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutedRedemption"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"txId"}},{"kind":"Field","name":{"kind":"Name","value":"block"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"validatorIdHex"}},{"kind":"Field","name":{"kind":"Name","value":"blockTimestamp"}}]}}]} as unknown as DocumentNode<GetExecutedRedemptionsByValidatorIdsHexQuery, GetExecutedRedemptionsByValidatorIdsHexQueryVariables>;
export const GetLatestAuthoritySetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLatestAuthoritySet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"currentAuthoritySet"},"name":{"kind":"Name","value":"allAuthorityMemberships"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"EPOCH_ID_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"epochId"}}]}}]}}]}}]} as unknown as DocumentNode<GetLatestAuthoritySetQuery, GetLatestAuthoritySetQueryVariables>;
export const GetAccountsRewardsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAccountsRewards"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"historicRewards"},"name":{"kind":"Name","value":"allAccountEpochBalanceChanges"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"endOfEpochBalance"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isNull"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ACCOUNT_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accountId"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}},{"kind":"Field","name":{"kind":"Name","value":"endOfEpochBalance"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"currentRewards"},"name":{"kind":"Name","value":"allAccountEpochBalanceChanges"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"epochId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"accountId"}},{"kind":"Field","name":{"kind":"Name","value":"startOfEpochBalance"}},{"kind":"Field","name":{"kind":"Name","value":"balanceChange"}}]}}]}}]}}]} as unknown as DocumentNode<GetAccountsRewardsQuery, GetAccountsRewardsQueryVariables>;
export const GetAccountsSlashQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAccountsSlashQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"slashedEvents"},"name":{"kind":"Name","value":"allAccountFundingEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"and"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"SLASHED"}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"ACCOUNT_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accountId"},"name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"currentEpochSlashedEvents"},"name":{"kind":"Name","value":"allAccountFundingEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accountId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"accountIds"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"and"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"EnumValue","value":"SLASHED"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"and"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"epochId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"epochId"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetAccountsSlashQueryQuery, GetAccountsSlashQueryQueryVariables>;
export const GetValidatorCfeVersionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetValidatorCfeVersion"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account"},"name":{"kind":"Name","value":"accountByIdSs58"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idSs58"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idSs58"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"validator"},"name":{"kind":"Name","value":"validatorByAccountId"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cfeVersionId"}}]}}]}}]}}]} as unknown as DocumentNode<GetValidatorCfeVersionQuery, GetValidatorCfeVersionQueryVariables>;